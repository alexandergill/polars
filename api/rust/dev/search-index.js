var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","gt_eq","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","lt_eq","","","","","","","max","","max_binary","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","num_falses","num_trues","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","can_have_dtype","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","contains_categoricals","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_or_infer","get_or_infer_with","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","","","new_dimension","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_fixed_size_list","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","align_chunks_par","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","apply_unary_elementwise","arg_sort","array","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","struct_","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_str","try_struct","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","Bytes","","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","Deserialized","","DfTake","Dictionary","Diff","Dimension","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Equiprobable","","Err","EscapeRegex","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","","GtEq","","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","","Hour","IDX_DTYPE","IEJoin","IEJoinOptions","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InequalityOperator","Infer","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Intersect","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","LazySerde","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","","List","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","","LowerBound","Lowercase","Lt","","LtEq","","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","OpaqueColumnUdf","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Partitioned","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","ReshapeDimension","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","Semi","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Specified","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_anti_semi_join","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_semi_anti_join_from_series","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_missing_columns","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","and_reduce","anonymous_scan","anti_join","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","boxed_metadata","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_ones","count_rows","count_rows_from_slice","count_zeros","create_enum_dtype","create_left_df_chunked","create_sorting_map","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalentescape_regex","escape_regex_str","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","hash_join_semi_anti","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_cross","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_ie","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","","lazy","","le","leading_ones","leading_zeros","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","line_terminator","list","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","","materialize_empty_df","materialize_projection","materialize_unknown_dtypes","max","","","","","","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","method","","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_cyclic_in","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","operator1","operator2","optimize","options","or","or_reduce","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","rechunk_validity","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_encode","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","semi_join","separator","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","trailing_ones","trailing_zeros","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse","try_parse_dates","try_parse_interval","try_pin","try_pin_in","try_serialize","","","try_set_sorted_flag","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","xor_reduce","year","","","","zip","zip_with","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","EscapeRegex","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","escape_regex","escape_regex_str","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompareEq","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","first","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","last","len","","limit","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lit","lt","","","lt_eq","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","or_reduce","phys_iter","product","quantile_reduce","rechunk","rechunk_validity","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_struct","try_sub_owned","try_time","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Add","Div","FloorDiv","LhsNumOps","Mul","NumOpsDispatch","NumOpsDispatchInner","NumericListOp","Output","Rem","Sub","__clone_box","_struct_arithmetic","add","add_to","","borrow","borrow_mut","checked","clone","clone_into","clone_to_uninit","deref","deref_mut","div","divide","","drop","execute","fmt","from","init","into","mul","multiply","","rem","remainder","","sub","subtract","","to_owned","try_from","try_into","type_id","vzip","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[860,"polars::chunked_array::arithmetic"],[888,"polars::chunked_array::builder"],[1149,"polars::chunked_array::builder::list"],[1166,"polars::chunked_array::cast"],[1195,"polars::chunked_array::collect"],[1209,"polars::chunked_array::float"],[1211,"polars::chunked_array::from_iterator_par"],[1215,"polars::chunked_array::iterator"],[1270,"polars::chunked_array::iterator::par"],[1272,"polars::chunked_array::metadata"],[1556,"polars::chunked_array::object"],[1633,"polars::chunked_array::object::builder"],[1657,"polars::chunked_array::object::registry"],[1686,"polars::chunked_array::ops"],[1896,"polars::chunked_array::ops::arity"],[1932,"polars::chunked_array::ops::float_sorted_arg_max"],[1934,"polars::chunked_array::ops::gather"],[1937,"polars::chunked_array::ops::row_encode"],[1946,"polars::chunked_array::ops::search_sorted"],[1976,"polars::chunked_array::ops::sort"],[1983,"polars::chunked_array::ops::sort::arg_bottom_k"],[1984,"polars::chunked_array::ops::sort::options"],[1997,"polars::chunked_array::temporal"],[2005,"polars::chunked_array::temporal::conversion"],[2008,"polars::datatypes"],[3539,"polars::datatypes::categorical"],[3556,"polars::datatypes::categorical::revmap"],[3562,"polars::datatypes::categorical::string_cache"],[3581,"polars::datatypes::enum_"],[3599,"polars::docs"],[3601,"polars::error"],[3693,"polars::error::PolarsError"],[3697,"polars::error::constants"],[3700,"polars::frame"],[3982,"polars::frame::column"],[4231,"polars::frame::explode"],[4260,"polars::frame::group_by"],[4498,"polars::frame::group_by::GroupByMethod"],[4499,"polars::frame::group_by::GroupsProxy"],[4501,"polars::frame::group_by::aggregations"],[4514,"polars::frame::group_by::expr"],[4517,"polars::frame::row"],[4627,"polars::functions"],[4629,"polars::prelude"],[10035,"polars::prelude::AggExpr"],[10042,"polars::prelude::BooleanFunction"],[10045,"polars::prelude::DslPlan"],[10096,"polars::prelude::Expr"],[10131,"polars::prelude::FunctionExpr"],[10153,"polars::prelude::GroupByMethod"],[10154,"polars::prelude::GroupsProxy"],[10156,"polars::prelude::LiteralValue"],[10159,"polars::prelude::PolarsError"],[10163,"polars::prelude::StringFunction"],[10177,"polars::prelude::TemporalFunction"],[10179,"polars::prelude::_internal"],[10201,"polars::prelude::aggregations"],[10214,"polars::prelude::arity"],[10250,"polars::prelude::array"],[10269,"polars::prelude::binary"],[10286,"polars::prelude::buffer"],[10360,"polars::prelude::buffer::Buffer"],[10363,"polars::prelude::cat"],[10364,"polars::prelude::chunkedarray"],[10430,"polars::prelude::chunkedarray::string"],[10469,"polars::prelude::chunkedarray::string::infer"],[10500,"polars::prelude::cloud"],[10550,"polars::prelude::cloud::options"],[10559,"polars::prelude::compression"],[10577,"polars::prelude::datatypes"],[10858,"polars::prelude::datatypes::categorical"],[10875,"polars::prelude::datatypes::categorical::revmap"],[10881,"polars::prelude::datatypes::categorical::string_cache"],[10885,"polars::prelude::datatypes::enum_"],[10886,"polars::prelude::datetime"],[10889,"polars::prelude::default_arrays"],[10895,"polars::prelude::dt"],[10947,"polars::prelude::expr"],[10950,"polars::prelude::fixed_size_list"],[10970,"polars::prelude::float_sorted_arg_max"],[10972,"polars::prelude::function_expr"],[11147,"polars::prelude::function_expr::BooleanFunction"],[11150,"polars::prelude::function_expr::FunctionExpr"],[11172,"polars::prelude::function_expr::StringFunction"],[11186,"polars::prelude::function_expr::TemporalFunction"],[11188,"polars::prelude::function_expr::cat"],[11190,"polars::prelude::function_expr::pow"],[11194,"polars::prelude::function_expr::rolling"],[11225,"polars::prelude::function_expr::rolling_by"],[11256,"polars::prelude::gather"],[11259,"polars::prelude::interpolate"],[11263,"polars::prelude::interpolate_by"],[11264,"polars::prelude::mode"],[11265,"polars::prelude::nan_propagating_aggregate"],[11270,"polars::prelude::null"],[11301,"polars::prelude::row_encode"],[11310,"polars::prelude::schema_inference"],[11337,"polars::prelude::search_sorted"],[11343,"polars::prelude::series"],[11365,"polars::prelude::sort"],[11372,"polars::prelude::sort::arg_bottom_k"],[11373,"polars::prelude::sort::options"],[11386,"polars::prelude::strings"],[11443,"polars::prelude::udf"],[11449,"polars::prelude::utf8"],[11453,"polars::series"],[11924,"polars::series::amortized_iter"],[11948,"polars::series::arithmetic"],[11995,"polars::series::arithmetic::checked"],[12001,"polars::series::ops"],[12028,"dyn_clone::sealed"],[12029,"polars_core::datatypes"],[12030,"polars_core::chunked_array"],[12031,"polars_error"],[12032,"core::result"],[12033,"polars_core::series"],[12034,"core::ops::function"],[12035,"num_traits"],[12036,"num_traits::cast"],[12037,"polars_core::series::arithmetic::borrowed"],[12038,"polars_core::frame::group_by::proxy"],[12039,"polars_core::chunked_array::object"],[12040,"core::option"],[12041,"polars_arrow::array"],[12042,"alloc::boxed"],[12043,"core::iter::traits::iterator"],[12044,"polars_core::chunked_array::list::iterator"],[12045,"polars_utils::pl_str"],[12046,"alloc::borrow"],[12047,"core::marker"],[12048,"polars_core::series::amortized_iter"],[12049,"alloc::string"],[12050,"polars_core::datatypes::dtype"],[12051,"polars_arrow::array::binview::view"],[12052,"polars_core::chunked_array::ops::sort::options"],[12053,"polars_core::frame::column"],[12054,"polars_core::chunked_array::metadata::md_trait"],[12055,"polars_core::chunked_array::cast"],[12056,"polars_core::series::arithmetic::borrowed::checked"],[12057,"core::slice::iter"],[12058,"core::iter::adapters::map"],[12059,"alloc::vec"],[12060,"compact_str"],[12061,"polars_core::chunked_array::metadata"],[12062,"core::iter::traits::double_ended"],[12063,"polars_arrow::offset"],[12064,"core::fmt"],[12065,"core::iter::traits::collect"],[12066,"polars_core::chunked_array::from_iterator"],[12067,"core::convert"],[12068,"polars_arrow::bitmap::immutable"],[12069,"core::borrow"],[12070,"rayon::iter"],[12071,"polars_arrow::pushable"],[12072,"core::iter::traits::exact_size"],[12073,"core::clone"],[12074,"polars_arrow::trusted_len"],[12075,"polars_core::datatypes::any_value"],[12076,"polars_arrow::array::binary"],[12077,"std::sync::rwlock"],[12078,"polars_core::chunked_array::logical"],[12079,"polars_core::datatypes::time_unit"],[12080,"polars_core::series::series_trait"],[12081,"polars_core::chunked_array::iterator"],[12082,"polars_core::scalar"],[12083,"polars_core::chunked_array::metadata::guard"],[12084,"polars_core::chunked_array::metadata::interior_mutable"],[12085,"alloc::sync"],[12086,"core::ops::range"],[12087,"polars_core::datatypes::field"],[12088,"polars_arrow::legacy::kernels::rolling::no_nulls"],[12089,"polars_core::chunked_array::ops::rolling_window"],[12090,"polars_ops::chunked_array::scatter"],[12091,"polars_utils::index"],[12092,"ahash::random_state"],[12093,"polars_utils::hashing"],[12094,"ndarray"],[12095,"ndarray::dimension::dim"],[12096,"ndarray::data_repr"],[12097,"either"],[12098,"core::any"],[12099,"polars_core::frame"],[12100,"polars_core::chunked_array::arithmetic::numeric"],[12101,"polars_core::chunked_array::builder::list::anonymous"],[12102,"polars_core::chunked_array::builder::list::boolean"],[12103,"polars_core::chunked_array::builder::list::primitive"],[12104,"polars_core::chunked_array::builder::list"],[12105,"polars_core::chunked_array::builder"],[12106,"polars_core::chunked_array::builder::list::binary"],[12107,"polars_core::chunked_array::builder::list::null"],[12108,"polars_core::chunked_array::builder::string"],[12109,"polars_arrow::array::binview"],[12110,"polars_core::chunked_array::builder::boolean"],[12111,"polars_core::chunked_array::builder::null"],[12112,"polars_core::chunked_array::builder::primitive"],[12113,"polars_core::series::implementations::null"],[12114,"core::hash"],[12115,"polars_core::chunked_array::collect"],[12116,"polars_core::chunked_array::float"],[12117,"polars_core::chunked_array::from_iterator_par"],[12118,"polars_arrow::array::boolean"],[12119,"polars_arrow::array::fixed_size_list"],[12120,"polars_core::chunked_array::metadata::env"],[12121,"polars_core::chunked_array::metadata::collect"],[12122,"bitflags::iter"],[12123,"std::fs"],[12124,"std::sync::mutex"],[12125,"polars_arrow::datatypes"],[12126,"polars_arrow::bitmap::utils::iterator"],[12127,"polars_arrow::bitmap::utils::zip_validity"],[12128,"polars_core::chunked_array::object::builder"],[12129,"polars_core::chunked_array::object::registry"],[12130,"polars_core::chunked_array::ops"],[12131,"polars_arrow::legacy::array::slice"],[12132,"polars_core::chunked_array::ops::arity"],[12133,"polars_arrow::array::static_array"],[12134,"core::error"],[12135,"polars_arrow::array::primitive"],[12136,"polars_row::row"],[12137,"polars_core::chunked_array::ops::search_sorted"],[12138,"polars_core::utils"],[12139,"chrono::naive::datetime"],[12140,"chrono_tz::timezones"],[12141,"chrono::naive::time"],[12142,"polars_core::chunked_array::logical::categorical"],[12143,"polars_core::chunked_array::logical::categorical::builder"],[12144,"polars_arrow::array::static_array_collect"],[12145,"std::ffi::os_str"],[12146,"std::path"],[12147,"bytemuck::zeroable"],[12148,"polars_core::chunked_array::logical::categorical::revmap"],[12149,"polars_core::chunked_array::logical::categorical::merge"],[12150,"polars_arrow::datatypes::reshape"],[12151,"core::cmp"],[12152,"polars_arrow::types"],[12153,"polars_arrow::datatypes::physical_type"],[12154,"chrono::time_delta"],[12155,"chrono::naive::date"],[12156,"polars_core::datatypes::into_scalar"],[12157,"polars_plan::dsl::expr"],[12158,"polars_core::chunked_array::logical::categorical::string_cache"],[12159,"polars_core::chunked_array::logical::enum_"],[12160,"polars_error::warning"],[12161,"regex::error"],[12162,"planus::errors"],[12163,"polars_parquet::parquet::error"],[12164,"alloc::collections"],[12165,"std::io::error"],[12166,"simdutf8::basic"],[12167,"polars_schema::schema"],[12168,"hashbrown::set"],[12169,"polars_core::frame::row"],[12170,"polars_core::frame::group_by"],[12171,"polars_time::group_by::dynamic"],[12172,"polars_lazy::frame"],[12173,"polars_core::series::from"],[12174,"polars_core::chunked_array::ndarray"],[12175,"polars_arrow::array::struct_"],[12176,"polars_arrow::record_batch"],[12177,"polars_time::windows::duration"],[12178,"polars_core::frame::column::scalar"],[12179,"polars_core::frame::column::partitioned"],[12180,"polars_core::frame::explode"],[12181,"polars_utils::idx_vec"],[12182,"rayon::iter::plumbing"],[12183,"polars_plan::plans::aexpr"],[12184,"polars_core::frame::group_by::into_groups"],[12185,"core::iter::adapters::copied"],[12186,"core::iter::adapters::zip"],[12187,"polars_arrow::legacy::kernels::rolling"],[12188,"polars_utils::float"],[12189,"polars_arrow::types::native"],[12190,"polars_core::frame::group_by::aggregations::agg_list"],[12191,"polars_core::frame::group_by::aggregations"],[12192,"polars_core::frame::group_by::expr"],[12193,"polars_core::frame::row::av_buffer"],[12194,"polars_utils::arena"],[12195,"polars_plan::plans::ir"],[12196,"polars_ops::frame::join::hash_join"],[12197,"polars_ops::frame::join::args"],[12198,"polars_plan::dsl::struct_"],[12199,"polars_ops::chunked_array::gather::chunked"],[12200,"polars_ops::frame"],[12201,"polars_io::csv::read::reader"],[12202,"polars_io::predicates"],[12203,"polars_io::mmap"],[12204,"polars_plan::dsl::selector"],[12205,"polars_plan::frame::opt_state"],[12206,"core::alloc"],[12207,"polars_plan::plans::anonymous_scan"],[12208,"polars_lazy::scan::anonymous_scan"],[12209,"polars_plan::dsl::expr_dyn_fn"],[12210,"polars_plan::plans::visitor"],[12211,"polars_plan::dsl::function_expr"],[12212,"polars_ops::series::ops::arg_min_max"],[12213,"polars_plan::dsl::array"],[12214,"polars_plan::dsl::list"],[12215,"polars_plan::dsl::function_expr::schema"],[12216,"polars_io::ipc::ipc_stream"],[12217,"std::io"],[12218,"polars_ops::chunked_array::binary"],[12219,"polars_time::chunkedarray::string"],[12220,"std::os::fd::owned"],[12221,"polars_ops::chunked_array::list"],[12222,"std::os::fd::raw"],[12223,"polars_ops::series::ops"],[12224,"polars_ops::chunked_array::strings"],[12225,"core::mem::maybe_uninit"],[12226,"polars_ops::chunked_array::strings::namespace"],[12227,"polars_io::csv::read::read_impl::batched"],[12228,"polars_io::csv::write::writer"],[12229,"polars_io::ipc::write"],[12230,"polars_io::parquet::read::reader"],[12231,"polars_io::parquet::read::read_impl"],[12232,"polars_io::parquet::write::writer"],[12233,"polars_io::parquet::write::batched_writer"],[12234,"polars_plan::dsl::binary"],[12235,"polars_plan::dsl::udf"],[12236,"polars_lazy::frame::exitable"],[12237,"hashbrown::map"],[12238,"polars_plan::dsl::cat"],[12239,"polars_ops::series::ops::round"],[12240,"polars_time::series"],[12241,"polars_lazy::scan::csv"],[12242,"polars_lazy::scan::ipc"],[12243,"polars_lazy::scan::ndjson"],[12244,"polars_lazy::scan::parquet"],[12245,"polars_time::chunkedarray::rolling_window"],[12246,"polars_time::windows::bounds"],[12247,"polars_time::windows::group_by"],[12248,"polars_time::windows::window"],[12249,"polars_io::csv::read::options"],[12250,"polars_io::csv::write::options"],[12251,"polars_io::ipc::ipc_file"],[12252,"polars_io::json"],[12253,"polars_io::parquet::read::options"],[12254,"polars_ops::frame::join::asof"],[12255,"polars_io::parquet::write::options"],[12256,"polars_ops::frame::join::iejoin"],[12257,"polars_ops::series::ops::interpolation::interpolate"],[12258,"polars_ops::series::ops::is_between"],[12259,"polars_ops::series::ops::rank"],[12260,"polars_plan::plans"],[12261,"polars_plan::dsl::arity"],[12262,"polars_plan::dsl::function_expr::boolean"],[12263,"polars_plan::dsl::function_expr::cat"],[12264,"polars_plan::dsl::function_expr::datetime"],[12265,"polars_parquet::arrow::write"],[12266,"polars_plan::dsl::function_expr::pow"],[12267,"polars_plan::dsl::function_expr::strings"],[12268,"polars_plan::dsl::function_expr::struct_"],[12269,"polars_plan::dsl::functions::temporal"],[12270,"polars_plan::dsl::options"],[12271,"polars_parquet::parquet::metadata::file_metadata"],[12272,"polars_plan::plans::lit"],[12273,"polars_plan::plans::options"],[12274,"polars_arrow::legacy::kernels::time"],[12275,"polars_lazy::scan::file_list_reader"],[12276,"polars_io::cloud::options"],[12277,"polars_parquet::parquet::metadata::column_order"],[12278,"polars_ops::chunked_array::binary::namespace"],[12279,"polars_io::ndjson::core"],[12280,"polars_parquet::parquet::metadata::row_metadata"],[12281,"polars_ops::frame::join::cross_join"],[12282,"polars_lazy::dsl::eval"],[12283,"polars_time::chunkedarray::date"],[12284,"polars_time::chunkedarray::datetime"],[12285,"polars_time::chunkedarray::duration"],[12286,"core::default"],[12287,"core::ffi::c_str"],[12288,"polars_parquet::parquet::metadata::column_chunk_metadata"],[12289,"polars_core::series::ops"],[12290,"polars_plan::dsl::dt"],[12291,"polars_ops::series::ops::various"],[12292,"polars_arrow::scalar"],[12293,"polars_lazy::dsl::list"],[12294,"crossterm::command"],[12295,"polars_io::shared"],[12296,"polars_plan::plans::apply"],[12297,"polars_plan::dsl::function_expr::list"],[12298,"polars_plan::dsl::function_expr::array"],[12299,"polars_plan::dsl::function_expr::range"],[12300,"polars_plan::dsl::function_expr::binary"],[12301,"polars_parquet::arrow::read::statistics"],[12302,"alloc::ffi::c_str"],[12303,"polars_arrow::array::growable::structure"],[12304,"polars_core::schema"],[12305,"polars_arrow::legacy::array::default_arrays"],[12306,"polars_arrow::buffer::immutable"],[12307,"polars_arrow::array::list"],[12308,"polars_core::named_from"],[12309,"polars_ops::frame::join"],[12310,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[12311,"polars_time::chunkedarray::time"],[12312,"core::num::nonzero"],[12313,"polars_arrow::array::struct_::iterator"],[12314,"polars_ops::frame::join::asof::groups"],[12315,"polars_ops::chunked_array::list::namespace"],[12316,"polars_plan::dsl::name"],[12317,"polars_parquet_format::parquet_format"],[12318,"polars_core::utils::supertype"],[12319,"polars_io::options"],[12320,"polars_core::chunked_array::ops::aggregate"],[12321,"polars_core::chunked_array::ops::aggregate::quantile"],[12322,"polars_arrow::legacy::index"],[12323,"polars_plan::plans::ir::scan_sources"],[12324,"polars_ops::chunked_array::strings::split"],[12325,"core::pin"],[12326,"core::io::borrowed_buf"],[12327,"polars_parquet_format::thrift::varint::decode"],[12328,"polars_time::chunkedarray::rolling_window::dispatch"],[12329,"polars_time::round"],[12330,"polars_parquet::parquet::metadata::schema_descriptor"],[12331,"polars_core::chunked_array::ops::aggregate::var"],[12332,"polars_plan::dsl::string"],[12333,"polars_ops::series::ops::to_dummies"],[12334,"polars_time::truncate"],[12335,"polars_io::csv::read::schema_inference"],[12336,"polars_time::upsample"],[12337,"polars_core::hashing::vector_hasher"],[12338,"alloc::collections::btree::map"],[12339,"polars_utils::mmap::private"],[12340,"polars_parquet::arrow::read::deserialize::utils::filter"],[12341,"polars_ops::chunked_array::array::namespace"],[12342,"polars_ops::chunked_array::array"],[12343,"polars_io::csv::read::buffer"],[12344,"polars_time::chunkedarray::string::patterns"],[12345,"polars_time::chunkedarray::string::infer"],[12346,"polars_io::utils::compression"],[12347,"polars_arrow::legacy::array::fixed_size_list"],[12348,"polars_plan::dsl::function_expr::rolling"],[12349,"polars_plan::dsl::function_expr::rolling_by"],[12350,"polars_arrow::legacy::array::null"],[12351,"polars_arrow::bitmap::mutable"],[12352,"polars_arrow::array::utf8"],[12353,"polars_core::series::iterator"],[12354,"alloc::rc"],[12355,"polars_core::series::arithmetic::list_borrowed"],[12356,"polars_core"],[12357,"polars_core::chunked_array::struct_"],[12358,"polars_core::chunked_array::iterator::par"],[12359,"polars_core::chunked_array::object::extension"],[12360,"polars_core::chunked_array::ops::float_sorted_arg_max"],[12361,"polars_core::chunked_array::ops::gather"],[12362,"polars_core::chunked_array::ops::row_encode"],[12363,"polars_core::chunked_array::ops::sort"],[12364,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[12365,"polars_core::chunked_array::temporal"],[12366,"polars_core::chunked_array::temporal::conversion"],[12367,"polars_core::chunked_array::temporal::time"],[12368,"polars_core::chunked_array::logical::date"],[12369,"polars_core::chunked_array::logical::datetime"],[12370,"polars_core::chunked_array::logical::decimal"],[12371,"polars_core::chunked_array::logical::duration"],[12372,"polars_core::datatypes::aliases"],[12373,"polars_utils::aliases"],[12374,"polars_core::chunked_array::logical::time"],[12375,"polars_error::constants"],[12376,"polars_core::functions"],[12377,"polars_core::frame::horizontal"],[12378,"polars_arrow::datatypes::schema"],[12379,"polars_io::utils::other"],[12380,"polars_io::parquet::metadata"],[12381,"polars_arrow::legacy::prelude"],[12382,"polars_arrow::legacy::array"],[12383,"polars_io::path_utils"],[12384,"polars_ops::series::ops::rolling"],[12385,"polars_parquet::parquet::write"],[12386,"polars_io::utils"],[12387,"polars_ops::frame::join::general"],[12388,"polars_io::parquet::read"],[12389,"polars_ops::series::ops::abs"],[12390,"polars_plan::dsl::functions::selectors"],[12391,"polars_plan::dsl::functions::horizontal"],[12392,"polars_plan::dsl::functions::arity"],[12393,"polars_plan::dsl"],[12394,"polars_plan::dsl::functions::range"],[12395,"polars_plan::dsl::functions::index"],[12396,"polars_ops::chunked_array"],[12397,"polars_plan::dsl::functions::coerce"],[12398,"polars_plan::dsl::functions::syntactic_sugar"],[12399,"polars_time::base_utc_offset"],[12400,"polars_io::csv::read"],[12401,"polars_time"],[12402,"polars_ops::series::ops::clip"],[12403,"polars_io"],[12404,"polars_ops::series::ops::horizontal"],[12405,"polars_lazy::dsl::functions"],[12406,"polars_plan::dsl::functions::concat"],[12407,"polars_ops::series::ops::index"],[12408,"polars_ops::series::ops::bitwise"],[12409,"polars_io::csv::read::parser"],[12410,"polars_ops::series::ops::cum_agg"],[12411,"polars_ops::series::ops::diff"],[12412,"polars_time::dst_offset"],[12413,"polars_ops::chunked_array::strings::escape_regex"],[12414,"polars_ops::series::ops::floor_divide"],[12415,"polars_ops::chunked_array::strings::concat"],[12416,"polars_ops::series::ops::duration"],[12417,"polars_ops::chunked_array::datetime::replace_time_zone"],[12418,"polars_time::date_range"],[12419,"polars_ops::series::ops::interpolation"],[12420,"polars_ops::series::ops::interpolation::interpolate_by"],[12421,"polars_ops::series::ops::is_first_distinct"],[12422,"polars_ops::series::ops::is_in"],[12423,"polars_ops::series::ops::is_last_distinct"],[12424,"polars_io::parquet::read::utils"],[12425,"polars_ops::series::ops::negate"],[12426,"polars_ops::series::ops::not"],[12427,"polars_ops::series::ops::int_range"],[12428,"polars_plan::dsl::functions::repeat"],[12429,"polars_ops::chunked_array::repeat_by"],[12430,"polars_ops::series::ops::replace"],[12431,"polars_ops::chunked_array::strings::strip"],[12432,"polars_io::partition"],[12433,"polars_io::parquet::read::predicates"],[12434,"polars_io::parquet::read::mmap"],[12435,"polars_time::chunkedarray"],[12436,"polars_io::cloud"],[12437,"polars_ops::chunked_array::mode"],[12438,"polars_ops::chunked_array::nan_propagating_aggregate"],[12439,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`0000000000001000000000000000000000000000000000000000`000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000`0000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABj00000000000000000000000000````````````````ACnADbADdADfABl0ABnAC`ACb0ACdACf54AChACj5ACl5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADj000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`G`000000000000000000000000000``ADnAE`1000101000`AEb``AEdAEf````AEjAEnAF`21021021021021021021021021210210`210210210210210``AFnKhH`0Jn`3Ml22````````42110Mn4AFb43434343434344334343215604321560431150431504315043AFd54542654332671543267154541Fn777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AGb00000K`1111`111111110011111111111111111111``111111101111111110Cd2222222222`AGn0000000000000000000000````AH`00AHb00000001```00`0`10000AIb````````````````````````````0AHh``AIdAJb33333DLj4``0``4FbFj6AHd6AHj077AHl0AHn`54:54:AI`0065;65;65;6565;65;6565;65;99666555AIf0`AIhAIj`98>9988>`AIlAIn`AJ`0>><;AIb=<0=<00AJdAJfAJb0FbFjAHd0AJh1132?32AJjAId054?2AJl0AJnAK``AKb0`0AKdAKfAKh0`AHl0AKj<AKlAKnAL`FbFjAIb210210210AHn7321323232232232`ALb`ALlALhALd``````````````````````````````````````````````AMb00`0`000000000000000000`00000`````>>````87878787>>```````````B@``JjEnDn```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0`320``Dd04341```11`51431``431```AOf`3DLlDLn````B@h``9``875``875``875``875``5`666555AOl986``4``6B@jLd1010Al<;9`<;`<``:3:```````````BAh``35`>=<`=`=<:=`=<::````:0`=<:``=<:``=<:``=<:``:<:`::ALf0<0:L`6:AMlAOnJjB@`EnB@bOj;OhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jAMlJj01L`1AhCfLhOhOdFdNhO`NlKlLbEhEjBdBhAnAMnAMl110AN`0ANb0EnJjL`0Dd0003OjANhALf3433:BBh5DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jDdAMnBBhL`DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jEnAOf`JjAOj13L`0100000AMl`LhOhOdFdNhO`NlKlLbEhEjDd=AOlAOf>AOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jDdL`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jDdL`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jDd4OjB@n00026En00`L`4BA`AOlAOfJjB@`6;99AMnBBh77DM`DjAhjCfLhC`=<;AMlAOn<;EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jDdAMnBBhL`0DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jL`AhCfLhOhOdFdNhO`NlKlLbEhEjAMnDd1BBhL`DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jAOjL`0000AMlJjOj0Dd0`0AOl3B@`En0B@b5Ld>=<;7888888555777333222111666000>>>===<<<;;;9AOfAOhAMnBA`9983AOn<<8776;55B@fB@h0AGdB@j>>>>>6BBhL`00DM`DjAhjCfLhC`>AOlAOfAMlAOnJj00000B@`En000B@bOj00Ld0OhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGd00B@jEnAMl0L`01Dd00000001111110002ALf00030AOf9833333AOj544444051DnAhjCfLhC`OhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dAOfB@h0AMlEnJjBBdALf444444Dd3B@`5OjLd9AGdB@j8L`09:6AMnBBh2DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jEn2DdAMnBBhL`DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jL`AMlBBhBBf333332JjDdEn00200055020AOf311101319313131911131111319ALf702173777777``2B@`38`BA`::9:::AhCfLhOhOdFdNhO`NlKlLbEhEjAMl0Oj0L`0DLlDLnAMn33333333BA`5B@fB@h06B@bBBh:::::::188DdJjLd6;=;8AhCfLhOhOdFdNhO`NlKlLbEhEjL`0AOf111Oj2222BBhAMl0Jj55505AhCfLhOhOdFdNhO`NlKlLbEhEjL`00?EnOjLd20AMlAGd110Dd6AOlAOf4AOnJjB@`:B@b:9OhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jEn2L`Dd111Jj3Ld7133AN`0ANb0B@n00045AMnBBh8DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@f0B@hAGdB@jDdAMnBBhL`DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jJjEnDd21Ld61AMnBBhL`DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@j1AMl0ALf10En1DdAMnBBhL`DM`DjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`EnB@bOjLdOhOdFdNhO`NlKlLbEhEjKnLnBdBhFfAnLjLfLlB@dB@fB@hAGdB@jDLlDLnALfDd00Jj`````AOf`AOl10``AOh`````2121``BCd0000`00`0000000`0`BCf0000000000000000``BCjn000DMb`112101```11111112BCh302302`223002302302`300223002222222`302302`0``````02302302023023022DMdDMf10```BE``0BDn11``0``01AAn00000000000000000BFdBFf34210342222342342342`2224210342103421034222222222242224442`2222223422103422222222222222222`22224222222222222210342210342102222222222222222222222210222222222222222`22222222222222222221022222222222222222342222221034222221034221034222222222210342222222``Fh0`0BGj111111111111111111110111101111111111101010101011101010111110101111110110111111111111111010111101111111111011111110101BDl1222122222222112222222222121212222222222222212221222122222222122222222122221221222222222222122222212222222212222222122122222`BH`000000000000000000000000000`BHf0``0``````BHnCb`2`22222222210`222BHb1BEf40`1023BIhBHjBHh453762104537453745374537345621004537621045373162104453745444555`643445377`621044455377445335BIb4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DMhDMj0``````````BJ`BJb0`BJd0BJfBJh``1011110101010101010`10011010101010BEd211210210210210210`02102102100000022110`2102102121021```210210210210210``BMlBLfBBj`BOh1CHlCDj01`CE``CAj5```CEl4AMbB@`BE`7```;;`CJjJjEnDn``?``````````7```?```CFbCGj`CFfAIbBMlCIfCI```CJn:9AGd``BBj5`;``<``152<;1`````CCjCGh``CFl`DMlCHhBGbBLl000CGn8;`=JjEn``````1`CIdBMl?````````````````````````````````````0``0CEj`=`nCFb?`CI```24CIf0031BOhBHf2CEl```````888884`````<CClCCn`DCn7CJn?>AGd0``1`9JjEn``;`1`;31022``CGjDMlCHh`5BMl`CGnCAj22`CHjBBjn`CI`=;:<`````BLlDAnCIf>=>77DMnA@`DMb38`BLf9CJh```=>AGd66688````;CIh0`````BMl``0CGn>9BOhBHfBE`66`CJnB@`81JjEn:``310:``8CAjBGbCFfAIb<CCn```CElAHhBBj``0BMlCId`CHn`AOf``CGn`BHf``````CJhCFj?0?CFl`44DnDLlDLnCIf0DMnA@`CI``CEl``n=DCnBHnCb`````BOhBHf`BBj```B@h``8`CJnB@```1JjEnAGd``4210``4210``4210``BMl0`BLf2```````>````````CHl0`000`0CI`1Dn222001AIdAJbCGnCJh`````CEj``DI`CIh``1```2BBjCEf`>`>``>BOhBHfBE`DAn``````DN`CCjCClCElCGhAMb`;CIf0AOl`CGfDMnA@`JjEnAGd````BMl````````BBj`AOf`CAj0`CDf984<CFj202CFl0CEn08CGnCGjBOhAIbBHf1<210<20CI`B@jLdDMnA@`443287656BMl?50?CCn6CDhCIhCAjBLl`=;CHjCDj``==<;:AlCFfCGf<;CE`;`0`n``1CCjDLjCFbCGhBE`CHl>>BBj`CJnDAnJjEnAGdCKhBMl``````43`4`DMbAIbCEn0```CAjCGjCI`<ABjnBLdCJd``Dn`BLl0```````FhAOl3```````:```````````BAh`?`CFbCIh`BOhBHfBIj```>`8DAnCKhCGjBMl0CJn1```BBj`922CIf33CI`4``14DN`CCjCClCElCGhAMbCJd`;;```````BLf8<<``CFbBLl0n01CCn`FhABjCGn`````44```?B@j1`BBj=````CJn5``````BMl8000CDh553CIfBHnCb``CFlDLj:88```B@h555`CId`6``BOhBHfB@`<<JjEn`n``>```2`<<<<<<`21AGd``?1``3`BLfBBjCIh98BMlCCnBLlCIf`3``5`2CI`CJn<;99``1```922`2511111111ABjBAhCAj`473?><``3?><``3?><``3?><````CFlCGn>`:`En?```;8`CDfAGd0=ALf0BOhBHfBIj``CCn>>`BBj`01``CIhCI`=0CEfAIbDn:?`CBbBFhBLjBMdCBnCC`CCbCCdCCfBEhBFlCChBGhCCjCClCCnCD`AB`A@hCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bBGbBGdMjBAjA@`BIjCKdCKfCKh`BFhBKb00``BKf1:AHdBKhBKj000BKl6BKn`BBjBLd1BLfBGh0BLh1BLj5`5`5BLl`N`CCdBM`CJbBMb00CIj<BKhBFh0>`>ACdACf1010AHh<BBj`0AHj011`22`BGdBMnBN`BNb52105AHl6;`0AHn7<`BNdCJb`9AN`880ANb099`BNfBMbBKhBNj=1=MjBNlBNn000N`BOd11BOh2ANhBOj9ALfBOl`766`BBjC@`0`CDlBKnC@dC@jC@nCAb4`7`BLfBLlBKh1101112101CBfBN`AMdBM`CAfC@b=CBbBFhBLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`0CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhCBfBN`AMdBM`CAfC@bBKnCBbBFhBLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhBFh8BKh`ACb2CC`CCdCJ`CAlCAn`BNjCB`2CBb`9:AI`BBjAOj=2201`1N`2CBh3A@bCBjBGdCBlBKh10CDb`11`9`9`9;BFhBLjBMdCBnCC`CCbCCdCCfBEhBFlCChBGhCCjCClCCnCD`AB`A@hCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bBGbBGdMjBAjA@`BIjCKdCKfCKhBKhCBbBFhBLjBMdCBnCC`CCbCCdCCfBEhBFlCChBGhCCjCClCCnCD`AB`A@hCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bBGbBGdMjBAjA@`BIjCKdCKfCKhCBbBFhBLjBMdCBnCC`CCbCCdCCfBEhBFlCChBGhCCjCClCCnCD`AB`A@hCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bBGbBGdMjBAjA@`BIjCKdCKfCKhCCfBEhBFl`CKjCBnCCbCC`CCdBGhN``BM`CEjBKd``BFh`B@n000ADnAE`100033`CJf0CDbBKlCDd<;BLl`CEdCFhCGn`C@``CKjCBn````BN`CLb4BNb9155``BFhCLdBBj88`````BKb`CJf4CLh0`3``3`3`3``3CLj>`CDn```0`````CLlCLnCBjCIjCM`BGhCIl1CInCKdCDdN`0BFhBMdCC`CCdCMbBEhBFlCCnCDb:CDfCDlCDnCE`CEdCEfBKdCEhCEjCEnCFbCFdCFfCFhCFjCFlCFnCGhCGlCGnBBjBMh00CIbCIjCIlCJ`CJbCJdCJhCJlBLlN`000CK`CKbA@bBGbBAjA@```CBfBN`AMd0BM`CAfC@bBKnCBbBFhBLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMh0CHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`0CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhCBfBN`AMd0BM`CAfC@bBKnCBbBFhBLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhCGlFbFjCGnBFh0001N``BEf`CKb`BNbBBjBLl7CMjCIbBLd4BLh5999CBfBN`AMdBM`CAfC@bBKnCBb0BFh0BLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`0CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhBBjBFh01BKh``2AOj1;:9Oj:``CDb`CIbBLlN`0CDdCLb0```CNd2CCfBEhBFlBGhCCjCClCCnAB`>:CDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlBOhBBj0CHhCHjCAjBMh0CHlCMjCHnCI`CIbCIdCIfCIhBMlCInCJ`CJbCJdCJhCJjCJlBLfN`00CJnCK`CKbA@bBGbBGd0MjBAjA@`BIjCKdCKfCKhBBjAId0BEh00BFl00BGh00CCj00CCl00CCn00AB`00CDb00CDd00CDf00CDh00CDj00CDl00CDn00CE`00CEd00CEf00BKd00CEh00CEj00CEl00CEn00CF`00CFb00CFd00CFf00CFh00CFj00CFl00CFn00CG`00CGb00CGd00CGf00CGh00BBj00CHj00CAj00CHl00CHn00CI`00CIb00CId00CIf00CIh00CIn00CJ`00CJb00CJd00CJh00CJj00CJl00BLf00N`00CK`00CKb00BGb00BAj00A@`00CKh00``CNjBEh?BBj09```BFhBN`1AIf30`BLl4C@`A@h111ACdCBb701BKhBKf00BGdCDb;<`;<<AIhAIj5=>999CO`CObACfAOhBM`BKnCKjCBnCCbC@dCOdBNfCOfC@jCOhCOjCLdC@nCAbACd=<;9CA``BFhBNbBBjBKh`1CDn0`BMhCBh44`N`BNjCB`CAlCCfBEhBFlCChBGh0CCjCClCCnAB`A@hBMbCDbCDdCDfCDhCDjCDlCOlCDnCE`CEbCEdCEfBKdCEhCEjCEl0CEn0CF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlBBj0CHhCHjCAj0BMhCHl0CMjCHn0CI`0CIbCId0CIf0CIh0BMl0CIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLl0000N`00CJnCK`CKbA@bBGbBGdMjBAjA@`BIjCKdCKfCKh`;CCf:`BM`CJbCJ``BBjCBfBN`AMd6CAfC@bBKnCBbBFh00BLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`0A@hCAbDFbCDbCDdCDfCDh0CDjCDlCDnCE`CEbCEdCEfBKd0CEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBj0000000000000CHhCHjCAj0BMh0000000000CHlCMj0CHnCI`CIbCIdCIfCIhBMl0000CIjCIlCInCJ`CJbCJd0CJfCJhCJjCJlBLf0000CAnBLlN`00000000000000000CJn0CK`CKbA@bDAnBGbBGd0Mj0000000000BAjA@`BIjCKdCKfCKhDAbBLl000DAdDAhDAjAMd04N`DNb00ADj13310732CKbCLd4422DAn66BMhDB`ALf0`AIl1CIbBFhDBbAIn5BGdCAn`BBj`00N`BKhBN`BNb<4AJ`AOj10CBf<CJnDnCD`00CMdBMfDAb?BNd`C@n=>>==5CDb`COlBBdALfBKhCKjCBnCCdBFhDBn11``BIbAJbBBjN`21=9BEhBFlBGhCCjCClCCnCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlBOhBBjCHjCAjCHlCHnCI`CIbCIdCIfCIhBMlCInCJ`CJbCJdCJhCJjCJlBLfN`CJnCK`CKbBGbBAjA@`CKhDCb00BLjBNbBBjC@`0CC`CCd`DCdCLnCBjCIjCM`CIlBM`BKdAB`CDb```=`C@dCDlBEh>=21N`0CJlBH``3BFl``COjCLdBMd:CBfBN`AMdBM`CAfC@bBKnCBbBFhBLj:CBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhAB`ACdBFhDBbA@hCAnBLl````BBj``011CBfBN`AMdBM`CAfC@bBKnCBb=BLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhBDl?78AMdN`DF`DBjBBjBLl>DChBNb66CDbBBfBFj9MjBG`:7CAjCEl`:`1BGh1CIb;BKhCA`>`AJd?345`??`AJfBBjCLlCLnCBj3=3`73`7A@h4>AB`BAj`N`CJnBFjCNd35CEn4BGh;:9ALfBLlBGdDAb2DCnBN`BFhBNbDBbDD`3DDb0BM`BKd1BKfDDdCJf0BEh`:9ALfBBjBKhDDh>N```CFdBFh?<ABj00`5BNb7BGd37CDn9`DDjBGhDDlCJnMj>>9BLjCCbCLdCCdCDbCF`BBjDDb00000000000000000000AJb2N`13CDlCEdCEhCFhFbFj``6BFhDDd;`;BNd0BMh0=020=`==`1?1111CHhCJn``DAb`BN`7BNbAHdBBjDEdBKhCJfCMjCIb`?7653`8?7AJh64DEf5COd`BAjCGlCKfCIjCM`CIlCBj21`BN`BFhBNbAHdBBj1CCfCInA@bDEdBKhCMjCIbDCdCLn>CIjCM`CIlCDd`=CLl5CBj5BGh0BLd1BBjBLhFbFjBKhCKjCBnCCbBMdCC`CCdDFbCDbC@d1BN`BNbAHnBBj==09CAnOjBAj33`DCdCLnCBjCM`BGhCIlN`CEn3;``3DEh<<BNdDLlCO`CObDLnDEjAMdBM`BKnCBnCCbC@d;COdBNfCOfCMbC@jBGhCOhCOjCD`CLdCA`C@nCAbBKdBMhCIjCIlBLfCAnN`BGdMjBAj332AJjBKhCDh6`05CBnCCb28888108888DF`DBjBMbCAfC@bCA`BBj0`0BLlAId0``AB`A@hCDn?BFh6CMjCIbCDdFbFjC@nCJfBEhBFlCD`AIfBM`CJlBH`CFn0?CAnBBjBKhCLlCLnCBj0CHbCHfDFb77`CCdCF`CKbBGh9DCd9CDb22N`1BEhBFlBBj33````0:DDd0`CKfDEd3BFh8BGd88`1AJh6DEfBKhCLlCLnCBj>CDdCDn0CDbDFh?N`0C@n1111CKj:CBnCCbCC`CCd8CKb?`AJl0BLdBBjBLhBLl`BKhBFhBKf``5`C@`60BNd11``7`7`CAnAJn6BN`6BNb;CFdBM`DBn:>AK`?<?DG`BBj1010100010101010101010101010DGbCBh2CD`0130`CFhCJfCKjCBnCCbBMdCC`CCdCDbCJb0DDbBMh??BMbBFh00000DGdAKb0COdBNfCA`C@n7CJf?=DFb=CF`2`BLl?:`DCdCLnCBjCIjCM`CIlN`BFh00CDdCDnCDl`AKb<4C@n0CAbCOdBNfCOj4CO`BBjBGdAKdBKhBN`?BNb5AKfBFh7BKd8ACf692222CLbBMdCDbCK`1:68=<<5AKh=0=====`AHl;8:??80<N`CKjCBnCCbC@`BKhBGd022`2`2BBjBEh>>CFhBN`BFhBNbAKj68DGj9A@h8;;`;;;;;CFdCBjCJ`;``>`>`>`>`>N`<BLd=BLfBLl0BLhBM`DDdBKd01`BN`BFhBNbAHdBBjDEdBKhBMhCAj=N`8BLj86AKl5DGn066AKn7BGd`CH`CHdCDn`CIjCIl1CBjBFhCGn1CJnBNbDAb;AL`5DHbBKlBBjC@`BN`1DDdAB`CBb=BLjBMdCBnCC`CCbCCdCCfBEhBFlCChBGhCCjCClCCnCD`AB`A@hCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bBGbBGdMjBAjA@`BIjCKdCKfCKhBBjBNdCBjBGhCElCEn5CAjCHlCHnCI`CIdCIfCIhBMlN`DAbCKbC@`0DDdCEdCFhBLlCFd0BFhBGd000``ABj00DHdBGh0CD`10CDd21AN`660ANb077B@n000ADnAE`1000CBfBN`AMdBM`CAfC@bBKnCBbBFhBLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`0CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhCJfDAbCBfBN`AMdBM`CAfC@bBKnCBbBFhBLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhCDbBNd0BBj11DEhCG`CGbCGdN`?00000BGhCDd122BNjCAlBMf`4CElCEn<CAjCHlCHnCI`CIdCIfCIhBMl??CBfBN`AMdBM`CAfC@bBKnCBbBFhBLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKhCd`BLlAHnBN`BFhBNbBBjBKh3432133N`0?CDb3DHl0C@nCCdCF``BM`BKdBGd0ALfMjCNd=CJlBH`4545BN`BFhBNbAKjBBjBKhDGj187DHn0CJfN`CBf:AMdBM`CAfC@bBKnCBb?BLjBMdCBnCC`CCbCCdDF`C@dBNdDBjCOdBNfCOfCMbCCfBEhC@jBFlCChBGhDI`COhCCjCOjCClCCnCD`BNbCLdDDdBKfCA`C@nAB`A@hCAbDFbCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfBKdCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlDDlCGnCH`CHbCHdCHfBOhBBjCHhCHjCAjBMhCHlCMjCHnCI`CIbCIdCIfCIhBMlCIjCIlCInCJ`CJbCJdCJfCJhCJjCJlBLfCAnBLlN`CJnCK`CKbA@bDAnBGbBGdMjBAjA@`BIjCKdCKfCKh>CLlCLnCBj10CCnBGhCIl1A@b`CHbCHfCCfCIn4BM`CIjC@nCCbC@dCOjCBnDLlDLnCLdCDb47BFhBKd111COdBNf<4DFb49CDdCOfC@j1CMb1CAb90C@d0CIjCIlCBn8BNd1?19196BKf55322CDb>C@n65654CCbCOjCLd4COd483835COh3<96BAj<;;<;:CDd=CKj<<774BNf6:6:>C@d>3BFh<8<38;07298;<0?141?<3?:8<0CAb41CBn0<<94:=>BNd1=<;?1=<;?CIjCIl36953CDb40C@n7:5CCb7BKd:557=7=9BGd0ALf167;ABj00000000000000000N`CEdCFh`22BBjBKhCLlCLnCBjCIj`ALbDNdDNfDNh2102DNjDNlDNnDO`0DObDOdDOfDOhDOjDOlDOnE@`55E@bE@dE@f14;3E@h:E@j49E@lE@n0>EA`DO`240;4:029513622><??>;EAbEAdEAf0EAhEAj4EAlEAnEB`EBb3EBd528EBf1EBh11098432323570;5EBjEBlEBn0EC`ECbECdECfECh01ECj1EClECnED`EDbEDdEDf697DMhDMj0EDh00DMdDMf10EDjEDlEDn21EE`EEbEEdEEf03421EEh0DIh00`00`000`0000`0`0000``````````BJ`BJb0`ALlALhALd``````````````````````````````````DIn000000000000000DJ``CAh000000000000000DJb`0`00`0000000000000`00EEjEElEEn32103210321032103321032103`210332103210321032103EF`00````````BNn0000CCfCLlCLnCM`3DCd213232114021320213230232DG`0000000000000132`433543`DJf0000``07777DJd8111111111111111`11111111`DJn``DJh000000000`0000DJj11111211111DK`0``0000CKl010100000101010100000110001010`001010101011``11110DKb`00000000000`0000B@``JjEnDn```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0`320``3230```00`40320``320```AOf`2DLlDLn````B@h``8``764``764``764``764``4`555444AOl875``4``5B@jLd1010Al;:8`;:`;``939```````````BAh``35`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALf0;0AN`0ANb0ANh3`AOj0`B@n000`1Oj`AOh7777733DnBBd9BBf::```4DLlDLn;;::7777<<<10<`````AOf`AOl10``7`````1010````````````DAdDAhDAj`CNb00000000000000000000000000000000000000000000000000`BJd0`DKd000000000000000000``BMlCHl00011111CIfCI`33`03`CId4144142221244444111114441224222CIh055355`51CHn443665555553555531446646633363631365636`13666166466364666366366664444246`4444446`1646`334446333333333664633133````DNjDNlDNnEBjEBlEBn0EC`ECbECdECfECh01ECj1EClECnED`EDbEDdEDf697EDjEDlEDn21EE`EEbEEdEEf03421EEh0`CHnCId0`0DKf000`00000000000000000000000000DKh000`00000000000000000000000000````CGf0`````````DKj00000000000000000000000000000``````````DHj000000000`0000``000000000AMb00`````DKnCBj000000000000000000`````AKh0````FbFj10101022```BOlC@`0000000``000000000`0000000`0`000`00000`0`0`0`0`00000`CAn0000``EFbEFdMb``0``AIdBGn2````02AbBKh111111`011100`110010011101110001DLd35203521122221221211225215252222220352203522222035211252422242222255522222212115222035222222222222222222222222222222222222222222222222222222222222221222111122222215222222`2035203522220BFj32333322033332232333333333332232232333323223333333333333333333333333333333333333333333333333333332315333533332`23322233323332623333223312332232233333333323323322233333363333333333333331463333333333146333333333333333146333332322214633323``Ef000000000000000000000DLh00`0```BLd111`0BLhBn33`3333321033333321021021033333``CBlGb10CMn0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{c}}{l{c}}}{}Al}{{{l{An}}{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{Bd}}{l{Bd}}}}{{{f{{l{Bd}}}}{f{Bf}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}{{{l{Bh}}{l{Bh}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{{C`{c}}}}}}{f{Cb}}}AbCd}{{{f{{l{c}}}}{f{Cb}}}AbAl}{{{f{{l{Cf}}}}{f{Cb}}}Ab}{{{f{{l{Bd}}}}{f{Cb}}}Ab}{{{f{{l{Bh}}}}{f{Cb}}}Ab}{{{f{{l{j}}}}{f{Cb}}}Ab}{{{f{{l{An}}}}{f{Cb}}}Ab}{{{f{{l{Ah}}}}{f{Cb}}}Ab}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{Cf}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cf}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dn{}{{Dh{Dj}}{Dl{Dj}}}}}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Eb{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{E`{{Bl{Bj}}}}}}}}}}Ed}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Eb{{Ch{{f{Bf}}}}}{{Ad{{Ch{{E`{Bf}}}}}}}}Ed}}{{{f{{l{An}}}}c}{{l{An}}}{{Eb{{Ch{d}}}{{Ad{{Ch{d}}}}}}Ed}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Eb{Ch}{{Ad{Ch}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Eb{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}Ed}}{{{f{{l{{C`{c}}}}}}e}{{l{{C`{c}}}}}Cd{{Eb{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Ed}Dn}{{{f{{l{Cf}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Ed}Dn}{{{f{{l{Cf}}}}c}{{l{Cf}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ej}}}}c}Ab{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{c}}}}e}{{l{Bd}}}Dn{{Af{{f{DfEl}}}}}}{{{f{{l{An}}}}{f{Eb}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{Eb}}}{{l{Bh}}}}{{{f{{l{Bd}}}}{f{Eb}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{Eb}}}{{l{c}}}Al}{{{f{{l{c}}}}{f{Eb}}}{{l{e}}}AlDn}{{{f{{l{An}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{Bh}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{Bd}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{Df{l{c}}}}e}bAl{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Af{{f{{Bl{Bj}}}}}{{Ad{{f{{Bl{Bj}}}}}}}}}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{{f{Bf}}}{{Ad{{f{Bf}}}}}}}}{{{f{{l{c}}}}Eng}{{l{i}}}Dn{}{{Af{}{{Ad{e}}}}}Dn}{{{f{{l{Cf}}}}{f{Eb}}}{{A`{{l{Cf}}n}}}}{{{f{{l{Ah}}}}{f{Eb}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Bd}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{{f{Bf}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{An}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bh}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{{f{{Bl{Bj}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{C`{c}}}}}}g{f{Df{Bl{e}}}}}bCd{}{{Eb{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{c}}}}g{f{Df{Bl{e}}}}}bAl{}{{Eb{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Eb{Ab}{{Ad{Ab}}}}Ed}}{{{f{{l{An}}}}c}{{l{An}}}{{Eb{d}{{Ad{d}}}}Ed}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Eb{{f{{Bl{Bj}}}}}{{Ad{{E`{{Bl{Bj}}}}}}}}Ed}}{{{f{{l{{C`{c}}}}}}e}{{l{{C`{c}}}}}Cd{{Eb{{f{c}}}{{Ad{c}}}}Ed}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Eb{{f{Bf}}}{{Ad{{E`{Bf}}}}}}Ed}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{F`{f{Bf}}}{{Ad{F`}}}}Ed}}{{{f{{l{Bh}}}}Fb}{{l{Fd}}}}{{{f{{l{c}}}}Fb}{{l{Fd}}}Al}{{{f{{l{Ff}}}}Fb}{{l{Fd}}}}{{{f{{l{j}}}}Fb}{{l{Fd}}}}{{{f{{l{An}}}}Fb}{{l{Fd}}}}{{{f{{l{Bd}}}}Fb}{{l{Fd}}}}{{{f{{l{Bh}}}}{f{{Bl{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{{l{Ff}}}}{f{{Bl{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{{l{An}}}}{f{{Bl{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{{l{Bd}}}}{f{{Bl{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{{l{c}}}}{f{{Bl{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}Al}{{{f{{l{Bh}}}}}{{A`{{l{Fd}}n}}}}{{{f{{l{c}}}}}{{A`{{l{Fd}}n}}}Al}{{{f{{l{Bd}}}}}{{A`{{l{Fd}}n}}}}{{{f{{l{An}}}}}{{A`{{l{Fd}}n}}}}{{{f{{l{{C`{c}}}}}}}{{A`{{l{Fd}}n}}}Cd}`{{{f{{l{Cf}}}}}{{f{{l{Cf}}}}}}{{{f{{l{Bd}}}}}{{l{Bh}}}}{{{f{{l{Bh}}}}}{{f{{l{Bh}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{Bd}}}}}{{f{{l{Bd}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DnDn{{Af{{Ch{Ef}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fl}{{{l{An}}{l{An}}}}021120{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{Fn}}}Dn}``{{{f{{l{j}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Eb{}{{Ad{}}}}Ed}Al}{{{f{{l{c}}}}{f{En}}}{{A`{Abn}}}Al}{{{f{{l{An}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Ff}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{Ff}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{An}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}G`}{{A`{Abn}}}Al}{{{f{{l{Bh}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{j}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Gb}{{{f{{l{c}}}}e}{{A`{Abn}}}GbBb}{{{f{{l{c}}}}}{{Gj{{Gd{{Cn{Cl}}}}{Gh{{f{{Cn{Cl}}}}}{{Ad{Gf}}}}}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gf}}}}}}}Dn}{{{f{{l{c}}}}}{{f{{Gl{{Cn{Cl}}}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{Gl{{Cn{Cl}}}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}Dn}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DnAl}}`{fGn}{{{f{{l{c}}}}}{{A`{{f{Bl}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}H`}bDn}{{{f{Df{l{c}}}}{f{{l{e}}}}H`}bDnDn}{{{f{{l{c}}}}}{{`{Hb}}}Al}{{}{{l{c}}}Dn}{Gf{{f{c}}}{}}0{Gf{{f{Dfc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{Gfb}{{{f{Df{l{c}}}}}bDn}1{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{Bf}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}3671048259{{{f{{l{Cf}}}}}{{A`{{Hh{Ab{Hf{Hd}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hh{Ab{Hf{Hd}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bf}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gl{Ab}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{{f{{l{Bh}}}}{f{{l{An}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bd}}}}{f{{l{An}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{{C`{c}}}}}}{f{{l{An}}}}}{{A`{{l{{C`{c}}}}n}}}Cd}{{{f{{l{c}}}}{f{{l{An}}}}}{{A`{{l{c}}n}}}{{Dn{}{{Hj{Dj}}{Dl{Dj}}}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gf}}}Dn}`{{{f{{l{Bd}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Ah}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{{C`{c}}}}}}{f{DfHl}}}{{A`{bHn}}}Cd}{{{f{{l{c}}}}{f{DfHl}}}{{A`{bHn}}}Al}{{{f{{l{An}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Cf}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Bh}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{c}}}}e}bDn{{Af{Ch}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ef}}}}}}{{{f{{l{Cf}}}}c}b{{Af{{Ch{Ef}}}}}}{cc{}}{c{{l{e}}}Cl{{Dn{}{{I`{c}}}}}}1{{Ddc}{{l{e}}}Ib{{Dn{}{{I`{}}}}Dn}}{{{f{{l{c}}}}e}{{l{c}}}{{Dn{}{{I`{}}}}Dn}Ib}{{Dd{Gl{{Cn{Cl}}}}}{{l{c}}}Dn}{{Dd{Gl{{Cn{Cl}}}}En}{{l{c}}}Dn}{{DdGf{f{{Bl{Fh}}}}}{{A`{{l{j}}n}}}}{c{{l{An}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}{e{{l{Bd}}}{{Id{Bf}}}{{Ib{}{{Cj{c}}}}}}{e{{l{{C`{c}}}}}Cd{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{e{{l{Bh}}}{{If{{Bl{Bj}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{{Hh{Gl{Ch{Ih}}}}}}}}}Al}{e{{l{Bh}}}{{Id{{Bl{Bj}}}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bd}}}{{If{Bf}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{Ab}}}}}}}}{c{{l{An}}}{{Ib{}{{Cj{d}}}}}}{e{{l{Ah}}}{{Ij{Ab}}}{{Ib{}{{Cj{c}}}}}}{{Dde}{{l{Bh}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{Bd}}}{{If{Bf}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{{C`{c}}}}}Cd{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{An}}}{{D`{}{{Cj{{Ch{d}}}}}}}}95{e{{l{Ff}}}{{If{{Bl{Bj}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}>?{e{{l{Ff}}}{{Id{{Bl{Bj}}}}}{{Ib{}{{Cj{c}}}}}}{c{{l{An}}}{{Ib{}{{Cj{{Ch{d}}}}}}}};{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}:?;{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Dde}{{l{{C`{c}}}}}Cd{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{An}}}{{D`{}{{Cj{d}}}}}}{{Dde}{{l{Bh}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bd}}}{{If{Bf}}}{{D`{}{{Cj{c}}}}}}`{e{{l{Bd}}}{{If{Bf}}IlIn}{{J`{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bh}}}{{If{{Bl{Bj}}}}IlIn}{{J`{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bd}}}{{Id{Bf}}IlInJb}{{J`{}{{Cj{c}}}}}}{c{{l{An}}}{{J`{}{{Cj{d}}}}}}{e{{l{Bh}}}{{Id{{Bl{Bj}}}}IlInJb}{{J`{}{{Cj{c}}}}}}{c{{l{An}}}{{J`{}{{Cj{{Ch{d}}}}}}}}{c{{l{Ah}}}{{J`{}{{Cj{{Ch{Ab}}}}}}}}{c{{l{e}}}{{J`{}{{Cj{Ch}}}}}Al}{{cDdEn}{{l{Ah}}}{{J`{}{{Cj{{Ch{Ab}}}}}}}}{{DdGfc}{{A`{{l{j}}n}}}{{Jd{}{{Cj{{f{Ab}}}}}}Jf}}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{d}}}}}{{l{An}}}}{{Dd{f{{Bl{c}}}}}{{l{{C`{c}}}}}Cd}{{Dd{f{{Bl{c}}}}}{{l{Bd}}}{{If{Bf}}}}{{Dd{f{{Bl{c}}}}}{{l{Bh}}}{{If{{Bl{Bj}}}}}}{{Dd{f{{Bl{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{Bh}}}{{If{{Bl{Bj}}}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{{C`{c}}}}}Cd}{{Dd{f{{Bl{{Ch{d}}}}}}}{{l{An}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{Bd}}}{{If{Bf}}}}{c{{l{e}}}{{Jh{}{{Cj{Ch}}}}}Al}{c{{l{An}}}{{Jh{}{{Cj{{Ch{d}}}}}}}}{{DdGl}{{l{c}}}Al}{{DdGl{Ch{Ih}}}{{l{c}}}Al}{{Dd{f{{Bl{Bj}}}}Gf}{{l{Ff}}}}{{DdcGf}{{l{{C`{c}}}}}Cd}{{DdGf}{{l{c}}}Al}{{DddGf}{{l{An}}}}{{Dd{f{Bf}}Gf}{{l{Bd}}}}{{Dd{f{{Bl{Bj}}}}Gf}{{l{Bh}}}}{{Dd{f{Ab}}Gf}{{l{Ah}}}}{{Dd{f{Ab}}Gf}{{l{Cf}}}}{{DdGf}{{l{Ah}}}}{{DdGf}{{l{Cf}}}}7{{DdGf}{{l{{C`{c}}}}}Cd}{{DdGf}{{l{An}}}}{{DdGf}{{l{Bd}}}}{{DdGf}{{l{Bh}}}}{{DdGf}{{l{Ff}}}}{{DdGf}{{l{j}}}}{{{f{{l{c}}}}Gf}{{l{c}}}Dn}{{DdGf{f{En}}Gf}{{l{Cf}}}}{{DdGf{f{En}}}{{l{Ah}}}}{{{f{{l{c}}}}Gf}ChDn}{{{f{{l{Bh}}}}Gf}{{A`{Jjn}}}}{{{f{{l{Ff}}}}Gf}{{A`{Jjn}}}}{{{f{{l{Bd}}}}Gf}{{A`{Jjn}}}}{{{f{{l{An}}}}Gf}{{A`{Jjn}}}}{{{f{{l{Cf}}}}Gf}{{A`{Jjn}}}}{{{f{{l{Ah}}}}Gf}{{A`{Jjn}}}}{{{f{{l{c}}}}Gf}{{A`{Jjn}}}Al}{{{f{{l{{C`{c}}}}}}Gf}{{A`{Jjn}}}Cd}{{{f{{l{j}}}}Gf}{{A`{Jjn}}}}{{{f{{l{Cf}}}}Gf}Jj}{{{f{{l{Ff}}}}Gf}Jj}{{{f{{l{j}}}}Gf}Jj}{{{f{{l{Bh}}}}Gf}Jj}{{{f{{l{{C`{c}}}}}}Gf}JjCd}{{{f{{l{c}}}}Gf}JjAl}{{{f{{l{An}}}}Gf}Jj}{{{f{{l{Ah}}}}Gf}Jj}{{{f{{l{Bd}}}}Gf}Jj}{{{f{{l{Cf}}}}Gf}{{Ch{Ab}}}}{{{f{{l{Ah}}}}Gf}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Jl}}}Dn}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}JnDn}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cf}}}}}Ab}{{{f{{l{c}}}}}ChDn}0{{{f{{l{{C`{c}}}}}}Gf}{{Ch{{f{K`}}}}}Cd}0{{{f{{l{j}}}}Fb}{{A`{{l{Ff}}n}}}}{{{f{{l{j}}}}Fb}{{A`{{Kb{Hd}}n}}}}{{{f{{l{c}}}}Gf}ChDn}{{{f{{l{Ff}}}}}Gf}{{{f{{l{Bd}}}}}Gf}{{{f{{l{Cf}}}}}Gf}{{{f{{l{Ah}}}}}Gf}{{{f{{l{{C`{c}}}}}}dd}{{A`{Cbn}}}Cd}{{{f{{l{c}}}}dd}{{A`{Cbn}}}Al}{{{f{{l{An}}}}dd}{{A`{Cbn}}}}{{{f{{l{Ff}}}}dd}{{A`{Cbn}}}}{{{f{{l{Bd}}}}dd}{{A`{Cbn}}}}{{{f{{l{Bh}}}}dd}{{A`{Cbn}}}}{{{f{{l{Cf}}}}dd}{{A`{Cbn}}}}{{{f{{l{Ah}}}}dd}{{A`{Cbn}}}}{{{f{{l{c}}}}GfdGf}CbFl}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{Bf}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{An}}}}6512340{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}{Ch{Gf}}}{{l{c}}}Dn}{{}Gf}0{{GfKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Cf}}}}}{{f{En}}}}{{{f{{l{Ah}}}}}{{f{En}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dn}{{}c{}}0{{}Fh}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gf}}Gf}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gf}}Gf}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{Bd}}}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{An}}}}}}{{{f{{l{Bh}}}}}}{{{f{{l{Ff}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{Cf}}}}}}{{{f{{l{{C`{c}}}}}}}{}Cd}{{{f{{l{c}}}}}{{`{IlInJdHbJh}}}Al}{{{l{c}}}AbDn}{{{l{Lh}}}Ab}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}{{l{An}}}M`}000{{{f{{l{c}}}}}{{l{An}}}Dn}02{{{f{{l{c}}}}}MbDn}{{{f{{l{c}}}}}{{`{Md}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dn}{{{f{{l{c}}}}}{{Gj{{Gd{{Cn{Cl}}}}{Gh{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ih}}}}}}}}}}}Dn}`{{fc}Gn{{If{Bf}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gf}}}Dn}{{{f{{l{c}}}}}{{Mf{c}}}Dn}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{c}}}}}GfDn}0{{{f{{l{c}}}}e}{{l{c}}}Al{B`Mh}}00{{{f{{l{c}}}}Gf}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{Bf}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}6405312{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bh}}}}}{{Ch{{f{{Bl{Bj}}}}}}}}{{{f{{l{An}}}}}Mj}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bd}}}}}Mj}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{An}}}}}{{Ch{Aj}}}}{{{f{{l{Ej}}}}}{{Ch{Aj}}}}{{{f{{l{Eh}}}}}{{Ch{Kd}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fl}{{{f{{l{Eh}}}}}Mj}{{{f{{l{Ej}}}}}Mj}{{{f{{l{c}}}}}MjFl}{{{f{Df{l{c}}}}{Kh{c}}}bDn}`{{{f{{l{c}}}}}{{Ml{c}}}Dn}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{Ch{{Nb{Fn}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dn}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bh}}}}}{{Ch{{f{{Bl{Bj}}}}}}}}{{{f{{l{c}}}}}{{Ch{Hh}}}Al}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bh}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{Bd}}}}}Mj}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{Bj}}}}GfGf}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GfDn}{{{f{{l{Bh}}}}}{{A`{Gfn}}}}{{{f{{l{c}}}}}{{A`{Gfn}}}Al}{{{f{{l{Bd}}}}}{{A`{Gfn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dn}{{Dd{Nf{Nd}}}{{l{Kl}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{El}}}}}}{{Dde}{{l{{C`{c}}}}}Cd{{If{{Bl{{Ch{c}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Ch{{E`{{Bl{Bj}}}}}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{E`{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{Ch{{E`{Bf}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{E`{Bf}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{Ch{{f{Bf}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{f{Bf}}}}}}}}{{Dd{Nf{Jl}}}{{l{Fd}}}}{{Dd{Nf{Kf}}}{{l{Nh}}}}{{Dd{f{{Bl{c}}}}}{{l{{C`{c}}}}}Cd}{{Dd{Nf{Hd}}}{{l{Lb}}}}{{Ddc}{{l{Ej}}}{{If{{Bl{{Ch{Aj}}}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bl{{Ch{Kd}}}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bl{{Ch{Nj}}}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bl{{Ch{Hd}}}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bl{{Ch{Nd}}}}}}}}{{Ddc}{{l{Nl}}}{{If{{Bl{{Ch{Nn}}}}}}}}{{Ddc}{{l{O`}}}{{If{{Bl{{Ch{Ob}}}}}}}}{{Ddc}{{l{Nh}}}{{If{{Bl{{Ch{Kf}}}}}}}}{{Ddc}{{l{Fd}}}{{If{{Bl{{Ch{Jl}}}}}}}}{{Ddc}{{l{Od}}}{{If{{Bl{{Ch{Of}}}}}}}}{{Ddc}{{l{Oh}}}{{If{{Bl{{Ch{Bj}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{Ch{d}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Ch{{Gl{Bj}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{Ch{El}}}}}}}}{{Ddc}{{l{Ej}}}{{If{{Bl{Aj}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bl{Kd}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bl{Nj}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bl{Hd}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bl{Nd}}}}}}{{Ddc}{{l{Nl}}}{{If{{Bl{Nn}}}}}}{{Ddc}{{l{O`}}}{{If{{Bl{Ob}}}}}}{{Ddc}{{l{Nh}}}{{If{{Bl{Kf}}}}}}{{Ddc}{{l{Fd}}}{{If{{Bl{Jl}}}}}}{{Ddc}{{l{Oh}}}{{If{{Bl{Bj}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{d}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Gl{Bj}}}}}}}}{{Ddc}{{l{Od}}}{{If{{Bl{Of}}}}}}{Dd{{l{{C`{c}}}}}Cd}{{{f{{l{Bh}}}}GfGf}{{l{Bh}}}}{{{f{{l{{C`{c}}}}}}GfGf}{{l{{C`{c}}}}}Cd}{{{f{{l{c}}}}GfGf}{{l{c}}}Al}{{{f{{l{Cf}}}}GfGf}{{l{Cf}}}}{{{f{{l{An}}}}GfGf}{{l{An}}}}{{{f{{l{Bd}}}}GfGf}{{l{Bd}}}}{{{f{{l{j}}}}GfGf}{{l{j}}}}{{{f{{l{Ah}}}}GfGf}{{l{Ah}}}}{{{f{{l{Ff}}}}GfGf}{{l{Ff}}}}{{Dd{Gl{c}}}{{l{{C`{c}}}}}Cd}{{Dd{Gl{c}}Ih}{{l{{C`{c}}}}}Cd}{{DdGl}{{l{c}}}Al}{{{N`{Oj}}{Gl{{Cn{Cl}}}}JlJl}{{l{c}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{An}}}}}}{{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Bd}}}}{f{Bf}}}{{l{An}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}}5743981:6{{{f{{l{c}}}}}GfDn}{{{f{{l{An}}}}}Gf}0`{{{f{{l{Ah}}}}}{{A`{{Hf{Hd}}n}}}}{{{f{{l{Cf}}}}}{{A`{{Hf{Hd}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{{l{Bd}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bf}}}}}}}}}}}}{{{f{{l{Bd}}}}}{{`{On}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDn}{{{f{{l{Ej}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fl}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fl}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{Ej}}}}AjA@`}{{A`{Mjn}}}}{{DdGfAj}{{A`{{l{An}}n}}}}{{DdGfAjAj}{{A`{{l{c}}n}}}Al}{{DdGf}{{l{c}}}Al}{{DdGfAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{Ch{Ih}}}Dn}{{{f{{l{c}}}}}{{f{Oj}}}Dn}{{{f{{l{O`}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Nh}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{Nl}}}}}Ab}{{{f{{l{Fd}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Od}}}}}Ab}{{{f{{l{Ej}}}}}Ab}{{{f{{l{Oh}}}}}Ab}36:59471820{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDn}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Ff}}}}}{{l{Ff}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{Cf}}}}}{{l{Cf}}}}{{{f{{l{{C`{c}}}}}}}{{l{{C`{c}}}}}Cd}{{{f{{l{c}}}}{f{Eb}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Gfe}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}Gfdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{An}}}}{f{{Bl{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{{{f{{l{Bd}}}}{f{{Bl{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{{{f{Df{l{c}}}}{f{{Bl{Jl}}}}e}{{A`{Abn}}}A@d{{Ib{}{{Cj{Ch}}}}}}{{{f{{l{Bh}}}}c{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bh}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bd}}}}c{Ch{{f{Bf}}}}}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{An}}}}c{Ch{d}}}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Eb{{Ch{{f{Bf}}}}}{{Ad{{Ch{El}}}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Eb{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{Bh}}}}ce}{{A`{{l{Bh}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Eb{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{Gl{Bj}}}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}{{Eb{Ch}{{Ad{Ch}}}}}}{{{f{{l{Bd}}}}{f{{l{An}}}}{Ch{{f{Bf}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{An}}}}{f{{l{An}}}}{Ch{d}}}{{A`{{l{An}}n}}}}{{{f{{l{Bh}}}}{f{{l{An}}}}{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDn}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{c}}}}Jl}bDn}{{{f{Df{l{c}}}}Mb}bDn}{{{f{{l{Bd}}}}Hd}{{l{Bd}}}}{{{f{{l{Cf}}}}Hd}{{l{Cf}}}}{{{f{{l{{C`{c}}}}}}Hd}{{l{{C`{c}}}}}Cd}{{{f{{l{Bh}}}}Hd}{{l{Bh}}}}{{{f{{l{j}}}}Hd}{{l{j}}}}{{{f{{l{c}}}}Hd}{{l{c}}}Al}{{{f{{l{Ff}}}}Hd}{{l{Ff}}}}{{{f{{l{Ah}}}}Hd}{{l{Ah}}}}{{{f{{l{An}}}}Hd}{{l{An}}}}{{{f{{l{An}}}}Hd{Ch{d}}}{{l{An}}}}{{{f{{l{c}}}}HdCh}{{l{c}}}Al}{{{f{{l{Cf}}}}Hd{Ch{{f{Ab}}}}}{{l{Cf}}}}{{{f{{l{Bh}}}}Hd{Ch{{f{{Bl{Bj}}}}}}}{{l{Bh}}}}{{{f{{l{{C`{c}}}}}}Hd{Ch{{C`{c}}}}}{{l{{C`{c}}}}}Cd}{{{f{{l{Ff}}}}Hd{Ch{{f{{Bl{Bj}}}}}}}{{l{Ff}}}}{{{f{{l{Ah}}}}Hd{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Bd}}}}Hd{Ch{{f{Bf}}}}}{{l{Bd}}}}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}HdGf}{{l{c}}}Dn}0{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{Bh}}}}d}{{l{Bh}}}}{{{f{{l{Ff}}}}d}{{l{Ff}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Ff}}}}Fb}{{l{Ff}}}}{{{f{{l{Bh}}}}Fb}{{l{Bh}}}}{{{f{{l{An}}}}Fb}{{l{An}}}}{{{f{{l{Bd}}}}Fb}{{l{Bd}}}}{{{f{{l{j}}}}Fb}{{l{j}}}}{{{f{{l{c}}}}Fb}{{l{c}}}Al}{{{f{{l{c}}}}Hd}{{Hh{{l{c}}{l{c}}}}}Dn}0{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{Ej}}}}Bj}Mj}{{{f{{l{c}}}}Bj}MjFl}{{{f{{l{j}}}}}{{f{{Bl{Oj}}}}}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{An}}}}}{{Ch{Jl}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{An}}}}}Mj}{{{f{{l{c}}}}{Ch{Gf}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dn{{If{{Bl{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fd}}}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}{f{{Bl{A@h}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{Bl{A@h}}}}}{{l{c}}}Dn}{{{f{{l{Ah}}}}{f{c}}}{{l{Ah}}}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{Cf}}}}{f{{l{Fd}}}}}{{l{Cf}}}}{{{f{{l{Cf}}}}{f{c}}}{{l{Cf}}}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{j}}}}{f{{l{Fd}}}}}{{l{j}}}}{{{f{{l{Bd}}}}{f{c}}}{{l{Bd}}}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{Bh}}}}{f{{l{Fd}}}}}{{l{Bh}}}}{{{f{{l{Bh}}}}{f{c}}}{{l{Bh}}}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{Ah}}}}{f{{l{Fd}}}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dn{}{{Hj{Dj}}{A@j{Dj}}{Dh{Dj}}}}Dn}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fd}}}}}{{l{c}}}{{Dn{}{{Hj{Dj}}{A@j{Dj}}{Dh{Dj}}}}Dn}}{{{f{{l{Bd}}}}{f{{l{Fd}}}}}{{l{Bd}}}}`{{{f{{l{c}}}}dA@l}{{Gl{{Gl{A@n}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bd}}}}Gf}{{A`{Abn}}}}{{{f{Df{l{Cf}}}}En}b}{{{f{Df{l{Ah}}}}En}b}{{{f{{l{c}}}}}{{A`{{AAf{{AA`{f}}{AAd{{AAb{Gf}}}}}}n}}}Al}{{{f{{l{Ah}}}}}{{A`{{AAf{AAh{AAd{{AAb{Gf}}}}}}n}}}}{fc{}}{{{f{{l{Bh}}}}}{{l{Bd}}}}{{{f{{l{c}}}}}{{Gl{Ch}}}Al}{{{f{{l{c}}}}}{{AAj{Gl{Gl{Ch}}}}}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}01{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Ed}Dn}{{{f{{l{Cf}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Ed}Dn}{{{f{{l{Cf}}}}c}{{A`{{l{Cf}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bd}}e}}}Dn{}{{Af{{f{DfEl}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Ib{}{{Cj{{A`{ce}}}}}}}{{Dn{}{{I`{c}}}}Dn}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAl}0{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{{C`{c}}}}}}}{{A`{{l{{C`{c}}}}n}}}Cd}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bh}}}}}{{A`{{l{Bh}}n}}}}{{{l{j}}}AAn}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}Gf}{}Dn}{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bj}MjFl}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{Ej}}}}Bj}Mj}{{{f{{l{Bh}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Od}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Oh}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{{C`{c}}}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Lh}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{{C`{c}}}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Ej}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Od}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Oh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cf}}}}}Gf}{{Ddc}{{l{e}}}Cl{{Dn{}{{I`{c}}}}Dn}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dn{}{{I`{c}}}}Dn}}{{{f{{l{c}}}}{Gl{{Cn{Cl}}}}}{{l{c}}}Dn}{{{l{c}}Dd}{{l{c}}}Dn}{{{f{{Bl{AB`}}}}e}c{}{{ABb{{f{{l{Fd}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ih}}}{{l{j}}}}{{{l{j}}{l{An}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dn}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}23013232103223013223103223103223{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cf}}}}{f{{l{c}}}}e}{{l{Cf}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{j}}}}{f{{l{An}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dn{}{{A@j{Dj}}}}}}````{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABl}}{f{Cl}}}b}{{{f{DfABl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{}}}}Jh}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}65{{{f{DfACh}}}b}{{{f{DfACj}}}b}{{{f{DfAC`}}}b}{{{f{DfACl}}}b}{{{f{Df{ACb{c}}}}}bAl}{{{f{Df{ACn{c}}}}}b{AD`A@f}}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfABl}}{Ch{{f{Cl}}}}}b}{{{f{DfABl}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{Ch{{f{Bl}}}}}bAl}{{{f{Df{ACn{c}}}}{Ch{e}}}b{AD`A@f}{{If{c}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACb{c}}}}{f{Bl}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{Ch{{f{Bf}}}}}}}}Jh}}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{{Bl{Bj}}}}}}}}}}Jh}}{{{f{DfACf}}c}b{}}{{{f{Df{ACn{c}}}}e}b{AD`A@f}{{If{c}}}}{{{f{DfADb}}d}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{f{Bf}}}}}}}}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{{Bl{Bj}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`A@f}}{{{f{ADb}}}ADb}{{{f{ADd}}}ADd}{{{f{{ADf{c}}}}}{{ADf{c}}}{JfAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABl}{{}ABn}{Gf{{f{c}}}{}}0000000000{Gf{{f{Dfc}}}{}}0000000000{Gfb}0000000000{{{f{ACh}}}d}{{{f{ACj}}}d}{{{f{AC`}}}d}{{{f{{ACb{c}}}}}dAl}{{{f{ACd}}}d}{{{f{ACh}}}{{f{Oj}}}}{{{f{ACj}}}{{f{Oj}}}}{{{f{AC`}}}{{f{Oj}}}}{{{f{{ACb{c}}}}}{{f{Oj}}}Al}{{{f{ACd}}}{{f{Oj}}}}{ACf{{l{c}}}Dn}{{{f{DfABl}}}{{l{Ah}}}}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfACl}}}{{l{Ah}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{ACn{{Bl{Bj}}}}}{{l{Bh}}}}{{{ACn{Bf}}}{{l{Bd}}}}{ADb{{l{An}}}}{ADdADh}{{{ADf{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bl{c}}}}}ADj{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADj{}}{{{f{En}}GfGfDd}{{Cn{ACd}}}}{{}Gf}0000000000{{{f{DfACh}}}{{Cn{Cl}}}}{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfAC`}}}{{Cn{Cl}}}}{{{f{Df{ACb{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACd}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGf{Ch{En}}}ABl}{{DdGf{Ch{En}}}ABn}{{DdGfGf}ACh}{{DdGfGf}ACj}{{DdGfGf}AC`}{{DdGf}ACl}{{DdGfGfEn}{{ACb{c}}}Al}{{DdGf}{{ACn{c}}}{AD`A@f}}{{DdGf}ADb}{{DdGf}ADd}{{DdGf}{{ADf{c}}}Al}{{DdGfGfEnEn}{{ACb{c}}}Al}{{{f{DfACf}}}b}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAl}0000000000{{}c{}}0000000000````````{{{f{DfACd}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACd}}}d}{{{f{ACd}}}{{f{Oj}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{f{En}}GfGfDd}{{Cn{ACd}}}}{{{f{DfACd}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{G`}}}G`}{{f{f{Dfc}}}b{}}{fb}{{}G`}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{G`}}{f{G`}}}d}{{f{f{c}}}d{}}00{{{f{G`}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{G`}}{f{Dfc}}}bADl}{{}Gf}{{}c{}}{{{f{G`}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5``{{ADnDd}{{l{c}}}Dn}{{AE`{f{{l{c}}}}}{{l{c}}}Dn}10{{AE`DdEn}{{l{c}}}Dn}0{{ADnDd}{{A`{{l{c}}e}}}Dn{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AE`DdEn}{{A`{{l{c}}e}}}Dn{}}0`{AEbAEb}``{{AEdDdEn}e{}{{AEf{c}}}}{{eDdEn}AEf{}{{J`{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gf{{f{c}}}{}}00{Gf{{f{Dfc}}}{}}00{Gfb}00{cc{}}00{{}Gf}00{{}c{}}00000{{{f{AEh}}}AEj}{{{f{AEl}}En}AEn}{{{f{DfAEj}}}Ch}{{{f{DfAEn}}}Ch}{{{f{Df{AF`{c}}}}}ChD`}21{{{f{Df{AF`{c}}}}}ChHb}`{{{f{AEj}}}{{Hh{Gf{Ch{Gf}}}}}}{{{f{AEn}}}{{Hh{Gf{Ch{Gf}}}}}}{{{f{{AF`{c}}}}}{{Hh{Gf{Ch{Gf}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00<<<`````````````````````````{{fh}b}0000{{}H`}{{}Jn}{{H`H`}H`}{{JnJn}Jn}{{{f{DfH`}}H`}b}{{{f{DfJn}}Jn}b}3210{{{f{H`}}}Jl}0{{{f{Jn}}}Bj}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{Fn}}}Dn}{{{f{{Mn{c}}}}}{{Mn{c}}}Dn}{{{f{{Kh{c}}}}}{{Kh{c}}}Dn}{{{f{AFb}}}AFb}{{{f{H`}}}H`}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFd}}}b}{H`H`}{JnJn}{{{f{H`}}H`}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dn}{{}{{Kh{c}}}Dn}{{}H`}{{}Jn}{Gf{{f{c}}}{}}{{{f{{Ml{c}}}}}fDn}111111{Gf{{f{Dfc}}}{}}000000{{H`H`}H`}{{JnJn}Jn}{{}d}{{{f{Fn}}}{{Ch{Jl}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dn}{{{Kh{c}}Jl}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Jl}}}{{Kh{c}}}Dn}{Gfb}000000<;5{{{f{H`}}{f{H`}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfH`}}c}b{{Ib{}{{Cj{H`}}}}}}{{{f{DfJn}}c}b{{Ib{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}H`}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}H`}{{Kh{e}}}DnDn}{{{Kh{c}}Jn}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{f{DfHl}}}{{A`{bHn}}}Dn}{{{f{AFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{H`}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{Jn}}{f{DfHl}}}{{A`{bHn}}}}0000{cc{}}000000{Jl{{Ch{H`}}}}{Bj{{Ch{Jn}}}}{JlH`}0{BjJn}010{cH`{{Ib{}{{Cj{H`}}}}}}{cJn{{Ib{}{{Cj{Jn}}}}}}{{{f{Bf}}}{{Ch{H`}}}}{{{f{Bf}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dn}{{{f{{Kh{c}}}}}dDn}{{{f{Jn}}}d}{{{f{Fn}}}Jn}{{{f{{Kh{c}}}}}JnDn}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dn}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dn}{{{f{Jn}}}Mb}{{}Gf}000000{{{f{DfH`}}H`}b}{{{f{DfJn}}Jn}b}{{H`H`}H`}{{JnJn}Jn}{{{f{H`}}H`}d}{{{f{Jn}}Jn}d}{{}c{}}000000{H`}{Jn}{{{f{H`}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDn}21{{{f{{Kh{c}}}}}MbDn}111{{{f{H`}}}{{AFf{H`}}}}{{{f{Jn}}}{{AFf{Jn}}}}{{{f{H`}}}{{AFh{H`}}}}{{{f{Jn}}}{{AFh{Jn}}}}{{}d}{{}{{f{{AFl{AFj}}}}}}{{{f{Fn}}}{{Ch{Mj}}}}{{{Kh{c}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dn}{{{Kh{c}}Ch}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{Kh{c}}}{{AFn{c}}}Dn}4321{{{Kh{c}}}{{Mn{c}}}Dn}{H`H`}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dn}{{{f{DfH`}}H`}b}{{{f{DfJn}}Jn}b}{{{f{DfH`}}H`d}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Jl}}}bDn}{{{f{Df{Kh{c}}}}d}bDn}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDn}{{{f{Df{Kh{c}}}}Ch}bDn}033{{{f{Df{Kh{c}}}}Mb}bDn}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dn}{{H`H`}H`}{{JnJn}Jn}>=10{{{Mn{c}}}{{Kh{c}}}Dn}{fc{}}0000{{{f{DfH`}}H`}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dn}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dn}{fAAl}000000:9{{{f{{Mn{c}}}}}{{f{{AG`{Fn}}}}}Dn}{{}c{}}000000{AFdAFd}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dn}````{{fh}b}{{{f{{AGb{c}}}}Gf}{{Hh{{AGb{c}}{AGb{c}}}}}Cd}{e{{AGb{c}}}Cd{{Ib{}{{Cj{{Ch{{f{c}}}}}}}}}}{e{{AGb{c}}}Cd{{Ib{}{{Cj{{f{c}}}}}}}}{{AGde}g{}{{Ib{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGf}}}}{{{f{{AGb{c}}}}}{{f{AGf}}}Cd}{{{f{Df{AGb{c}}}}}{{f{DfAGf}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGb{c}}}}Gf}dCd}{{{f{{AGb{c}}}}}{{AGb{c}}}{JfCd}}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{{AGb{c}}}}}{{f{AGd}}}Cd}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGb{c}}}}{f{DfHl}}}{{A`{bHn}}}{AGhCd}}{{{Gl{c}}}{{AGb{c}}}Cd}{cc{}}{{GfAGd}{{AGb{c}}}Cd}{{{f{{AGb{c}}}}Gf}{{Ch{{f{c}}}}}Cd}{{}AGd}{{{f{Ih}}{f{{AGb{c}}}}{f{{AGb{c}}}}}{{AGb{c}}}Cd}{{AGd{f{Ih}}}{{AGb{c}}}Cd}{{{f{Ih}}{f{{AGb{c}}}}}{{AGb{c}}}Cd}0{{}Gf}{{}c{}}{{{f{{AGb{c}}}}}{}Cd}{{{f{{AGb{c}}}}Gf}dCd}{{fGf}d}1{{{f{{AGb{c}}}}}{{AGl{{f{c}}{Gd{c}}AGj}}}Cd}{{{f{{AGb{c}}}}}{{AGl{AGj}}}Cd}{{{f{{AGb{c}}}}}GfCd}0`{db}{{{f{Df{AGb{c}}}}{Ch{Ih}}}bCd}{{{f{Df{AGb{c}}}}GfGf}bCd}{{fGfGf}c{}}01{{{f{{AGb{c}}}}Gf}{{Hh{{Cn{Cl}}{Cn{Cl}}}}}Cd}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGb{c}}}}}{{Cn{Cl}}}Cd}{fc{}}{g{{A`{{AGb{c}}e}}}Cd{}{{Ib{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{g{{A`{{AGb{c}}e}}}Cd{}{{Ib{}{{Cj{{A`{{f{c}}e}}}}}}}}{{AGdg}{{A`{ie}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{K`}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{AGb{c}}}}}{{Ch{{f{Ih}}}}}Cd}{{{f{{AGb{c}}}}Gf}{{f{c}}}Cd}0{{{f{{AGb{c}}}}Gf}{}Cd}{{{f{{AGb{c}}}}}{{Gd{c}}}Cd}{{{f{{AGb{c}}}}}{}Cd}{{}c{}}{{{f{{AGb{c}}}}{Ch{Ih}}}{{Cn{Cl}}}Cd}{{{AGb{c}}{Ch{Ih}}}{{AGb{c}}}Cd}0`{{{f{Df{AGn{c}}}}}bCd}0{{{f{Df{AGn{c}}}}{Ch{c}}}bCd}{{{f{Df{AGn{c}}}}c}bCd}{{{f{Df{AGn{c}}}}{f{AGf}}}bCd}{{{f{Df{AGn{c}}}}{f{AGf}}}{{A`{bn}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AGn{c}}}Cd}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{AGn{c}}}{{l{{C`{c}}}}}Cd}{cc{}}{{{f{{AGn{c}}}}DdGfGf}{{Cn{ACd}}}Cd}{{}Gf}{{}c{}}{{DdGf}{{AGn{c}}}Cd}{{{f{Df{AGn{c}}}}}AbCd}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{{f{DfAH`}}}b}{{{f{DfAH`}}{Ch{{f{AGf}}}}}b}{{{f{DfAH`}}{f{AGf}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{AHb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{AH`}}DdGfGf}{{Cn{ACd}}}}{{DdGf}{{Cn{AH`}}}}{{}{{N`{Eb}}}}{{}AGd}{{}Gf}{{}c{}}{{}d}`{{{Cn{Eb}}{N`{Eb}}AGd}b}{{{f{DfAH`}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6````````````````````````````````````````````````{{fh}b}00{{{f{AHd}}}Aj}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{c}}}}}}Ed}}{{{f{AHj}}{f{Eb}}}AHj}{{{f{AHj}}{f{Eb}}}{{l{c}}}Dn}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{Eb{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Eb{e}{{Ad{c}}}}Ed}}{{{f{AHl}}Fb}{{l{Fd}}}}{{{f{AHl}}{f{{Bl{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{AHn}}}{{A`{{l{Fd}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AI`}}{f{En}}}{{A`{Abn}}}}0{{{f{AI`}}{f{En}}G`}{{A`{Abn}}}}{{{f{Fb}}}Fb}{{{f{Fj}}}Fj}{{{f{AIb}}}AIb}{{f{f{Dfc}}}b{}}00{fb}00{{}Fb}{{}Fj}{Gf{{f{c}}}{}}00{Gf{{f{Dfc}}}{}}00``{Gfb}00{{{f{Fb}}{f{Fb}}}d}{{{f{Fj}}{f{Fj}}}d}{{{f{AIb}}{f{AIb}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIf}}}{{A`{Abn}}}}{{{f{AIf}}}{{A`{{Hh{Ab{Hf{Hd}}}}n}}}}`{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dn}`{{{f{Fb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AIb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fj}}}Fb}{{{f{Fb}}}Fj}22`{{DdcGf}AIl{}}{{DdGf}AIn}`{{{f{AJ`}}Gf}{{A`{Jjn}}}}{{{f{AJ`}}Gf}Jj}{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}0{{{f{Fb}}{f{Dfc}}}bADl}{{{f{Fj}}{f{Dfc}}}bADl}{{{f{AIb}}{f{Dfc}}}bADl}{{}Gf}00{{}c{}}00{{{f{AIb}}}d}{{{f{AJd}}}{{A`{{l{An}}n}}}}{{{f{AJf}}}{{A`{{l{An}}n}}}}88``{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AHd}}}{{Ch{Aj}}}}{{{f{AJh}}}{{Ch{c}}}{}}2{{{f{AHd}}}{{Ch{{Hh{cc}}}}}{}}``{{{f{AHn}}}{{A`{Gfn}}}}{{}Fb}{{}Fj}{{{f{AJj}}GfGf}{{l{c}}}Dn}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AIf}}}{{A`{{Hf{Hd}}n}}}}{{{f{AJh}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AJl}}}Ab}0{{{f{AJn}}}AJn}{{{f{AK`}}{f{Eb}}A@b}{{A`{Abn}}}}`{{{f{AKb}}c{Ch{e}}}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AKb}}ci}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{AKb}}{f{{l{An}}}}{Ch{c}}}{{A`{AKbn}}}{}}{{{f{AKd}}Hd}{{l{c}}}Dn}{{{f{AKf}}Hdc}{{l{e}}}{}Dn}{{{f{AKh}}GfGf}AKh}0`{{{f{AHl}}d}{{l{c}}}Dn}{{{f{AHl}}Fb}{{l{c}}}Dn}{{{f{AKj}}Bj}{{Ch{Aj}}}}{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AKl}}{f{c}}}{{A`{AKln}}}A@f}{{{f{AKn}}{f{c}}}AKnA@f}{{{f{AL`}}}{{Gl{{f{{Bl{Bj}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00{{{f{AHn}}}{{A`{AHnn}}}}9{{}c{}}00{{Fbd}Fb}{{Fjd}Fj}1010{{Fjc}Fj{{Ib{}{{Cj{d}}}}}}210{FbFb}{FjFj}`{{{f{ALb}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{Eb{ff}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALd{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bd}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALf}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALh{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnALj{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALf}ALj{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{ALl{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnALlDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALf}{{Af{f}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}0{{{f{{l{c}}}}}GfAl}0{{MbMb}Mb}{{{f{{l{Fd}}}}Jl}{{A`{bn}}}}{{{f{{ALn{Jl}}}}Jl}{{A`{bn}}}}{{{f{{Bl{Fh}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AM`n}}}}{{{f{{Bl{Fh}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hd}}n}}}}{{Dd{f{{Bl{Fh}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Ff}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Ff}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AM`n}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Ff}}n}}}}00````{{fh}b}{{{f{{l{c}}}}eAMbd}{{Gl{Jl}}}Dn{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{AMb}}}AMb}{{f{f{Dfc}}}b{}}{fb}{{}AMb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{AMb}}{f{AMb}}}d}{{f{f{c}}}d{}}00{{{f{AMb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{AMb}}{f{Dfc}}}bADl}{{}Gf}{{}c{}}{{{f{{Bl{f}}}}cJle}{{Gl{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Eb{fGff}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5`{{Gf{f{Df{Gl{d}}}}}b}```{{{f{AKh}}GfGf}AKh}0{{Gf{f{{Bl{Fh}}}}{f{DfFj}}}{{A`{{AMd{{l{Fd}}}}n}}}}```````````11`{AMfHd}00{{{f{Bf}}}{{A`{Ddn}}}}{{{f{Bf}}}{{A`{AMhn}}}}{{{f{AMj}}}Hd}{{{f{Bf}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000{{{f{AMl}}}d}{{{f{Jj}}}{{`{{D`{}{{Cj{Jj}}}}}}}}{{{f{Jj}}{f{Df{Gl{Jj}}}}}b}{{AMld}AMl}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jj}}{f{Jj}}}Jj}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfAMn}}{Ch{{f{Bf}}}}}b}{{{f{DfAMl}}{f{AMl}}}{{A`{bn}}}}{{{f{DfAMn}}}b}{{{f{DfAMn}}{f{Bf}}}b}{{{f{AMl}}Fb}{{l{Fd}}}}{eAN`{}{{Ib{}{{Cj{c}}}}}}0{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{Jj}}}Jj}{{{f{{L`{KnKl}}}}}{{`{Jh}}}}{{{f{{L`{LfLb}}}}}{{`{Jh}}}}{{{f{Dd}}}{{f{Bf}}}}{{{f{Dd}}}{{f{ANd}}}}{{{f{Dd}}}{{f{ANf}}}}{{{f{Dd}}}{{f{{Bl{Bj}}}}}}{{{f{En}}}{{f{En}}}}{{{f{Oj}}}{{f{En}}}}{{{f{ANh}}}{{f{En}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}7{{{f{{L`{LnLb}}}}}{{`{Jh}}}}{f{{f{c}}}{}}9000000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}000000000000000000000000000000000000000000000{En{{Cn{En}}}}{{{AOd{Bf}}}AOf}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{Jj}}{f{En}}}d}{{{f{AOj}}{f{En}}}{{A`{Abn}}}}{{{f{Jj}}{f{En}}}Jj}{{{f{En}}En}En}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{AOj}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{AMl}}{f{En}}G`}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ej}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DnDn}{{{f{AOl}}}AOl}{{{f{AOf}}}AOf}{{{f{AMl}}}AMl}{{{f{AOn}}}AOn}{{{f{Jj}}}Jj}{{{f{B@`}}}B@`}{{{f{En}}}En}{{{f{B@b}}}B@b}{{{f{Oj}}}Oj}{{{f{Ld}}}Ld}{{{f{Oh}}}Oh}{{{f{Od}}}Od}{{{f{Fd}}}Fd}{{{f{Nh}}}Nh}{{{f{O`}}}O`}{{{f{Nl}}}Nl}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Eh}}}Eh}{{{f{Ej}}}Ej}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{Bd}}}Bd}{{{f{Bh}}}Bh}{{{f{Ff}}}Ff}{{{f{An}}}An}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@d}}}B@d}{{{f{B@f}}}B@f}{{{f{B@h}}}B@h}{{{f{AGd}}}AGd}{{{f{B@j}}}B@j}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000{fb}00000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}B@l}{{{f{B@f}}{f{B@f}}}B@l}{{{f{DfOj}}En}b}{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{f{f{c}}}B@l{}}0{{{f{En}}}d}00{{{AOd{Bf}}}En}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}BA`}{{}AOl}{{}AOf}{{}Jj}{{}B@`}{{}En}{{}AGd}{Gf{{f{c}}}{}}{{{f{Dd}}}f}11{{{f{{L`{ce}}}}}fDnDn}2222222222222222222222222222222222222222222{Gf{{f{Dfc}}}{}}000{{{f{Df{L`{ce}}}}}{{f{Df}}}DnDn}111111111111111111111111111111111111111111{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMnc}AMl{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{Gfb}000000000000000000000000000000000000000000000{{{f{AOj}}}{{f{En}}}}{{{f{{L`{LlLb}}}}}{{f{En}}}}{{{f{{L`{LfLb}}}}}{{f{En}}}}{{{f{{L`{LnLb}}}}}{{f{En}}}}{{{f{{L`{KnKl}}}}}{{f{En}}}}{{{f{{L`{LjLh}}}}}{{f{En}}}}{{{f{AMl}}}{{f{En}}}}{{{f{Jj}}}En}{{{f{Oj}}}{{f{En}}}}`{fc{{BAd{BAb}}}}0`{{{f{Dd}}{f{c}}}d{{If{Bf}}A@f}}{{{f{AOl}}{f{AOl}}}d}{{{f{Jj}}{f{Jj}}}d}{{{f{B@`}}{f{B@`}}}d}{{{f{En}}{f{AGd}}}d}{{{f{En}}{f{En}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{B@f}}{f{B@f}}}d}{{{f{B@h}}{f{B@h}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{B@j}}{f{B@j}}}d}{{{f{Jj}}{f{Jj}}d}d}{{{f{AMl}}{f{Bf}}}}{{{f{AMl}}{f{{l{Bd}}}}}}{{{f{AMl}}{f{AMl}}}}201{{f{f{c}}}d{}}00000000000000000000000000000000{{{f{{L`{ce}}}}}OjDnDn}{{{f{AOf}}{f{Bf}}}{{Ch{Jl}}}}{{AOh{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}{AMnAMl}{BA`{{N`{AOf}}}}{{{f{Dd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AOl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Jj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{En}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Oj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ld}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@f}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@h}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@j}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{El}}}Dd}{GnDd}{{{f{Bf}}}Dd}{ElDd}444{{{l{Lb}}}{{L`{LnLb}}}}{{{l{Kl}}}{{L`{KnKl}}}}666666666666{dJj}{{{f{{Bl{Bj}}}}}Jj}{{{f{Bf}}}Jj}{{{Ch{c}}}Jj{{BAf{Jj}}}}{cJjBAh};;;{{{f{AGd}}}En}{JjEn}{{{f{Jj}}}En}>{{{f{Jj}}}Oj}?{{{f{BAj}}}Oj}{{{f{B@j}}}Ld}{cc{}}0000000000000000000000{BAlAGd}{BAnAGd}22{{{f{AGd}}d}En}{{{l{Fd}}En}AMl}{{{l{Fd}}{N`{AOf}}dAOl}AMl}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{BB`}}}}}}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{{Ch{BB`}}}}}}}}{{{l{Fd}}AOl}AMl}{cDd{{Ib{}{{Cj{{f{Bf}}}}}}}}{cDd{{Ib{}{{Cj{{Cn{Bf}}}}}}}}{cDd{{Ib{}{{Cj{BAb}}}}}}{cDd{{Ib{}{{Cj{{f{Dd}}}}}}}}{cDd{{Ib{}{{Cj{El}}}}}}{cDd{{Ib{}{{Cj{Dd}}}}}}{cDd{{Ib{}{{Cj{{f{BAb}}}}}}}}{cDd{{Ib{}{{Cj{{E`{Bf}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{BBb}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{{Ch{BBb}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{AMf}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{{Ch{AMf}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{AMj}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{{Ch{AMj}}}}}}}}{{{f{Bf}}}Dd}0{ElDd}{{{f{{l{Bd}}}}{f{{AOd{Bf}}}}AOl}{{A`{AMln}}}}{{{Gl{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{Gl{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{Hb{}{{Cj{e}}}}JhIlIn}}{{GfcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{GfAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{DddGfAOl}AMl}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gf}{{Ch{c}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{AOf}}Jl}{{f{Bf}}}}{B@fKf}{B@h{{Ch{Kf}}}}{{{f{{L`{LjLh}}}}Gf}{{A`{Jjn}}}}{{{f{{L`{LfLb}}}}Gf}{{A`{Jjn}}}}{{{f{{L`{LlLb}}}}Gf}{{A`{Jjn}}}}{{{f{{L`{LnLb}}}}Gf}{{A`{Jjn}}}}{{{f{{L`{KnKl}}}}Gf}{{A`{Jjn}}}}{{{f{AOj}}Gf}{{A`{Jjn}}}}{{{f{AMl}}Gf}{{A`{Jjn}}}}{{{f{{L`{LjLh}}}}Gf}Jj}{{{f{{L`{KnKl}}}}Gf}Jj}{{{f{{L`{LnLb}}}}Gf}Jj}{{{f{{L`{LfLb}}}}Gf}Jj}{{{f{{L`{LlLb}}}}Gf}Jj}{{{f{AOj}}Gf}Jj}{{{f{AMl}}Gf}Jj}{{{f{AOf}}}{{f{{AOd{Bf}}}}}}{{}En}0000000000000000000000000{{{f{AOf}}Jl}{{Ch{{f{Bf}}}}}}{{B@hKf}Kf}{{B@hc}Kf{{Eb{}{{Ad{Kf}}}}}}{{{f{AMl}}}{{f{{N`{AOf}}}}}}{{{f{En}}}{{Ch{{Gl{Gf}}}}}}{{{f{Jj}}}{{Ch{{f{Bf}}}}}}{{{f{BBd}}Gf}Jj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gf}{{Ch{c}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{{l{Bd}}}}}}{{{f{AMl}}{f{Bf}}}}021{{{f{Dd}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}}bADl}{{{f{B@`}}{f{Dfc}}}bADl}{{{f{En}}{f{Dfc}}}bADl}{{{f{Oj}}{f{Dfc}}}bADl}{{{f{Ld}}{f{Dfc}}}bADl}{{{f{B@h}}{f{Dfc}}}bADl}{{{f{AGd}}{f{Dfc}}}bADl}{{{f{B@j}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}d}bADl}{{{f{{L`{LnLb}}}}}{{l{O`}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jj}}}Jl}{EnEn}{{}Gf}000000000000000000000000000000000000000000000{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{AGd}}}{{Ch{{f{AGd}}}}}}{{}c{}}000000000000000000000000000000000000000000000{{}Fh}01{{BBfEn}{{A`{Mjn}}}}{{{L`{LnLb}}}Ab}{{{L`{LjLh}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{KnKl}}}Ab}{AMlAb}{JjJj}{DdEl}{{{f{En}}}d}00{{{f{Jj}}}d}111{{{f{AMl}}}d}0212{{{f{AOf}}}d}23330323{{{f{AGd}}}d}343434044434444340{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}}BBh}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{En}}}{{f{En}}}}{{{f{AOf}}}Gf}{{{f{AMl}}}Gf}{DdBBj}{{{f{AMl}}{f{Bf}}}}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{{l{Bd}}}}}}012{{{f{AMl}}{f{AMl}}}{{A`{{Hh{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hh{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{dn}}}}{{{f{B@`}}}{{Ch{En}}}}{{{f{En}}}{{A`{Enn}}}}{{{f{AMl}}}Mj}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{DfBA`}}{f{{N`{AOf}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}03{{{f{{L`{LnLb}}}}}{{l{O`}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMl}}}{{A`{Gfn}}}}{{{f{AMl}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGfAOl}AMn}{{Ddc}{{L`{KnKl}}}{{If{{Bl{BBb}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bl{{Ch{BBb}}}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bl{AMf}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bl{{Ch{AMf}}}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bl{BB`}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bl{{Ch{BB`}}}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bl{AMj}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bl{{Ch{AMj}}}}}}}}{{{N`{AOf}}}BA`}{{DdEn}Oj}{KfB@f}{HdB@h}{KfB@h}{{{l{c}}}{{L`{ec}}}DnDn}{{}B@b}{{{f{DfBBh}}}Ch}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{{l{Bd}}}}}}{{{f{AMl}}{f{Bf}}}}210{{{f{AMl}}}Gf}5{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{{f{Dd}}{f{Dd}}}{{Ch{B@l}}}}{{{f{Jj}}{f{Jj}}}{{Ch{B@l}}}}{{{f{Ld}}{f{Ld}}}{{Ch{B@l}}}}{{{f{B@f}}{f{B@f}}}{{Ch{B@l}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DnDn}{{{f{AMl}}}{{f{{l{Fd}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gf}}}}{{{f{DfAMn}}{f{Bf}}}{{Hh{Jld}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{KnKl}}}}{f{{l{Bd}}}}{Ch{{f{AMh}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{f{{l{Bd}}}}{Ch{{f{AMh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{AOf}}{f{AOf}}}d}{{{f{{L`{LjLh}}}}}Gf}{{{f{{L`{LnLb}}}}}{{l{O`}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BBh}}}{{Hh{Gf{Ch{Gf}}}}}}{{{f{AMl}}d}AMl}{{{f{AMl}}Fb}AMl}{{{f{Jj}}}{{E`{Bf}}}}{{{f{{L`{LfLb}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{{L`{LnLb}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{L`{KnKl}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Jj}}{f{En}}}{{Ch{Jj}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{AMl}}B@bd}{{Cn{Cl}}}}{{{f{En}}B@b}AGd}{{{f{Oj}}B@b}BAj}{LdB@j}{{{f{En}}DdB@b}BAj}{Ld{{f{Bf}}}}{{{f{AMl}}{f{{AOd{Bf}}}}BBl}AMl}{{AGdGfd}AGd}{{{f{AMl}}}{{A`{AMln}}}}{{{f{AMl}}}AMl}{{{f{AGd}}}{{f{AGd}}}}{fc{}}00000000000000000000000000000000000{{{f{En}}}En}{{{f{AGd}}}BBn}{{{f{{L`{LjLh}}}}Gf}{{A`{{E`{{L`{LjLh}}}}n}}}}{fEl}{{{f{{L`{LnLb}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{L`{LfLb}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{{L`{KnKl}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}3333{{{f{Jj}}{f{Jj}}}d}{{{f{{L`{LfLb}}}}{Ch{{f{AMh}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{Ch{{f{AMh}}}}{f{{l{Bd}}}}}{{A`{{L`{KnKl}}n}}}}{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{{f{Jj}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000{Hd{{A`{B@f}}}}1111{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000{{{f{Jj}}{f{En}}}{{A`{Jjn}}}}{{{f{En}}B@b}{{A`{AGdn}}}}{f{{A`{GnBC`}}}}0000{fAAl}000000000000000000000000000000000000000000000{{{f{AGd}}}AGd}{{{f{AMl}}}{{A`{AMln}}}}{{{f{AMl}}}d}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gf}cJf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}}{{A`{AAnn}}}}1{{{f{En}}Jj}d}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{}c{}}000000000000000000000000000000000000000000000{Gfc{}}0{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Ih}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{DfDd}}BAb}{{A`{bHn}}}}{{{f{DfDd}}BCb}{{A`{bHn}}}}{{{f{DfDd}}{f{Bf}}}{{A`{bHn}}}}{{{f{En}}}Jj}```````````{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{AOh{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}{{{f{AMl}}{f{AMl}}}{{A`{{Hh{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hh{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BCd}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{{}b}{{{f{DfBCd}}}b}{Gfb}2{cc{}}6{{}Gf}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{}d}4`{{{f{DfBCf}}Jl{f{AOf}}}{{A`{{f{DfBCf}}n}}}}{{{f{DfBCf}}}{{f{DfBCf}}}}{{{f{DfBCf}}{f{Bf}}}{{A`{{f{DfBCf}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}>{BCfAMl}>=<{{DdGf{N`{AOf}}AOld}BCf}<;:=``````````````````````````{{{f{BCh}}}{{f{Bf}}}}666555`{{nBCh}n}{nn}66{{{f{BCh}}}f}7666{Gfb}00`{{{f{BCj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BCh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{n}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{cBCh{{BAf{{E`{Bf}}}}}}1{BCln}{BCnn}3{BD`n}{BDbn}{BDdn}{BDfn}{{}{{Gh{{f{Bf}}BCj}{{Ad{b}}}}}}{{}Gf}00{{}c{}}00{cnALj}{{{f{Bf}}}BCh}````{{{Gh{{f{Bf}}BCj}{{Ad{b}}}}}b}{cnBDh}{fEl}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GnBC`}}}}0{fAAl}00999{{{f{n}}c}n{{ABb{{f{Bf}}}{{Ad{El}}}}}}``````````````````{{fh}b}00{{{f{DfAAn}}{Gl{Fh}}{f{{BDj{En}}}}}{{A`{bn}}}}{{{f{DfAAn}}{Gl{Ab}}{f{{BDj{En}}}}}{{A`{bn}}}}{{{f{AAn}}{f{Eb}}}{{Gl{Fh}}}}0{{{f{AAn}}{f{{l{An}}}}}{{A`{AAnn}}}}{{Gf{Gl{Fh}}}AAn}{{{f{AAn}}{f{{Bl{Dd}}}}}{{A`{AAnn}}}}0{{{f{AAn}}{f{{Bl{Dd}}}}{f{{BDj{En}}}}d}{{A`{AAnn}}}}{{{f{AAn}}HdGf}AAn}{{{f{AAn}}}AAn}{{{f{DfAAn}}}{{f{DfAAn}}}}0{{{f{DfAAn}}{f{Bf}}e}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Fh}}}{{Ad{c}}}}}}{{{f{DfAAn}}Gfe}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Fh}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AAn}}}{{`{{D`{}{{Cj{Gf}}}}}}}}6{{{f{DfAAn}}}b}{{{f{BDn}}}BDn}{{{f{BE`}}}BE`}9{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AAn}}{f{Bf}}}{{A`{{f{Fh}}n}}}}{{{f{DfAAn}}c}b{{D`{}{{Cj{Fh}}}}}}{{{f{AAn}}e}{{A`{{Gl{{f{Fh}}}}n}}}{{If{Bf}}}{{Ib{}{{Cj{c}}}}}}{{}BE`}{{}AAn}{Gf{{f{c}}}{}}0000{Gf{{f{Dfc}}}{}}0000{Gfb}0000{{{f{AAn}}{f{Bf}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bf}}}{{A`{Fhn}}}}{{{f{AAn}}e}AAn{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{f{{BEb{DdA@l}}}}}AAn}{{{f{AAn}}{Ch{{f{{Bl{c}}}}}}}{{A`{AAnn}}}{}}{{{f{AAn}}}{{Gl{En}}}}9{{{f{{BDj{BAj}}}}}AAn}{{{f{{BDj{En}}}}}AAn}{{{f{BE`}}{f{BE`}}}d}{{{f{AAn}}{f{AAn}}}d}00{{f{f{c}}}d{}}00{{{f{AAn}}}Gf}`{{{f{AAn}}e}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gl{Fh}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}}{{Gl{Oj}}}}{{{f{AAn}}AIb}{{A`{AAnn}}}}{{{f{AAn}}{f{{l{An}}}}}{{A`{AAnn}}}}{{{f{BDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AAn}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}0000{cAAn{{Ib{}{{Cj{Ab}}}}}}{cAAn{{Ib{}{{Cj{Fh}}}}}}{{{f{{Bl{BEd}}}}}{{A`{AAnn}}}}{{{f{{Bl{BEd}}}}{f{{BDj{En}}}}}{{A`{AAnn}}}}{{c{f{{BDj{En}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{f{BEd}}}}}}}}{{{f{AAn}}Gf}{{Ch{{Gl{Jj}}}}}}{{{f{AAn}}{f{Bf}}}{{Ch{Gf}}}}{{{f{AAn}}}{{Gl{{f{Dd}}}}}}{{{f{AAn}}}{{Gl{Dd}}}}{{{f{AAn}}}{{Gl{{f{Bf}}}}}}{{{f{AAn}}}{{f{{Bl{Fh}}}}}}{{{f{DfAAn}}}{{f{Df{Gl{Fh}}}}}}{{{f{AAn}}Gf}{{A`{BEdn}}}}{{{f{AAn}}Gf{f{DfBEd}}}{{A`{bn}}}}{{{f{AAn}}Gf{f{DfBEd}}}b}{{{f{AAn}}}{{Ch{{A`{Enn}}}}}}`{{{f{AAn}}e}{{A`{BEfn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gl{Fh}}{f{BEh}}}{{A`{{Hh{Fh{Gl{Fh}}Cb}}n}}}}1{{{f{AAn}}{Gl{Fh}}dd}{{A`{BEfn}}}}{{{f{BE`}}{f{Dfc}}}bADl}{{{f{AAn}}{Ch{Gf}}}AAn}{{{f{AAn}}}Gf}{{{f{AAn}}{f{{Bl{Fh}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{{Bl{Fh}}}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{{Bl{Fh}}}}}{{f{DfAAn}}}}{{{f{AAn}}BEj}f}{{{f{AAn}}{f{Bf}}}f}{{{f{AAn}}Gf}f}{{{f{AAn}}{Nf{Gf}}}f}{{{f{AAn}}{BEl{Gf}}}f}{{{f{AAn}}{BEn{Gf}}}f}{{{f{AAn}}{BF`{Gf}}}f}{{{f{AAn}}{BFb{Gf}}}f}{{}Gf}0000{{{f{DfAAn}}Gfc}{{A`{{f{DfAAn}}n}}}BDl}{{}c{}}000000{{AAnDd}{{l{j}}}}{{{f{AAn}}}{{A`{{l{An}}n}}}}{{{f{AAn}}}d}1{{{f{AAn}}}{{`{Jd}}}}{{{f{AAn}}B@bd}BFd}{{{f{AAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{{f{AAn}}}BFf}{AAnBFh}{{{f{AAn}}}Gf}5{{{f{AAn}}}{{A`{{Ch{Fh}}n}}}}{{{f{AAn}}BDn}{{A`{{Ch{Ab}}n}}}}122{{{Gl{Fh}}}{{A`{AAnn}}}}{{Gf{Gl{Fh}}}AAn}{{{Gl{Fh}}}AAn}22{{{Gl{Fh}}Gf}{{A`{AAnn}}}}0{{{f{DfBFd}}}Ch}{{{f{DfBFf}}}Ch}{{{f{AAn}}}AAn}{{{f{AAn}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AAn}}ed}{{A`{{Gl{AAn}}n}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}0{{AAne}{{A`{cn}}}{}{{Eb{AAn}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}e}{{A`{cn}}}{}{{Eb{{f{DfAAn}}}{{Ad{{A`{cn}}}}}}}}{{AAngc}{{A`{en}}}{}{}{{Eb{AAnc}{{Ad{{A`{en}}}}}}}}{{{f{DfAAn}}}{{Ch{Fh}}}}{{{f{AAn}}{f{AAn}}}d}{{{f{DfAAn}}{f{Bf}}Dd}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{Bf}}c}{{A`{{f{DfAAn}}n}}}BFj}{{{f{DfAAn}}Gfc}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}Ddc}{{A`{{f{DfAAn}}n}}}BFj};{{{f{AAn}}{Gl{Fh}}{f{BFl}}}{{A`{{Hh{Fh{Gl{Fh}}Cb}}n}}}}`{{{f{AAn}}{f{Ab}}dd{Ch{Kf}}}{{A`{AAnn}}}}0{{{f{AAn}}Gfdd{Ch{Kf}}}{{A`{AAnn}}}}{{{f{AAn}}}{{BDj{En}}}}{{{f{AAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}e}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}Gf}{{Ch{{f{Fh}}}}}}{{{f{AAn}}c}{{A`{AAnn}}}{{BFn{Gf}}}}{{{f{AAn}}c}{{A`{{Gl{Fh}}n}}}{{BG`{Dd}}}}3{{{f{AAn}}e{f{{N`{{BDj{En}}}}}}}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}e{f{{BDj{En}}}}}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{DfAAn}}e}{{A`{bn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{DfAAn}}Gf}b}{{{f{AAn}}}{{Hh{GfGf}}}}{{{f{AAn}}Hd}AAn}{{{f{AAn}}}d}{{{f{DfAAn}}}b}{{{f{AAn}}}Gf}{{{f{BFd}}}{{Hh{Gf{Ch{Gf}}}}}}{{{f{BFf}}}{{Hh{Gf{Ch{Gf}}}}}}{{{f{AAn}}HdGf}AAn}00{{{f{AAn}}cFj}{{A`{AAnn}}}{{BG`{Dd}}}}{{{f{DfAAn}}cFj}{{A`{{f{DfAAn}}n}}}{{BG`{Dd}}}}{{{f{AAn}}Hd}{{Hh{AAnAAn}}}}0{{{f{DfAAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{AAnGfd}{{Gl{AAn}}}}{{{f{AAn}}BDn}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}{Ch{Gf}}}AAn}{{{f{AAn}}{f{{l{Fd}}}}}{{A`{AAnn}}}}{AAn{{Gl{Fh}}}}{{{f{AAn}}{f{{l{Fd}}}}}AAn}{{{f{AAn}}{f{{l{Fd}}}}d}AAn}{{{f{AAn}}}{{f{AAn}}}}{{{f{AAn}}BGb}{{A`{{AAf{AAh{AAd{{AAb{Gf}}}}}}n}}}}{fc{}}00{fEl}{{{f{DfAAn}}{Ch{{f{Bf}}}}{Ch{{AAj{El{Gl{El}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{Ch{{f{Bf}}}}{Ch{{AAj{Dd{Gl{Dd}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bf}}e}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}Gfe}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Fh}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}0000{BGd{{A`{AAnn}}}}{{{Hh{{BGf{{Cn{Cl}}}}{f{{BDj{BAj}}}}}}}{{A`{AAnn}}}}{{c{f{{BDj{En}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{A`{{f{BEd}}n}}}}}}}}{{{f{AAn}}{f{Bf}}}{{A`{Gfn}}}}{{}{{A`{c}}}{}}0000{f{{A`{GnBC`}}}}{fAAl}0000{{{f{AAn}}{Ch{{f{{Bl{El}}}}}}BE`{Ch{{Hh{HdGf}}}}}{{A`{AAnn}}}}{{{f{AAn}}d{Ch{{Gl{Dd}}}}BE`{Ch{{Hh{HdGf}}}}}{{A`{AAnn}}}}1{{{f{AAn}}c}{{A`{AAnn}}}{{BG`{Dd}}}}{{{f{AAn}}c{f{Bf}}BGh}{{A`{AAnn}}}{{BG`{Dd}}}}0{{{f{AAn}}{f{AAn}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{AAn}}}b}{{}c{}}0000{{{f{AAn}}}Gf}{{{f{DfAAn}}c}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}c{f{{BDj{En}}}}}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}Fh}{{f{DfAAn}}}}{{{f{AAn}}Dd{Ch{Jl}}}{{A`{AAnn}}}}{{{f{DfAAn}}Dd{Ch{Jl}}}{{f{DfAAn}}}}``````{{fh}b}0{{FhFh}}{{{f{Fh}}c}{}{B`Mh}}{{{f{Fh}}{f{Fh}}}}{{Fhc}{}{B`Mh}}{{{f{Fh}}{f{Cb}}}Fh}0000000{{{f{Fh}}{f{Cb}}AjA@`}Fh}1{{{f{Fh}}{f{Cb}}Bj}Fh}{{{f{DfFh}}{f{Fh}}}{{A`{{f{DfFh}}n}}}}{{{f{Fh}}c}Fh{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fh}}Fb}{{l{Fd}}}}{{{f{Fh}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{BGj}}}{{f{Ab}}}}{{{f{Fh}}}{{f{Ab}}}}{{{f{Fh}}}{{Ch{{f{BGl}}}}}}{{{f{Fh}}}{{Ch{{f{BGj}}}}}}{{{f{Fh}}}{{Ch{{f{Ab}}}}}}{{{f{BGj}}}Ab}{{{f{Fh}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fh}}}{{Ch{BGn}}}}{{{f{Fh}}{f{Fh}}}}{{FhFh}}{{{f{Fh}}{f{Fh}}}{{A`{Fhn}}}}2112{{{f{Fh}}}{{A`{{f{{l{An}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{BGj}}{f{En}}}{{A`{BGjn}}}}{{{f{Fh}}{f{En}}}{{A`{Fhn}}}}10{{{f{BGj}}{f{En}}G`}{{A`{BGjn}}}}{{{f{Fh}}{f{En}}G`}{{A`{Fhn}}}}{{{f{Fh}}}{{A`{{f{AMl}}n}}}}{{{f{Fh}}}Fh}{{{f{BGj}}}BGj}1{{f{f{Dfc}}}b{}}0{fb}0{{{f{Fh}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Fh}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Fh}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Fh}{Gf{{f{c}}}{}}0{Gf{{f{Dfc}}}{}}0{{{f{Fh}}c}{}{B`Mh}}{{FhFh}}{{{f{Fh}}{f{Fh}}}}{{Fhc}{}{B`Mh}}{{{f{Fh}}{f{Fh}}}{{A`{Fhn}}}}{Gfb}0?{{{f{BGj}}}{{f{En}}}}{{{f{Fh}}}{{f{En}}}}{{{f{Fh}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Fh}}{f{Fh}}}d}{{{f{Fh}}{f{Fh}}}{{A`{{l{An}}n}}}}011{{{f{Fh}}}{{A`{Fhn}}}}{{{f{DfFh}}{f{Fh}}}{{A`{{f{DfFh}}n}}}}{{{f{Fh}}JjGf}{{A`{Fhn}}}}{{{f{Fh}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{Fh}}}{{E`{Oj}}}}{{{f{Fh}}AIb}{{A`{Fhn}}}}{{{f{Fh}}{f{{l{An}}}}}{{A`{Fhn}}}}{{{f{BGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fh}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{BGjFh}1{BGlFh}{AbFh}{{AbGf}BGj}{{DdGf{f{En}}}Fh}{{{f{Fh}}GfGf}Fh}{{{f{Fh}}Gf}{{A`{Jjn}}}}{{{f{Fh}}}Gf}{{{f{Fh}}}Jn}{{{f{Fh}}}{{Ch{{Cn{Fn}}}}}}{{{f{Fh}}Gf}{{Ch{{f{K`}}}}}}{{{f{Fh}}Gf}Jj}{{{f{Fh}}{f{Fh}}}{{A`{{l{An}}n}}}}0{{{f{BGj}}}d}{{{f{Fh}}}d}{{{f{Fh}}{Ch{Gf}}}Fh}{{{f{Fh}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Fd}}}}n}}}}{{}Gf}0{{}c{}}0{BDlFh}{BGjFh}{FhFh}{FhAAn}{{{f{DfFh}}}{{f{DfAb}}}}>={{{f{Fh}}}{{A`{{l{An}}n}}}}000{{{f{Fh}}}{{l{An}}}}0{{{f{Fh}}}Mb}{{{f{BGj}}}{{Ch{{f{Ab}}}}}}{{{f{BGj}}}Gf}{{{f{Fh}}}Gf}{{{f{Fh}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Fh}}{f{Fh}}}{{A`{{l{An}}n}}}}0{{{f{Fh}}}{{A`{Mjn}}}}0{{{f{Fh}}c}{}{B`Mh}}{{Fhc}{}{B`Mh}}{{{f{Fh}}{f{Fh}}}}{{FhFh}}{{{f{BGj}}}{{f{Dd}}}}{{{f{Fh}}}{{f{Dd}}}}{{DdMjGf}BGj}{{Ddc}Fh{}}{{DdEn}BGj}{{Dd{f{En}}}Fh}{{{f{Fh}}GfGf}Fh}{{DdMjGf}Fh}0==?{{{f{Fh}}}{{Cn{Jd}}}}={{{f{Fh}}}Fh}=:<;{{{f{DfBGj}}Dd}{{f{DfBGj}}}}{{{f{DfFh}}Dd}b}{{{f{Fh}}{f{{Bl{B@h}}}}}{{A`{Fhn}}}}0{{{f{BGj}}Gf}BGj}4{{{f{Fh}}Ajdd{Ch{Kf}}}{{A`{Fhn}}}}{{{f{Fh}}Gfdd{Ch{Kf}}}{{A`{Fhn}}}}{{{f{BGj}}}{{f{Mj}}}}{{{f{DfFh}}Mb}b}{{{f{Fh}}Hd}Fh}{{{f{DfFh}}}b}{{{f{Fh}}{Ch{Kf}}}Fh}{{{f{Fh}}HdGf}Fh}{{{f{Fh}}Fb}{{A`{Fhn}}}}{{{f{Fh}}Hd}{{Hh{FhFh}}}}{{{f{Fh}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{BGj}}{f{En}}}{{A`{BGjn}}}}{{{f{Fh}}{f{En}}}{{A`{Fhn}}}}{{{f{Fh}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Fh}}c}{}{B`Mh}}{{{f{Fh}}{f{Fh}}}}{{Fhc}{}{B`Mh}}{{FhFh}}{{{f{Fh}}{Ch{Gf}}}Fh}{{{f{Fh}}{f{{l{Fd}}}}}{{A`{Fhn}}}}{BGjAb}{FhAb}{{{f{Fh}}{f{{Bl{Jl}}}}}{{A`{Fhn}}}}{{{f{Fh}}{f{{Bl{Jl}}}}}Fh}{{{f{Fh}}{f{{l{Fd}}}}}Fh}{fc{}}0{{{f{Fh}}}Fh}{{{f{BGj}}}Ab}{{{f{Fh}}c}{{A`{Fhn}}}{{Eb{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Cf}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Bh}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Ff}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Fh}}}{{Ch{{f{AMl}}}}}}{{{f{Fh}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Fh}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Fh}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Fh}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Ej}}}}}}}}{c{{A`{e}}}{}{}}0{{{f{Fh}}}{{Ch{{f{{l{Nl}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Fd}}}}}}}}{{}{{A`{c}}}{}}0{{{f{Fh}}}{{Ch{{f{{l{Ah}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Bd}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{j}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Od}}}}}}}}5{{{f{Fh}}}{{Ch{{f{{l{Nh}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Oh}}}}}}}}{fAAl}0{{{f{Fh}}}{{A`{{f{{l{Od}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Oh}}}}n}}}}{{{f{Fh}}}{{A`{Fhn}}}}0{AbBGj}{{{f{Fh}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{Fh}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FhDd}Fh}{{{f{Fh}}c}Fh{B`Mh}}{{{f{Fh}}{f{{l{An}}}}{f{Fh}}}{{A`{Fhn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BH`}}}BH`}{{f{f{Dfc}}}b{}}{fb}{{}BH`}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{BH`}}{f{BH`}}}d}{{f{f{c}}}d{}}00{{{f{BH`}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{BH`}}{f{Dfc}}}bADl}`{{}Gf}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}``4````````````````````````````````{{fh}b}000{{{f{BEf}}}{{A`{AAnn}}}}`{{{f{BHb}}}{{f{{Bl{{BHd{Jl}}}}}}}}{{{f{BEf}}c}{{A`{AAnn}}}{{Af{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{{f{Cb}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BHb}}}BHb}{{{f{Cb}}}Cb}{{{f{BEf}}}BEf}{{{f{BHf}}}BHf}{{f{f{Dfc}}}b{}}000{fb}000;{{}BHb}{{}Cb}{Gf{{f{c}}}{}}000{{{f{BHh}}}f}1111{Gf{{f{Dfc}}}{}}0000000`{{BHjc}{}BHl}{Gfb}000{{{f{DfBHb}}}b}1111{{{f{BHb}}{f{BHb}}}d}{{{f{Cb}}{f{Cb}}}d}{{f{f{c}}}d{}}00000`{{{f{BHn}}}Jl}{{{f{BHb}}}{{f{{Bl{Jl}}}}}}{{{f{BEf}}}{{A`{AAnn}}}}{{{f{DfBHb}}}{{f{Df{Gl{Jl}}}}}}{{{f{BHb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Cb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BHf}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Bf}}BHf}Dd}{cc{}}0000{{{Gl{{Gl{{Hh{Jl{BHd{Jl}}}}}}}}}BHb}{{{Gl{{Hh{Jl{BHd{Jl}}}}}}}BHb}2{BHbCb}3{BI`BHf}4{cBHb{{Ib{}{{Cj{{Hh{Jl{BHd{Jl}}}}}}}}}}{cBHb{{J`{}{{Cj{{Hh{Jl{BHd{Jl}}}}}}}}}}{{{f{Cb}}Gf}BHn}{{{f{BEf}}}{{f{Cb}}}}{{{f{DfBEf}}}{{f{DfCb}}}}{{{f{Cb}}}{{l{Fd}}}}{{{f{BIb}}dd}{{A`{Cbn}}}}{{{f{BEf}}}{{A`{AAnn}}}}{{{f{DfCb}}}{{f{DfBHb}}}}{{}Gf}0000000{{}c{}}0000000{CbBHb}1{{{f{BHb}}}}{BHb}301{{{f{BHn}}}d}{{{f{Cb}}}d}{{{f{BHb}}}d}{{{f{BHb}}}{{BIf{{BId{{Gd{Jl}}}}{Gd{{BHd{Jl}}}}}}}}{{{f{Cb}}}BIh}{{{f{BEf}}}{{Gl{Fh}}}}{{{f{BEf}}{Ch{{Hh{HdGf}}}}}{{Gl{Fh}}}}={{{f{BHn}}}Gf}{{{f{Cb}}}Gf}?????{{{Gl{Jl}}{Gl{{BHd{Jl}}}}d}BHb}{{{f{AAn}}{Gl{Fh}}Cb{Ch{{Gl{Dd}}}}}BEf}{{{f{DfBIh}}}Ch}{{{f{DfBIh}}Gf}Ch}{{{f{BEf}}c}{{A`{AAnn}}}{{Eb{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{f}{{{f{Cb}}}BHj}{{{f{BEf}}AjA@`}{{A`{AAnn}}}}{{BEfe}BEf{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{Cb}}HdGf}BHh}{{{f{DfBHb}}}b}{{{f{DfCb}}}b}{{{f{BEf}}Bj}{{A`{AAnn}}}}{{{f{BEf}}}{{A`{AAnn}}}}{Cb{{Gl{Jl}}}}0{BEfCb}{{{f{DfBEf}}}Cb}{fc{}}000{fEl}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GnBC`}}}}{fAAl}0000000{CbCb}{{{f{Cb}}}{{f{BHb}}}}{{{f{Cb}}}{{f{{Gl{{AAb{Jl}}}}}}}}={{}c{}}0000000`````{{{f{BHb}}c}Ab{{Eb{{Hh{Jl{f{{BHd{Jl}}}}}}}{{Ad{Ch}}}}IlIn}}{{{f{BHb}}c}Ab{{Eb{{Hh{Jl{f{{BHd{Jl}}}}}}}{{Ad{}}}}IlIn}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{Eb{{AAb{Jl}}}{{Ad{Ch}}}}IlIn}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{Eb{{AAb{Jl}}}{{Ad{}}}}IlIn}}{{{f{{Bl{c}}}}e{Ch{BIj}}}{{ALn{c}}}{BIlBIn}{{D`{}{{Cj{{Hh{JlJl}}}}}}Jh}}{{{f{{Bl{c}}}}{f{Ih}}e{Ch{BIj}}}{{ALn{c}}}{BIlBIn}{{D`{}{{Cj{{Hh{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dn}{{{f{{Gl{{AAb{Jl}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BJ`}}{f{Cb}}}Ab}{{BJbBJb}BJb}0`{{{f{BJd}}{f{AAn}}{f{Cb}}}{{A`{Abn}}}}{{{f{BJd}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBJf}}Jj}{{Ch{b}}}}{{{f{DfBJh}}{f{Jj}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BJf}}}BJf}{{{f{BJh}}}BJh}{{{f{BEd}}}BEd}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bl{c}}}}}En{{Ij{En}}}}{{}BEd}{Gf{{f{c}}}{}}00{Gf{{f{Dfc}}}{}}00{Gfb}00{{{f{BEd}}{f{BEd}}}d}{{f{f{c}}}d{}}00{{{f{BEd}}{f{DfHl}}}{{A`{bHn}}}}{{{Hh{{f{En}}Gf}}}BJf}{cc{}}0{{{Hh{{f{En}}Gf}}}BJh}1{{gGf}{{BDj{En}}}{{BAf{Dd}}}{{BAf{En}}}{{D`{}{{Cj{{Gl{{Hh{ce}}}}}}}}}}{{}Gf}00{{}c{}}00{BJfAb}{BJhAb}{{{f{En}}Gf}BJf}{{{f{En}}Gf}BJh}{{{Gl{Jj}}}BEd}{{{f{DfBJf}}Gf}Ab}{{{f{DfBJh}}Gf}Ab}{{{f{{Bl{BEd}}}}{Ch{Gf}}}{{A`{{BDj{En}}n}}}}0{{{f{{Bl{BEd}}}}{Ch{Gf}}}{{A`{{Gl{En}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00==={{{f{{Bl{AAn}}}}}{{A`{AAnn}}}}{{{f{{Bl{AAn}}}}d}{{A`{AAnn}}}}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAn{f{{Bl{Dd}}}}{f{{Bl{Dd}}}}{Ch{Dd}}{f{AAn}}}AAn}{{BFhc}{{A`{AAnn}}}{{Eb{BJj{f{Df{BJn{BJl}}}}{f{Df{BJn{BK`}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BKb}}{f{{Bl{Jl}}}}ddd}AAn}{{{f{BKb}}{f{{Bl{Jl}}}}{Ch{{Hh{HdGf}}}}}AAn}{{{f{BKb}}{f{AAn}}{f{Ab}}{f{Ab}}BKd}{{A`{AAnn}}}}`{{{f{Bf}}{f{Bf}}}Dd}{{BKf{N`{{Bl{Dd}}}}}BBj}{{{f{BKb}}{f{Ab}}{f{Ab}}{Ch{{Hh{HdGf}}}}dd}{{A`{AAnn}}}}{{{f{BGd}}Gf}{{Hh{BGdBGd}}}}{{{f{AHd}}}Aj}{{{f{BKh}}}Aj}{{{f{BKj}}{f{{Bl{A@h}}}}Mb}AAn}0{{{f{BKj}}{f{{Bl{A@h}}}}}AAn}0{{{f{BKl}}{Ch{{Gl{{f{Bf}}}}}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{BFhd}BFh}{{{BKn{c}}{Ch{{N`{BL`}}}}}{{BKn{c}}}BLb}{{{f{Ab}}}{{A`{Abn}}}}{BBjBBj}{{{BLd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{BLfBLf}}{{{f{BGh}}Hd{Ch{{f{AMh}}}}}{{A`{Hdn}}}}0{{{f{BLh}}{f{Ab}}}{{A`{Abn}}}}1{{BLjc}BFh{{If{{Bl{BBj}}}}}}6`{{BBjc}BBj{{BAf{Dd}}}}{{}BBj}{{BBjd}BBj}{{}BLl}{c{{A`{BBjn}}}{{If{{Bl{BBj}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@fBLn}`{{BM`d}BM`}`{{{f{BMb}}}d}00`{{BBjc}BBj{{BAf{BBj}}}}{{{f{BKh}}}{{A`{Mjn}}}}{{{N`{BMb}}BMd}{{A`{BFhn}}}}{{BFhBFhcc}BFh{{BAf{BBj}}}}97{{BBjcd}BBj{{BAf{BBj}}}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACf}}c}b{}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{c}}}}}}Ed}}{{BLjc{N`{{BDj{En}}}}}BFh{{Eb{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{BBjc{BMh{{N`{BMf}}}}}BBj{{Eb{Fh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}}{{BBjBBjc{BMh{{N`{BMf}}}}}BBj{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}}{{{f{BBj}}{f{Dfc}}f}{{A`{BMjn}}}{{Af{{f{BBj}}f}{{Ad{{A`{BMjn}}}}}}}}{{{f{AHj}}{f{Eb}}}AHj}{{{f{AHj}}{f{Eb}}}{{l{c}}}Dn}{{BBjc{f{{Bl{BBj}}}}{BMh{{N`{BMf}}}}}BBj{{Eb{{f{Df{Bl{Fh}}}}}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}}{{BBjBMl{f{{Bl{BBj}}}}dd}BBj}{{ce{BMh{{N`{BMf}}}}d}BBj{{Eb{{f{Df{Bl{Fh}}}}}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}{{If{{Bl{BBj}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{Eb{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Eb{e}{{Ad{c}}}}Ed}}{{BBjBBjHdEn}BBj}{BGd{{N`{Cl}}}}{{{f{BMn}}}{{Ch{Gf}}}}{BN`BBj}{BNbBBj}{BBjBBj}3210{{{f{AHl}}Fb}{{l{Fd}}}}{{BBjFb}BBj}{{{f{BKh}}Fb}{{l{Fd}}}}{{cFj}BBj{{If{{Bl{BBj}}}}}}{{{f{AHl}}{f{{Bl{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{AHn}}}{{A`{{l{Fd}}n}}}}6{{{f{BKh}}}{{A`{{l{Fd}}n}}}}{cBBj{{BAf{BBj}}}}{{{f{BNd}}}{{f{{Bl{Oj}}}}}}``{BBjBN`}{eAN`{}{{Ib{}{{Cj{c}}}}}}{cBGd{{Ib{}{{Cj{b}}}}}}{cBGd{{Ib{}{{Cj{{Ch{b}}}}}}}}2{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{AGdc}BGd{{Ib{}{{Cj{{Ch{b}}}}}}}}{{AGdc}BGd{{Ib{}{{Cj{b}}}}}}`{{{f{Df{BNf{c}}}}}{{A`{{BDj{BAj}}n}}}BNh}{{{f{BMb}}}{{f{AGf}}}}{{{f{BKh}}}{{f{AGf}}}}{{{f{BNj}}}{{f{AGf}}}}{{{f{BGd}}}{{f{AGf}}}}{{{f{DfBKh}}}{{f{DfAGf}}}}{{{f{DfBGd}}}{{f{DfAGf}}}}{{{f{Mj}}}Jj}{{{f{BNl}}}{{f{{l{Bh}}}}}}{{{f{BNn}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{N`{c}}}}}BO`{BObA@f}}{{{f{BOd}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@fBLn}{{{f{{N`{c}}}}}NdBOf}{{{f{BOh}}}{{f{BBj}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@fBLn}{{{f{ANh}}}{{f{En}}}}{{{f{BOj}}}{{f{Ab}}}}{{{f{DfBKh}}}{{A`{Gfn}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{BOl}}}{{f{{l{Bd}}}}}}{{{Gl{BBj}}}BBj}{{{f{BNn}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{Bl{{BOn{c}}}}e}}}{{N`{{Bl{c}}e}}}{}BLn}{{{N`{{BOn{c}}e}}}{{N`{ce}}}{}BLn}{{{f{Bf}}}BBj}{{BBj{Ch{Jl}}}BBj}{{{f{C@`}}}{{A`{{l{Bd}}n}}}}{{{f{C@`}}}{{l{Bd}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMh}}}{{L`{LlLb}}}}`{{{BKn{{Cn{BLb}}}}{Ch{{N`{{BDj{En}}}}}}}{{A`{C@bn}}}}{{{C@d{c}}{f{{BDj{En}}}}}{{A`{{C@f{c}}n}}}C@h}{{{C@j{c}}{f{{BDj{En}}}}}{{A`{{C@l{c}}n}}}C@h}{{{C@n{c}}Gf}{{A`{CA`n}}}BLb}{{{CAb{c}}{f{{BDj{En}}}}}{{A`{{CAd{c}}n}}}C@h}{{{f{Df{BKn{c}}}}}{{A`{CAfn}}}BLb}`{BBjCAh}{{BBjCAjBBj}BBj}{{BLfBLf}}{{BLlBLl}BLl}{{{f{BKh}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLl}}BLl}b}210{{{f{BLl}}}Jl}04321{f{{f{c}}}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@fBLn}11111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BFhJlcFj}BFh{{If{{Bl{BBj}}}}}}{BGd{{Cn{Cl}}}}{{{f{BKh}}}{{Ch{{Cn{Fn}}}}}}``{BFhBFh}```{{{f{CAl}}{f{Dd}}}{{A`{Ddn}}}}{{CAn{Gl{BBj}}}{{A`{BBjn}}}}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{BNj}}{f{Df{Bl{Fh}}}}}{{A`{{Ch{Fh}}n}}}}{{{f{CB`}}FhFh}{{A`{Fhn}}}}{{CAn{Gl{BBj}}}BBj}{{{f{CBb}}}b}{{BBjEn}BBj}{{{f{BKh}}{f{En}}G`}{{A`{Abn}}}}{{BFh{CBd{{f{Bf}}EnA@l}}d}BFh}{{{f{AI`}}{f{En}}}{{A`{Abn}}}}3{{{f{AOj}}{f{En}}}{{A`{Abn}}}}{{BFhEnd}BFh}2{{{f{AI`}}{f{En}}G`}{{A`{Abn}}}}{{{f{AOj}}{f{En}}G`}{{A`{Abn}}}}{{BBjEnG`}BBj}`{BBjCBf}{{{f{{N`{c}}}}}{{Ch{{f{ALj}}}}}{ALjA@f}}{BBjBBj}{{{f{CBh}}}{{A`{Abn}}}}1`{{{f{CBj}}}{{A`{{l{Kl}}n}}}}{{{f{BGd}}Gf}d}{{{f{CBl}}{f{Ab}}}{{A`{Abn}}}}{{{f{BKh}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBl}}c}{{A`{Abn}}}Bb}{{{f{BKh}}}{{Gj{{Gd{{Cn{Cl}}}}{Gh{{f{{Cn{Cl}}}}}{{Ad{Gf}}}}}}}}``{{{f{BKh}}}{{f{{Gl{{Cn{Cl}}}}}}}}{{{f{DfBKh}}}{{f{Df{Gl{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBjBBjBBj}BBj}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBjBBj}BBj}10{{{f{CBb}}}CBb}{{{f{BFh}}}BFh}{{{f{BLj}}}BLj}{{{f{BMd}}}BMd}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{BEh}}}BEh}{{{f{BFl}}}BFl}{{{f{CCh}}}CCh}{{{f{BGh}}}BGh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{AB`}}}AB`}{{{f{A@h}}}A@h}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{BKd}}}BKd}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{BOh}}}BOh}{{{f{BBj}}}BBj}{{{f{{CHh{c}}}}}{{CHh{c}}}{JfJf}}{{{f{CHj}}}CHj}{{{f{CAj}}}CAj}{{{f{{BMh{c}}}}}{{BMh{c}}}Jf}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{BMl}}}BMl}{{{f{CIj}}}CIj}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{CJb}}}CJb}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{CJh}}}CJh}{{{f{CJj}}}CJj}{{{f{CJl}}}CJl}{{{f{BLf}}}BLf}{{{f{CAn}}}CAn}{{{f{BLl}}}BLl}{{{f{{N`{ce}}}}}{{N`{ce}}}A@f{BLnJf}}{{{f{CJn}}}CJn}{{{f{CK`}}}CK`}{{{f{CKb}}}CKb}{{{f{A@b}}}A@b}{{{f{BGb}}}BGb}{{{f{BGd}}}BGd}{{{f{Mj}}}Mj}{{{f{BAj}}}BAj}{{{f{A@`}}}A@`}{{{f{BIj}}}BIj}{{{f{CKd}}}CKd}{{{f{CKf}}}CKf}{{{f{CKh}}}CKh}{{{f{BKh}}}{{N`{BKh}}}}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CKj}}}{{Ch{{f{CKl}}}}}}{{{f{CBn}}}{{Ch{{f{CKl}}}}}}{{{f{CCb}}}{{Ch{{f{CKl}}}}}}``{{{f{BGh}}{f{BGh}}}B@l}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}B@l{CKnA@f}BLn}{{{f{{Bl{BBj}}}}}BBj}{{BM`CEj}BM`}{{{f{CEj}}{f{CEl}}}d}`{{{f{{Bl{Fh}}}}}{{A`{Fhn}}}}{cBBj{{BAf{Dd}}}}{BFh{{A`{AAnn}}}}{c{{A`{{Gl{AAn}}n}}}{{J`{}{{Cj{BFh}}}}}}{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{ADnDd}{{l{c}}}Dn}{{AE`{f{{l{c}}}}}{{l{c}}}Dn}10{{AE`DdEn}{{l{c}}}Dn}0{BFh{{A`{CBbn}}}}{{{f{DfBFh}}}{{A`{{N`{{BDj{En}}}}n}}}}{eBBj{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{CJf}}Gf}CL`}``{{{f{BKl}}{Gl{{f{Bf}}}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}`{{f{f{c}}}B@l{}}0{BLlBLl}```{{{f{CGn}}}{{A`{{N`{{BDj{En}}}}n}}}}{{cCKb}{{A`{BFhn}}}{{If{{Bl{BFh}}}}}}{{{f{C@`}}{f{{l{Bd}}}}}{{l{Bd}}}}{{ed}{{A`{BBjn}}}{{BAf{BBj}}Jf}{{If{{Bl{c}}}}}}{{{f{CKj}}{Gl{BFh}}}{{A`{BFhn}}}}{{{f{CBn}}{Gl{BFh}}}{{A`{BFhn}}}}44{e{{A`{BBjn}}}{{BAf{BBj}}Jf}{{If{{Bl{c}}}}}}{{c{f{Bf}}d}BBj{{If{{Bl{BBj}}}}}}{{BN`c}BBj{{BAf{BBj}}}}{{{f{CLb}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{C@`}}{f{Bf}}d}{{A`{{l{An}}n}}}}{{BNbc}BBj{{BAf{BBj}}}}{{{f{BLl}}BLl}d}{{{f{CLb}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{C@`}}{f{{l{Bd}}}}dd}{{A`{{l{An}}n}}}}{{{f{C@`}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{Cl}}{f{AGd}}}{{Cn{Cl}}}}{{{f{Ab}}Gf}{{A`{{l{Fd}}n}}}}{BFhBFh}{{{CLd{c}}}{{A`{Gfn}}}BLb}{BBjBBj}{{{f{C@`}}{f{Bf}}d}{{A`{{l{Fd}}n}}}}{{{f{C@`}}{f{{l{Bd}}}}d}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{ANf}}Bj{Ch{Bj}}{Ch{{f{CDh}}}}Bjd}{{A`{Gfn}}}}{{{f{{Bl{Bj}}}}Bj{Ch{Bj}}{Ch{{f{CDh}}}}Bjd}{{A`{Gfn}}}}2{{{AOd{Bf}}}En}{{{f{BKb}}{f{{Bl{A@h}}}}dd}AAn}{{{f{CLf}}}{{CBd{GfMbA@l}}}}`{{BFhBFh{Ch{Dd}}}BFh}{{{f{CLh}}{f{AAn}}{Ch{Dd}}{Ch{{Hh{HdGf}}}}}{{A`{AAnn}}}}{{{f{CLh}}{f{AAn}}{Ch{{Hh{HdGf}}}}d}{{A`{{Hh{AAnAAn}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBjd}BBj}{{BBjced}BBj{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}{{If{{Bl{BBj}}}}}}212121{{ce}BBj{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}{{If{{Bl{BBj}}}}}}32{{CLjBBjGfd}BBj}```{{BBjBBjBGhCCj}BBj}`{CIjBBj}`{{BBjBBjBGhCCj{Ch{Ld}}{Ch{Dd}}}BBj}0{AMfHd}00{{{f{CLl}}}{{l{O`}}}}{{{f{CLn}}}{{l{O`}}}}{{{f{CBj}}}{{A`{{l{O`}}n}}}}`{{{f{CM`}}}{{l{Lb}}}}{{{f{BGh}}}Hd}`{{{f{BGh}}}d}```{{}b}{cbBLn}{{}BFh}{{}BMd}{{}CC`}{{}CCd}{{}CMb}{{}BEh}{{}BFl}{{}CCn}{{}CDb}{{}CDd}{{}CDf}{{}CDl}{{}CDn}{{}CE`}{{}CEd}{{}CEf}{{}BKd}{{}CEh}{{}CEj}{{}CEn}{{}CFb}{{}CFd}{{}CFf}{{}CFh}{{}CFj}{{}CFl}{{}CFn}{{}CGh}{{}CGl}{{}CGn}{{}BBj}{{}{{BMh{{N`{CB`}}}}}}{{}{{BMh{{N`{CMd}}}}}}{{}{{BMh{{N`{BMf}}}}}}{{}CIb}{{}CIj}{{}CIl}{{}CJ`}{{}CJb}{{}CJd}{{}CJh}{{}CJl}{{}BLl}{{}{{N`{{Bl{c}}}}}{}}{{}{{N`{Bf}}}}{{}{{N`{c}}}CMf}{{}{{N`{CMh}}}}{{}CK`}{{}CKb}{{}A@b}{{}BGb}{{}BAj}{{}A@`}`{{}{{AAj{{Gl{AB`}}{Gl{A@h}}}}}}{Gf{{f{c}}}{}}0{{{f{{AMd{c}}}}}f{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BMh{c}}}}}f{}}2222222222222222222222{{{f{{N`{ce}}}}}{{f{c}}}A@fBLn}333333333333333{Gf{{f{Dfc}}}{}}00{{{f{Df{AMd{c}}}}}{{f{Df}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CGn}}}{{A`{Eln}}}}{{{f{BFh}}}{{A`{Eln}}}}0001{{{f{{N`{c}}}}}{{f{Bf}}}{ALjA@f}}{{{f{BAj}}c}{{A`{CMjn}}}{{Jd{}{{Cj{{f{CMl}}}}}}}}```{{{f{Ab}}HdCMn}{{A`{Abn}}}}{{BNbHdCMn}BBj}{{BBjHdCMn}BBj}{{BLlBLl}BLl}{{{f{CGn}}}{{A`{{`{BDh}}n}}}}``{{{BLd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{{f{BLh}}{f{Ab}}}{{A`{Abn}}}}{{BBjc}BBj{{BAf{BBj}}}}{{{N`{AGfc}}}{{A`{{N`{ec}}{N`{AGfc}}}}}BLn{AGfIlIn}}{{{N`{AGfc}}}{{N`{ec}}}BLn{AGfIlIn}}{{{f{{N`{ce}}}}}{{CN`{ce}}}A@f{JfBLn}}{Gfb}000000{{{f{DfCBb}}}b}1{{BFhe}BFh{{BAf{BLf}}}{{Ib{}{{Cj{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@fBLn}333333333333333{BBjBBj}2{{BFh{Ch{{Gl{BBj}}}}}BFh}1{{{f{BKh}}}Ab}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMh}}}{{L`{LlLb}}}}`{BBjCNb}{{{f{AOj}}}{{f{En}}}}{{{f{BKh}}}{{f{En}}}}{{{f{BGd}}}{{f{AGd}}}}{{{f{Mj}}}{{f{En}}}}{{{f{BAj}}}{{f{AGd}}}}``{{{f{En}}}BBj}{cBBj{{If{{Bl{En}}}}}}`{CIlBBj}{{}CIb}{{}BLl}{fc{{BAd{BAb}}}}0`{{{f{CLb}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{CLb}}{f{{l{Bh}}}}}{{l{An}}}}{{BGh{f{En}}{f{Bf}}}{{A`{bn}}}}{{BGh{Ch{{f{Bf}}}}{f{Bf}}}{{A`{bn}}}}{{{f{{BDj{c}}}}{f{{BDj{c}}}}}{{A`{bn}}}{}}{{{f{CNd}}{f{Bf}}}{{A`{bn}}}}`{{{f{CCf}}{f{CCf}}}d}{{{f{BEh}}{f{BEh}}}d}{{{f{BFl}}{f{BFl}}}d}{{{f{BGh}}{f{BGh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{AB`}}{f{AB`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{BKd}}{f{BKd}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{BOh}}{f{BOh}}}d}{{{f{BBj}}{f{BBj}}}d}{{BBjc}BBj{{BAf{BBj}}}}{{{f{{CHh{c}}}}{f{{CHh{c}}}}}d{CNfJf}}{{{f{CHj}}{f{CHj}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{{BMh{{N`{c}}}}}}{f{{BMh{{N`{c}}}}}}}dA@f}{{{f{{BMh{Ab}}}}{f{{BMh{Ab}}}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{CMj}}{f{CMj}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{CId}}{f{CId}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{BMl}}{f{BMl}}}d}{{{f{CIn}}{f{CIn}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{CJd}}{f{CJd}}}d}{{{f{CJh}}{f{CJh}}}d}{{{f{CJj}}{f{CJj}}}d}{{{f{CJl}}{f{CJl}}}d}{{{f{BLf}}{f{BLf}}}d}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CNfA@f}BLn}{{{f{{N`{CNh}}}}{f{CNh}}}d}{{{f{CJn}}{f{CJn}}}d}{{{f{CK`}}{f{CK`}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{BGd}}{f{BGd}}}d}{{{f{BGd}}{f{{f{Cl}}}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BAj}}{f{BAj}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BIj}}{f{BIj}}}d}{{{f{CKd}}{f{CKd}}}d}{{{f{CKf}}{f{CKf}}}d}{{{f{CKh}}{f{CKh}}}d}{{BBjc}BBj{{BAf{BBj}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{Bf}}}El}{{CNjBBjd}BBj}``{{BBjc}BBj{{BG`{Dd}}}}{{BBjc}BBj{{If{{Bl{En}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDd}}}CNl{}}{{{f{{Bl{CNn}}}}d{Ch{{f{CKl}}}}}{{A`{{N`{{Bl{CNn}}}}n}}}}{{{f{{Bl{CNn}}}}d{Ch{{f{CKl}}}}d}{{A`{{Hh{{N`{{Bl{CNn}}}}Gf}}n}}}}{{{f{{Bl{c}}}}{f{{Bl{c}}}}}d{{If{ANf}}}}{{{f{BFh}}d}{{A`{Eln}}}}{BN`BBj}{{BFhe}BFh{{BAf{BLf}}Jf}{{If{{Bl{c}}}}}}{{{f{AIf}}}{{A`{Abn}}}}{BBjBBj}{{{f{AIf}}}{{A`{{Hh{Ab{Hf{Hd}}}}n}}}}`{{{f{DfBLl}}c}b{{Ib{}{{Cj{BLl}}}}}}{{BBjBBjBBj}BBj}{{{f{C@`}}{f{{l{Bd}}}}Gf}{{A`{{l{Bd}}n}}}}{A@h{{Hh{JlJl}}}}{{{f{C@`}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{C@`}}{f{{l{Bd}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@`}}{f{Bf}}{f{En}}}{{A`{Abn}}}}{{{f{ACd}}}d}{{{f{CBb}}}{{Ch{{A`{AAnn}}}}}}{{BFhGf}{{A`{AAnn}}}}{{{f{CBb}}}{{A`{AAnn}}}}{{{f{ACd}}}{{f{Oj}}}}{{{f{BKh}}}{{E`{Oj}}}}{{BKfHd}BBj}{{BKf{f{Bf}}}BBj}{{BKfe}BBj{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{BGd}}}{{f{{Bl{BAj}}}}}}`{{BFhc}BFh{{BAf{BBj}}}}{{BBjc}BBj{{BAf{BBj}}}}`10{{BBjAIb}BBj}{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dn}{{{f{BKh}}{f{{l{An}}}}}{{A`{Abn}}}}{{BFhBBj}BFh}5{{{f{C@`}}{f{Bf}}d}{{A`{{l{Fd}}n}}}}{{{f{C@`}}{f{{l{Bd}}}}dd}{{A`{{l{Fd}}n}}}}{{{f{C@`}}{f{Bf}}}{{A`{{l{Fd}}n}}}}{CO`{{A`{AAnn}}}}{{{f{DfCOb}}{f{DfAAn}}}{{A`{bn}}}}{ACf{{l{c}}}Dn}{{AOh{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}{BM`BFh}{{{BKn{c}}}{{A`{AAnn}}}BLb}{CKj{{A`{BFhn}}}}{CBn{{A`{BFhn}}}}{CCb{{A`{BFhn}}}}{{{f{Df{C@d{c}}}}{f{DfAAn}}}{{A`{bn}}}C@h}{{{COd{c}}}{{A`{AAnn}}}BLb}{{{BNf{c}}}{{A`{AAnn}}}BNh}{{{f{Df{COf{c}}}}{f{DfAAn}}}{{A`{bn}}}C@h}{{{f{Df{C@j{c}}}}{f{DfAAn}}}{{A`{bn}}}C@h}{{{f{Df{COh{c}}}}{f{DfAAn}}}{{A`{bn}}}C@h}{{{COj{c}}}{{A`{AAnn}}}BLb}{{{CLd{c}}}{{A`{AAnn}}}BLb}{{{C@n{c}}}{{A`{AAnn}}}BLb}{{{CAb{c}}{f{DfAAn}}}{{A`{Kfn}}}C@h}{{{f{DfACd}}}{{l{Ah}}}}=<;{{{COd{c}}{Ch{{N`{BL`}}}}d}{{A`{AAnn}}}BLb}{{{f{CA`}}Gf}d}{{}BBj}{BFhBFh}{BNbBBj}{BBjBBj}{{{f{BKh}}}Mj}`1```{{}{{BMh{{N`{BMf}}}}}}{{{f{CBh}}}{{A`{Abn}}}}3{{BBjBBj}BBj}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{N`{AFj}}}}}{{A`{bBDd}}}}{{{f{BNj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CB`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CCj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AB`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@h}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BMb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{COl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BKd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CEn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CF`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CG`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BBj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{{CHh{c}}}}{f{DfHl}}}{{A`{bHn}}}Jf}{{{f{CHj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{{BMh{c}}}}{f{DfHl}}}{{A`{bHn}}}{}}{{{f{CHl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CMj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CI`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CIb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CId}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CIf}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CIh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{BMl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CIj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJ`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLl}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}A@fBLn}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{AGhA@f}BLn}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{BDhA@f}BLn}{{{f{CJn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CK`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Mj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BAj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BIj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Bf}}BHf}Dd}```{{BBjce}BBj{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}{{If{{Bl{BBj}}}}}}{{BM`d}BM`}``{{{f{Bf}}c}{{A`{BBjn}}}{{If{{Bl{BBj}}}}}}{{BBj{Ch{Jl}}}BBj}{cc{}}0000000{BLjBFh}{CGnBFh}2222222222222222222222222222222222{JlAB`}3333333{{{f{Bf}}}CDh}44444444{CElBKd}555555555555555555555555555{NnBBj}{HdBBj}{JlBBj}8{BOhBBj}{{{f{Bf}}}BBj}{OfBBj}{KdBBj}{AjBBj}{ObBBj}{NdBBj}{KfBBj}{BjBBj}{dBBj}{cc{}}00{CFjCAj}{COn{{BMh{{N`{BNj}}}}}}{CHl{{BMh{{N`{BNj}}}}}}{D@`{{BMh{{N`{BNj}}}}}}{CIh{{BMh{{N`{BNj}}}}}}{CI`{{BMh{{N`{BNj}}}}}}{BMl{{BMh{{N`{BNj}}}}}}7{D@b{{BMh{{N`{BNj}}}}}}{D@d{{BMh{{N`{BNj}}}}}}{CHn{{BMh{{N`{BNj}}}}}}{CIf{{BMh{{N`{BNj}}}}}};{D@fCMj}<<<<<<<{CHnBMl}{CHlBMl}{CIfBMl}{D@dBMl}{cc{}}00000{CJhCJd}11111{BBjBLf}{ElBLf}{DdBLf}{{{f{Bf}}}BLf}555{{{f{ANf}}}{{N`{ANf}}}}{c{{N`{c}}}{}}{{{Cn{ce}}}{{N`{ce}}}A@fBLn}{D@hc{}}9{El{{N`{Bf}}}}{D@j{{N`{ANd}}}}{{{f{ANd}}}{{N`{ANd}}}}{Gn{{N`{Bf}}}}{CNn{{N`{ANf}}}}{{{f{Bf}}}{{N`{Bf}}}}{D@l{{N`{CMh}}}}{{{f{{Bl{c}}}}}{{N`{{Bl{c}}}}}Jf}{{{AAb{c}}}{{N`{{Bl{c}}}}}{}}{{{E`{c}}}{{N`{c}}}{D@nA@f}}{{{N`{Bf}}}{{N`{{Bl{Bj}}}}}}{{{f{CMh}}}{{N`{CMh}}}}{{{Gl{ce}}}{{N`{{Bl{c}}e}}}{}{BLnJf}}{cc{}}{JjCJn}111111{DA`BGd}{KdMj}{OfMj}{BjMj}{AjMj}{HdMj}{NdMj}{NnMj}{ObMj}{KfMj};{JlMj}<<<<<<{{{f{{BDj{BAj}}}}}DAb}{Jl{{Ch{BLl}}}}{JlBLl}00{{c{Ch{Ih}}}DAd{}}{{{DAf{Hd}}{DAf{Bj}}{Ch{Ih}}}DAh}{{{DAf{Hd}}{DAf{Bj}}{Ch{Ih}}}DAj}{c{{AMd{{l{An}}}}}{{Ib{}{{Cj{d}}}}}}{c{{AMd{{l{e}}}}}{{Ib{}{{Cj{}}}}}Al}{cBLl{{Ib{}{{Cj{BLl}}}}}}{e{{N`{{Bl{c}}}}}{}{{Ib{}{{Cj{c}}}}}}{{gGf}{{DAl{Hd}}}If{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}0{e{{DAl{Hd}}}{{Ib{}{{Cj{{Ch{d}}}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGd}{{DAl{Hd}}}BIn{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}673{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{{f{Bf}}}{{Ch{BLl}}}}{c{{AMd{{l{e}}}}}{{J`{}{{Cj{}}}}}Al}{e{{N`{{Bl{c}}}}}Il{{J`{}{{Cj{c}}}}}}`{c{{A`{{CLd{AFj}}n}}}{{BAf{CNn}}}}{{}{{N`{c}}}A@f}{c{{N`{ec}}}BLnA@f}{{Dd{f{{Bl{c}}}}}ADj{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADj{}}{{{f{Bf}}}{{A`{DAn}}}}{c{{AMd{{l{e}}}}}{{Jh{}{{Cj{}}}}}Al}{c{{AMd{{l{An}}}}}{{Jh{}{{Cj{d}}}}}}{En{{BMh{{N`{BMf}}}}}}{{Ddc}DB`{}}{{{Gl{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{Gl{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{Hb{}{{Cj{e}}}}JhIlIn}}`{{DdcGf}AIl{}}{{GfcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{}CIb}{{BFhBFhcc}BFh{{BAf{BBj}}}}{{{f{DBb}}{f{AAn}}ei}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAf{Dd}}}{{Ib{}{{Cj{g}}}}}}{{DdGf}AIn}{{GfAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{GfAGd}BGd}``{{BBjc{BMh{{N`{BMf}}}}DBd}BBj{{Eb{Fh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}}`{{BBjc}BBj{{BAf{BBj}}}}{{BBjGfGf}BBj}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBfA@f}BLn}{{{f{BKh}}Gf}{{A`{Jjn}}}}{{BN`BBjd}BBj}{{BNbBBjd}BBj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gf}{{Ch{c}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}6{{{f{AJ`}}Gf}{{A`{Jjn}}}}{{{f{AOj}}Gf}{{A`{Jjn}}}}{{{f{AJ`}}Gf}Jj}{{{f{AOj}}Gf}Jj}{CBfBBj}{{{f{BFh}}}BLl}{{{f{CJn}}}En}{{}En}{{{f{CD`}}HdCCj{Ch{{f{AMh}}}}}{{A`{CChn}}}}00{{{f{CMd}}{f{{BDj{En}}}}DBh{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BMf}}{f{{BDj{En}}}}DBh{f{{Bl{Oj}}}}}{{A`{Ojn}}}}{{{f{DAb}}{f{Bf}}}{{Ch{Oj}}}}{{{f{AGd}}}{{f{{Bl{BAj}}}}}}{{{f{BNd}}}Gf}{{{f{{Bl{Bj}}}}}{{Ch{Gf}}}}{{{f{Df{C@n{c}}}}}{{A`{{f{{N`{CJf}}}}n}}}BLb}{{{f{BKh}}}{{Ch{{Nb{Fn}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@fBLn}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@fBLn}{{{f{BKh}}Gf}{{Ch{{f{K`}}}}}}{{{f{BKh}}GfGf}{{Ch{{f{K`}}}}}}{{{f{CD`}}CChCCjLd{Ch{{f{AMh}}}}CCn}{{A`{DBjn}}}}{{{f{CDb}}}{{N`{CDd}}}}{{{f{Dfc}}}{{A`{DBln}}}{BNhBLbA@f}}{{{f{COl}}{f{{BDj{En}}}}}{{A`{{N`{{BDj{En}}}}n}}}}{{{f{BBd}}Gf}Jj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gf}{{Ch{c}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{BKh}}Gf}Jj}{{{f{CKj}}}d}{{{f{CBn}}}d}`{{BFhe}BLj{{BAf{BBj}}Jf}{{If{{Bl{c}}}}}}{{{f{DBn}}{Gl{Fh}}{f{BEh}}}{{A`{{Hh{Fh{Gl{Fh}}Cb}}n}}}}{{BFhBBjcBEh}BLj{{If{{Bl{BBj}}}}}}2{{BGhBGh{f{{Bl{Hd}}}}CCjLd{Ch{AMh}}}{{A`{{Gl{{AAb{Jl}}}}n}}}}{{CD`{f{{Bl{Hd}}}}CCjLd{f{{Ch{Dd}}}}ddCCn}{{Hh{{Gl{{AAb{Jl}}}}{Gl{Hd}}{Gl{Hd}}}}}}{{{f{BIb}}dd}{{A`{Cbn}}}}{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}{{BBjc}BBj{{BAf{BBj}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBfA@f}BLn}21`{{{f{BKh}}}d}{{{f{BEh}}{f{Dfc}}}bADl}{{{f{BFl}}{f{Dfc}}}bADl}{{{f{BGh}}{f{Dfc}}}bADl}{{{f{CCj}}{f{Dfc}}}bADl}{{{f{CCl}}{f{Dfc}}}bADl}{{{f{CCn}}{f{Dfc}}}bADl}{{{f{CDb}}{f{Dfc}}}bADl}{{{f{CDd}}{f{Dfc}}}bADl}{{{f{CDf}}{f{Dfc}}}bADl}{{{f{CDh}}{f{Dfc}}}bADl}{{{f{CDj}}{f{Dfc}}}bADl}{{{f{CDl}}{f{Dfc}}}bADl}{{{f{CDn}}{f{Dfc}}}bADl}{{{f{CE`}}{f{Dfc}}}bADl}{{{f{CEb}}{f{Dfc}}}bADl}{{{f{CEd}}{f{Dfc}}}bADl}{{{f{CEf}}{f{Dfc}}}bADl}{{{f{BKd}}{f{Dfc}}}bADl}{{{f{CEh}}{f{Dfc}}}bADl}{{{f{CEj}}{f{Dfc}}}bADl}{{{f{CEl}}{f{Dfc}}}bADl}{{{f{CEn}}{f{Dfc}}}bADl}{{{f{CF`}}{f{Dfc}}}bADl}{{{f{CFb}}{f{Dfc}}}bADl}{{{f{CFd}}{f{Dfc}}}bADl}{{{f{CFf}}{f{Dfc}}}bADl}{{{f{CFh}}{f{Dfc}}}bADl}{{{f{CFj}}{f{Dfc}}}bADl}{{{f{CFl}}{f{Dfc}}}bADl}{{{f{CFn}}{f{Dfc}}}bADl}{{{f{CG`}}{f{Dfc}}}bADl}{{{f{CGb}}{f{Dfc}}}bADl}{{{f{CGd}}{f{Dfc}}}bADl}{{{f{CGf}}{f{Dfc}}}bADl}{{{f{CGh}}{f{Dfc}}}bADl}{{{f{CGj}}{f{Dfc}}}bADl}{{{f{CGl}}{f{Dfc}}}bADl}{{{f{BOh}}{f{Dfc}}}bADl}{{{f{BBj}}{f{Dfc}}}bADl}{{{f{CHj}}{f{Dfc}}}bADl}{{{f{CAj}}{f{Dfc}}}bADl}{{{f{CHl}}{f{Dfc}}}bADl}{{{f{CHn}}{f{Dfc}}}bADl}{{{f{CI`}}{f{Dfc}}}bADl}{{{f{CIb}}{f{Dfc}}}bADl}{{{f{CId}}{f{Dfc}}}bADl}{{{f{CIf}}{f{Dfc}}}bADl}{{{f{CIh}}{f{Dfc}}}bADl}{{{f{BMl}}{f{Dfc}}}bADl}{{{f{CIn}}{f{Dfc}}}bADl}{{{f{CJ`}}{f{Dfc}}}bADl}{{{f{CJb}}{f{Dfc}}}bADl}{{{f{CJd}}{f{Dfc}}}bADl}{{{f{CJh}}{f{Dfc}}}bADl}{{{f{CJj}}{f{Dfc}}}bADl}{{{f{CJl}}{f{Dfc}}}bADl}{{{f{BLf}}{f{Dfc}}}bADl}{{{f{{N`{ce}}}}{f{Dfg}}}b{DC`A@f}BLnADl}{{{f{CJn}}{f{Dfc}}}bADl}{{{f{CK`}}{f{Dfc}}}bADl}{{{f{CKb}}{f{Dfc}}}bADl}{{{f{BGb}}{f{Dfc}}}bADl}{{{f{BAj}}{f{Dfc}}}bADl}{{{f{A@`}}{f{Dfc}}}bADl}{{{f{CKh}}{f{Dfc}}}bADl}{{{f{DCb}}{f{Ab}}CEnd}{{A`{{Hh{{Hh{{Gl{Jl}}{Gl{Jl}}}}d}}n}}}}{{{f{DCb}}{f{Ab}}CEnd}{{A`{{Hh{{ALn{Jl}}{ALn{Jl}}}}n}}}}{{{f{DCb}}{f{Ab}}dd}{{A`{{Gl{Jl}}n}}}}{{BLj{Ch{Gf}}}BFh}{{BNbBBj}BBj}{{BBj{Ch{Gf}}}BBj}{{{f{C@`}}}{{A`{{l{Bd}}n}}}}{{{f{C@`}}}{{l{Bd}}}}``{{{f{{Bl{{f{{l{Bd}}}}}}}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{DCd}}}{{l{O`}}}}{{{f{CLn}}}{{l{O`}}}}{{{f{CBj}}}{{A`{{l{O`}}n}}}}`{{{f{CM`}}}{{l{Lb}}}}`{{BM`CEl}BM`}`{{{f{AB`}}}Jl}`{{{f{{Bl{Fh}}}}Ld}{{A`{Fhn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bd}}}}CKh{Gh{Hd}{{Ad{AMf}}}}{Gh{AMf}{{Ad{Hd}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{Gh{Hd}{{Ad{AMf}}}}{Gh{AMf}{{Ad{Hd}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{BBjBBj}{{{f{AMf}}}d}{{{C@d{c}}d}{{C@d{c}}}C@h}````0`{{}b}{cb{JfBLn}}``{cBBj{{If{{Bl{Hd}}}}}}``{{{f{{Bl{Jl}}}}}{{`{{D`{}{{Cj{Gf}}}}}}}}{{{f{DBl}}Bj{Ch{Gf}}d{Ch{{f{{BDj{En}}}}}}GfGf{Ch{{f{CDh}}}}{Ch{Bj}}Bj{Ch{{f{CDj}}}}dd{f{Df{Ch{Gf}}}}d}{{A`{{Hh{{BDj{En}}GfGf}}n}}}}{{{COj{c}}{Ch{{DCf{Gf}}}}}{{COj{c}}}BLb}{{{CLd{c}}{Ch{{DCf{Gf}}}}}{{CLd{c}}}BLb}``{{}Gf}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACd}}}{{Cn{Cl}}}}{{BFhBFhcc}BFh{{BAf{BBj}}}}{{{f{DBb}}{f{AAn}}ei}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAf{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DfA@h}}}{{f{DfKf}}}}`{{{f{DfBLl}}BLl}b}{{BBjBBjHdEn}BBj}{{BBjBBjBBj}BBj}`{{{f{Ab}}CGf}Ab}{{BBjCGf}BBj}`{{{f{Fh}}{f{Fh}}d}{{A`{Fhn}}}}{{BBjBBj}BBj}{{BLlBLl}BLl}{{{f{BLl}}BLl}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDlFh}{{}Fh}{{MjDd}Fh}{BGd{{Hh{{Gl{BAj}}Gf{Gl{{Cn{Cl}}}}{Ch{Ih}}}}}}{{{AMd{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BLn}66{{{f{BBj}}}}{BLl}{{{f{BGd}}}}{DChBNb}{BNbBNb}{{{N`{ce}}}{}A@fBLn}{{{N`{ce}}}{{Hh{e}}}A@fBLn}{{CDbc}{{BKn{c}}}BLb}{{BBfEn}{{A`{Mjn}}}}{BFjAb}{{{N`{BKh}}}Ab}{{MjDd}Ab}{BG`{{Gl{c}}}{}}{{}{{Gl{Dd}}}}{{{f{BLl}}}d}{{{f{CAj}}}d}{{{f{CEl}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CGh}{{A`{{l{An}}n}}}}{{BBjccCGh}BBj{{BAf{BBj}}}}{cd{{If{ANf}}}}4{{{f{BGh}}{Ch{{f{Bf}}}}}d}4{{{f{CIb}}}d}7{{{f{BKh}}}d}{{{f{CA`}}}d}{BBjBBj}{{{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{AJd}}}{{A`{{l{An}}n}}}}25{{{f{BGh}}}d};{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{BBjc}BBj{{BAf{BBj}}}}54{{{f{AJf}}}{{A`{{l{An}}n}}}}6{{{f{CLl}}}{{l{An}}}}{{{f{CLn}}}{{l{An}}}}{{{f{CBj}}}{{A`{{l{An}}n}}}}9{{{f{Mj}}}d}::{{{f{BKh}}}{{l{An}}}};;0{{{f{A@h}}}d}<2{{{f{AB`}}}d}`{{{f{Ab}}}d}{{{f{{N`{AFj}}}}}d}{{{f{CJn}}}d}{{}d}{{{f{CNd}}Fb}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CEn}}{f{CEl}}}{{A`{bn}}}}6{{{f{BGh}}}d}{{{f{CLl}}}{{l{Kl}}}}{{{f{CLn}}}{{l{Kl}}}}{{{f{CBj}}}{{A`{{l{Kl}}n}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{BLl}}}{{AFf{BLl}}}}{{{f{BGd}}}{{AGl{{Gl{{Cn{CNh}}}}DCjAGj}}}}{{{f{DAb}}}{{`{Jd}}}}{{{f{BLl}}}{{AFh{BLl}}}}{{{f{{DCn{}{{DCl{c}}}}}}}{{`{Jd}}}{AGhJfCMfCNf}}{{BN`BBjd}BBj}{{BFhBFhccBKd}BFh{{If{{Bl{BBj}}}}}}{{BNbBBjd}BBj}{{{f{DBb}}{f{AAn}}eiBKd}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAf{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DD`}}{f{AAn}}{f{Bf}}{f{Bf}}eeCFf{Ch{Jj}}}{{A`{AAnn}}}{{If{Bf}}}{{Ib{}{{Cj{c}}}}}}{BFhBM`}{{{f{DDb}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{DDb}}{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}{{BM`d}BM`}`{{BM`{Gl{BBj}}}BFh}{BKfBBj}{DDdBBj}{{{f{CJf}}}{{f{{Ch{{Gl{DDf}}}}}}}}``{{}BBj}{BFhBFh}{BNbBBj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{BBjBBj}{{{f{BKh}}}Mj}{DDhBFh}5{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBfA@f}BLn}{{{f{Ab}}}{{A`{Abn}}}}0`{{BFhBFhcc}BFh{{BAf{BBj}}}}{{{f{DBb}}{f{AAn}}ei}{{A`{AAnn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAf{Dd}}}{{Ib{}{{Cj{g}}}}}}{{BM`c}BM`{{If{{Bl{BBj}}}}}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}>{{{f{BKh}}}Gf}=;{{{f{BGd}}}Gf}{{BFhJl}BFh}{{{f{BKh}}Gf}Ab}`{BBjBNb}{cBBjDDj}{DDjBBj}{BGhBBj}{DDlBBj}{CJnBBj}{MjBBj}{{BBjc}BBj{{BAf{BBj}}}}0``{{CCbd}CCb}{{{CLd{c}}d}{{CLd{c}}}BLb}```{BBjBBj}{{{f{DDb}}}{{l{Fd}}}}0{{{f{DDb}}{f{{Bl{Fh}}}}}{{A`{{l{Ah}}n}}}}{{{f{DDb}}HdCMn}{{A`{{l{Ah}}n}}}}{{{f{DDb}}Hdd}{{A`{Abn}}}}{{{f{DDb}}{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}4{{{f{DDb}}}{{A`{Abn}}}}{{{f{DDb}}}Ab}01{{{f{DDb}}}{{A`{{l{Fd}}n}}}}{{{f{DDb}}}{{l{Ah}}}}{{{f{DDb}}{f{Fh}}}{{A`{{l{Ah}}n}}}}{{{f{DDb}}HdGf}{{l{Ah}}}}{{{f{DDb}}Fb}{{A`{{l{Ah}}n}}}}{{{f{DDb}}Bj}Ab}7{{{f{DDb}}}{{A`{{l{Ah}}n}}}}01{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}{{BBjc}BBj{{BAf{BBj}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBfA@f}BLn}21``````{{{f{AMl}}{f{AMl}}}{{A`{{Hh{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hh{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DDnA@f}{BLnJf}}{{BFhcBLl{Ch{{N`{COl}}}}{Ch{{f{Bf}}}}}BFh{{Eb{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{DDdc}BBj{{Eb{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}IlIn}}{{BBjc{BMh{{N`{BMf}}}}}BBj{{Eb{Fh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}}{{BBjBBjc{BMh{{N`{BMf}}}}}BBj{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}}{{BBj{f{Dfc}}{f{Df}}}{{A`{BBjn}}}{{Af{BBj{f{Df}}}{{Ad{{A`{BBjn}}}}}}}}{{{f{BNd}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BNd}}c}{{A`{Ojn}}}{{ABb{{f{En}}}{{Ad{En}}}}}}{c{{BMh{{N`{BMf}}}}}{{Eb{{f{En}}}{{Ad{{A`{Enn}}}}}}IlIn}}{c{{BMh{{N`{BMf}}}}}{{Eb{{f{{Bl{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}IlIn}}{{BBjc}BBj{{Af{BBj}{{Ad{BBj}}}}}}{c{{BMh{{N`{BMf}}}}}{{Eb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}IlIn}}{{DDd{N`{Eb}}}BBj}{c{{BMh{{N`{BMf}}}}}{{Eb{{f{{Bl{Oj}}}}}{{Ad{{A`{Ojn}}}}}}IlIn}}:{{ce{BMh{{N`{BMf}}}}}BBj{{Eb{{f{Df{Bl{Fh}}}}}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}{{If{{Bl{BBj}}}}}}{{BBjc{f{{Bl{BBj}}}}{BMh{{N`{BMf}}}}}BBj{{Eb{{f{Df{Bl{Fh}}}}}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}}{{BBjBMl{f{{Bl{BBj}}}}d{Ch{DE`}}}BBj}2{{{f{BNd}}}{{A`{Ojn}}}}{{CDbc}CDb{{Eb{CDd}{{Ad{CDd}}}}}}1111{{{CHh{{BMh{{N`{BNj}}}}}}}{{A`{{BMh{{N`{BNj}}}}n}}}}{CJnCJn}{{{Ch{{f{{Bl{Gf}}}}}}{f{{BDj{BAj}}}}{Ch{{f{{Bl{Ab}}}}}}{Ch{{f{DEb}}}}}AAn}{{{Ch{{f{{Bl{Dd}}}}}}{f{{BDj{En}}}}{Ch{{f{{Bl{Ab}}}}}}d}{{Ch{{Gl{Gf}}}}}}{{{f{DAb}}}{{A`{{BDj{En}}n}}}}{{{f{Bf}}}BBj}{BN`BBj}{BFhBFh}{BNbBBj}{{{f{AHd}}}{{Ch{c}}}{}}{BBjBBj}{{{f{DEd}}}Mj}{{{f{BKh}}}{{A`{Mjn}}}}```754{{{f{AHd}}}{{Ch{Aj}}}}3{{{f{BKh}}}{{Ch{Aj}}}}9876{{{f{AJh}}}{{Ch{c}}}{}}51{{{f{DEf}}}Mj}4{{{COd{c}}{Ch{CNn}}}{{COd{c}}}BLb}{{{f{En}}{f{En}}}{{A`{Enn}}}}````{{{f{CM`}}}{{l{Lb}}}}`{{{f{CBj}}}{{A`{{l{Kl}}n}}}}1`?>=<;:{{{f{AHd}}}{{Ch{{Hh{cc}}}}}{}}```:9``{{{f{DCd}}}{{l{O`}}}}{{{f{CLn}}}{{l{O`}}}}{{{f{CBj}}}{{A`{{l{O`}}n}}}}`5```>{{{f{CLl}}}{{l{O`}}}}21`{{{f{BGh}}}Hd}{{{f{BGh}}}d}{{{BLd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BGhHd}BGh}{{BBjBBj}}{{{f{BLh}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BKh}}}Gf}{{{f{CKj}}}{{Ch{Gf}}}}{{{f{CBn}}}{{Ch{Gf}}}}{{{f{CCb}}}{{Ch{Gf}}}}`````{{{C@d{c}}Gf}{{C@d{c}}}C@h}`{BN`BBj}{BNbBBj}{{{f{AHn}}}{{A`{Gfn}}}}{BBjBBj}{{{f{BKh}}}{{A`{Gfn}}}}{{{f{BKh}}}{{f{Dd}}}}{BBjDDd}````33`{{{f{DCd}}}{{l{Kl}}}}{{{f{CLn}}}{{l{Kl}}}}{{{f{CBj}}}{{A`{{l{Kl}}n}}}}{{{f{CM`}}}{{l{Lb}}}}{{{f{BGh}}}Hd}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CNfA@f}BLn}{{{f{CEn}}}d}{BGh}{BBj}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BGh}}}d}{{DEhGf}{{Ch{Gf}}}}{{BBjc}BBj{{BAf{BBj}}}}0{{{f{BNd}}}{{A`{Ojn}}}}{{}c{}}{cCO`BNh}{cCObC@h}2{{Ddc}DEj{}}{c{{AMd{c}}}{}}{BFhBM`}{c{{BKn{c}}}BLb}{cCBn{{If{ANf}}}}{cCCb{{If{ANf}}}}{c{{C@d{c}}}C@h}{{{f{{Bl{Oj}}}}}BNd}{c{{COd{c}}}BLb}{c{{BNf{c}}}BNh}{c{{COf{c}}}C@h}{{}CMb}{c{{C@j{c}}}C@h}{HdBGh}{c{{COh{c}}}C@h}{c{{COj{c}}}BLb}{{BGhBGhBGh}CD`}{c{{CLd{c}}}BLb}{{DEl{N`{CJf}}{N`{{BDj{BAj}}}}{Hh{GfGf}}{Ch{{Gl{Gf}}}}{Ch{{N`{BL`}}}}{Ch{DEb}}Gfd{Ch{{Gl{Ab}}}}{Ch{{Hh{Dd{N`{Bf}}}}}}CFb}{{A`{CA`n}}}}{c{{C@n{c}}}BLb}{c{{CAb{c}}}{C@hC@h}}{CElBKd}{c{{BMh{c}}}{}}{{BBjBBjBBj}CIj}{{}CIl}{BBjBLf}{{Dd{Gl{Oj}}{BMh{{N`{BMf}}}}c}CAnBNj}{c{{N`{c}}}{}}{{AGdGf{Gl{{Cn{Cl}}}}{Ch{Ih}}}BGd}{{EnJj}Mj}{{DdAGdd}BAj}{e{{N`{c}}}{}{{ABb{{f{{CN`{c}}}}}{{Ad{c}}}}}}{{ge}{{N`{ce}}}{}BLn{{ABb{{f{{CN`{ce}}}}}{{Ad{c}}}}}}{AGdBGd}{{{f{AJj}}GfGf}{{l{c}}}Dn}{{{f{BKh}}GfGf}Ab}{{{f{Bf}}}CDh}{{ce}{{N`{ce}}}{}BLn}{{HdDd}{{A`{Abn}}}}{DdCDh}{{AGdGf}BGd}{{{N`{{Bl{CNn}}}}}CBn}{{{N`{{Bl{CNn}}}}}CCb}{BjCDh}{{}{{N`{{BOn{c}}}}}{}}{c{{N`{{BOn{e}}c}}}BLn{}}{Gf{{N`{{Bl{{BOn{c}}}}}}}{}}{{Gfc}{{N`{{Bl{{BOn{e}}}}c}}}BLn{}}{DEnCBn}{DEnCCb}5432{{{f{DfDF`}}}Ch}{{{f{DfDBj}}}Ch}{{{f{BMb}}DFb}{{A`{{Ch{AAn}}n}}}}{{{f{DfCAf}}Gf}{{A`{{Ch{{Gl{AAn}}}}n}}}}{{{f{DfC@b}}Gf}{{A`{{Ch{{Gl{AAn}}}}n}}}}{{{f{DfCA`}}Gf}{{A`{{Ch{{Gl{AAn}}}}n}}}}{{{f{BBj}}{f{Df{BHd{{f{BBj}}}}}}}b}{{BBj{f{Df{BHd{BBj}}}}}b}{BBjBBj}0{BLlBLl}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{HdBBj}`{{}AB`}{{}A@h}`{{{f{BKh}}}Gf}{BFhBFh}7`````{{{f{Df{C@n{c}}}}}{{A`{Gfn}}}BLb}````{{{f{AIf}}}{{A`{{Hf{Hd}}n}}}}{{BM`c}BM`{{If{{Bl{BBj}}}}}}````{{BFh{f{Df{BJn{BJl}}}}{f{Df{BJn{BK`}}}}}{{A`{BJjn}}}}`{{BBjc}BBj{{BAf{BBj}}}}{{{f{BKh}}}{{A`{Mjn}}}}{{{f{CLl}}}{{l{Nl}}}}{{{f{CLn}}}{{l{Nl}}}}{{{f{CBj}}}{{A`{{l{Nl}}n}}}}{{{f{CBj}}}{{A`{{l{Kl}}n}}}}{{CHbc}BBj{{BAf{BBj}}}}{{CHfc}BBj{{BAf{BBj}}}}`{{BBje}BBj{{BAf{BBj}}Jf}{{If{{Bl{c}}}}}}{{BBje{Ch{{Hh{eFb}}}}CJh}BBj{{BAf{BBj}}Jf}{{If{{Bl{c}}}}}}{{{f{Df{BDj{En}}}}{f{{BDj{En}}}}}{{A`{bn}}}}```{{{f{Bf}}}BGh}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}Ld}{{L`{LfLb}}}}``{{{f{BGh}}{f{BGh}}}{{Ch{B@l}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{B@l}}}{DBfA@f}BLn}```{{}BBj}{c{{DFd{{N`{c}}}}}{}}{{ce}{{DFd{{N`{ce}}}}}{}BLn}````{{BBjc}BBj{{BAf{BBj}}}}`{{DDd{f{Bf}}}BBj}0{{{f{AAn}}{f{AAn}}d}{{A`{{Hh{{AAj{{Gl{Jl}}{Gl{A@h}}}}{AAj{{Gl{AB`}}{Gl{A@h}}}}}}n}}}}`{{{f{DEd}}}Mj}{BBjBBj}{BFh{{A`{{Hh{AAnAAn}}n}}}}`{{{f{BGd}}}BGd}{{{f{{N`{c}}}}{f{DfDFf}}}b{ALjA@f}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@fBLn}{{{f{Bf}}BBjA@`}BBj}{{BFhBBjA@`}BFh}{{{f{AJh}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BBjBBjA@`}BBj}{{{f{DEf}}AjA@`}{{A`{Mjn}}}}{{{f{BKh}}AjA@`}{{A`{Mjn}}}}{{{f{CLl}}}{{l{O`}}}}{{{f{CLn}}}{{l{O`}}}}{{{f{CBj}}}{{A`{{l{O`}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDd}}}CNl{}}````{{{f{DFh}}CGl{Ch{Kf}}}Ab}{{BBjCGl{Ch{Kf}}}BBj}{{{f{Df{N`{AFj}}}}{f{Df{Bl{Bj}}}}}{{A`{GfBDd}}}}{{{f{Df{N`{AFj}}}}DFj}{{A`{bBDd}}}}{{{C@n{c}}CFb}{{C@n{c}}}BLb}{{{f{Df{N`{AFj}}}}{f{Df{Gl{Bj}}}}}{{A`{GfBDd}}}}{{{f{Df{N`{AFj}}}}{f{DfEl}}}{{A`{GfBDd}}}}{{{f{Df}}}{{A`{cBDd}}}DFl}{{{f{Df{N`{AFj}}}}{f{Df{Bl{DFn}}}}}{{A`{GfBDd}}}}{{{f{CKj}}}d}{{{f{BKh}}}Ab}{{{f{CBn}}}d}{{{f{CCb}}}d}````{{{f{BKh}}}{{Ch{Ih}}}}{{ce}BBj{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}IlIn}{{If{{Bl{BBj}}}}}}{{{f{AJl}}}Ab}0{{{BLd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{{f{BLh}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLl}}BLl}b}{{{f{{Bl{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}}{{{f{DfBKh}}Dd}b}{{BFheid}BFh{{If{Bf}}}{{Ib{}{{Cj{c}}}}}{{If{Bf}}}{{Ib{}{{Cj{g}}}}}}{{BKfe}BBj{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}}{{cBBj}BBj{{BAf{BBj}}}}{{{f{Ab}}{f{{l{Fd}}}}}{{A`{{l{Ah}}n}}}}{{BBjc}BBj{{BAf{BBj}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@`}}{f{Bf}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{BBjcc}BBj{{BAf{BBj}}}}1{{{f{BNd}}{Ch{En}}}{{A`{Ojn}}}}{{{f{C@`}}{f{Bf}}{f{Bf}}Gf}{{A`{{l{Bd}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{BBjcc{Ch{c}}{Ch{En}}}BBj{{BAf{BBj}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{f{{l{Bd}}}}CKh}{{A`{{L`{LfLb}}n}}}}{{BBj{f{{Bl{Hd}}}}}BBj}{{{f{ANf}}}CNn}`{{{f{AJn}}}AJn}{{{f{BKh}}}Ab}{BN`BBj}{BFhBFh}{BNbBBj}{BBjBBj}`{{BM`c}BM`{{If{{Bl{BBj}}}}}}{{{f{DBn}}{Gl{Fh}}{f{BFl}}}{{A`{{Hh{Fh{Gl{Fh}}Cb}}n}}}}{{BFhBBjcBFl}BLj{{If{{Bl{BBj}}}}}}{{BBjBFl}BBj}{{{f{AK`}}{f{Eb}}A@b}{{A`{Abn}}}}{{BBj{N`{Eb}}{BMh{{N`{BMf}}}}A@b}BBj}{{{f{BKh}}{f{Eb}}A@b}{{A`{Abn}}}}{{BBjGfc}BBj{{Af{{f{Df{l{Ej}}}}}{{Ad{{Ch{Aj}}}}}}IlInEd}}{{{f{DG`}}A@b}{{A`{Abn}}}}{{BBjA@b}BBj}{{{f{DG`}}{f{Ab}}CCf}{{A`{Abn}}}}{{BBjBBjCCf}BBj}32102032103{{BBjA@`AjA@b}BBj}2{{BBjBBjA@`AjCCf}BBj}543254325432{{{f{DGb}}{f{{l{Bd}}}}{Ch{{f{AMh}}}}}{{A`{DGbn}}}}{{{f{CBh}}Jl}{{A`{Abn}}}}{{BBjJl}BBj}{{{f{CD`}}Hd{Ch{{f{AMh}}}}}{{A`{Hdn}}}}0{{{f{CBh}}Nd}{{A`{Abn}}}}{{BBjNd}BBj}2```{{{f{CKj}}}{{Ch{{f{DEb}}}}}}{{{f{CBn}}}{{Ch{{f{DEb}}}}}}{{{f{CCb}}}{{Ch{{f{DEb}}}}}}``````{{{f{DDb}}{l{Ah}}}{{l{Ah}}}}{{}{{BMh{{N`{BMf}}}}}}{{BBjBBjdd{Ch{Kf}}}BBj}0{{{f{BMb}}DFb}{{A`{AAnn}}}}{{cCC`}{{A`{BFhn}}}{{If{ANf}}}}{{{N`{{Bl{CNn}}}}CC`}{{A`{BFhn}}}}{{DEnCC`}{{A`{BFhn}}}}{{cCCd}{{A`{BFhn}}}{{If{ANf}}}}{{{N`{{Bl{CNn}}}}CCd}{{A`{BFhn}}}}{{DEnCCd}{{A`{BFhn}}}}{{DGd{f{{Bl{Jl}}}}e}{{A`{Abn}}}Ed{{Ib{}{{Cj{{Ch{c}}}}}}}}{{{f{AKb}}c{Ch{e}}}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AKb}}ci}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{COd{c}}}}}{{A`{{N`{{BDj{BAj}}}}n}}}BLb}{{{f{Df{BNf{c}}}}}{{A`{{BDj{En}}n}}}BNh}{{{f{CA`}}}{{f{{N`{{BDj{BAj}}}}}}}}{{{f{Df{C@n{c}}}}}{{A`{{N`{{BDj{BAj}}}}n}}}BLb}{{{f{BMb}}{Ch{Gf}}}{{A`{{N`{{BDj{En}}}}n}}}}{{{f{CJf}}}{{f{DGf}}}}```````{{}BLl}`{{{f{DfBFh}}{f{Df{BJn{BJl}}}}{f{Df{BJn{BK`}}}}}{{A`{{N`{{BDj{En}}}}n}}}}`{{{f{DCd}}}{{l{O`}}}}{{{f{CLn}}}{{l{O`}}}}{{{f{CBj}}}{{A`{{l{O`}}n}}}}`{{{f{CM`}}}{{l{Lb}}}}`{{{f{Df{N`{AFj}}}}DGh}{{A`{KfBDd}}}}{{BFhc}BFh{{If{{Bl{BBj}}}}}}0{{BFhBFhcc}BFh{{BAf{BBj}}}}````{{{f{AKb}}{f{{l{An}}}}{Ch{c}}}{{A`{AKbn}}}{}}{{{f{DfBLl}}BLld}b}{{{f{BFh}}{BJn{BJl}}{BJn{BK`}}}b}{{{C@n{c}}d}{{C@n{c}}}BLb}{{{f{Df{C@n{c}}}}{N`{CJf}}}bBLb}{{{CAb{c}}d}{{CAb{c}}}C@h}{{{COd{c}}d}{{COd{c}}}BLb}{{{BNf{c}}d}{{BNf{c}}}BNh}{{{COj{c}}d}{{COj{c}}}BLb}5{{CO`d}CO`}{{BBjMb}BBj}{{{f{DfBGd}}{Ch{Ih}}}b}{{{f{AKd}}Hd}{{l{c}}}Dn}{{{f{BKh}}Hd}Ab}{{BN`BBj}BBj}{{BFhc}BFh{{BAf{BBj}}}}{{BNbBBj}BBj}{{BBjBBj}BBj}{{{f{AKf}}Hdc}{{l{e}}}{}Dn}{{BFhce}BFh{{BAf{BBj}}}{{BAf{BBj}}}}{{BBjce}BBj{{BAf{BBj}}}{{BAf{BBj}}}}{{{f{BKd}}}d}{BBjBBj}{{{f{DfACf}}}b}{{{f{DfBKh}}}b}{{BBj{Ch{Kf}}}BBj}{{BFhcCDl}{{A`{bn}}}{{If{ANf}}}}{{BFhcCEd}{{A`{bn}}}{{If{ANf}}}}{{BFhcCEh}{{A`{bn}}}{{If{ANf}}}}{{BFhcCFh}{{A`{bn}}}{{If{ANf}}}}{{{f{CLb}}}{{l{Fd}}}}````{{{f{BKh}}HdGf}Ab}{{BFhHdJl}BFh}{{BNbBBjBBj}BBj}={{{f{DfBGd}}GfGf}b}0`{{{f{AKh}}GfGf}AKh}{{fGfGf}c{}}1022{{BGdGfGf}BGd}0`{{{f{AHl}}d}{{l{c}}}Dn}{{BN`Fb}BBj}{{BFhcFj}BFh{{BG`{Dd}}}}{{BNbFb}BBj}{{BBjFb}BBj}{{BBjeFj}BBj{{BAf{BBj}}Jf}{{If{{Bl{c}}}}}}{{BFhcFj}BFh{{If{{Bl{BBj}}}}}}{{{f{AHl}}Fb}{{l{c}}}Dn}{{{f{BKh}}Fb}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{ALj}}}}}{ALjA@f}}{{{f{CKj}}}{{f{DEn}}}}{{{f{CBn}}}{{f{DEn}}}}{{{f{CCb}}}{{f{DEn}}}}{{{f{C@`}}{f{{l{Bd}}}}}{{l{Ah}}}}{{{f{BKh}}Hd}{{Hh{AbAb}}}}{{{f{BGd}}Gf}{{Hh{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{C@`}}{f{{l{Bd}}}}Gf}{{A`{{l{j}}n}}}}0{{{f{{l{Bd}}}}{f{{l{Bd}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{Eb{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}4{{{f{{l{Bd}}}}{f{{l{Bd}}}}Gfed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{Eb{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{BBjBBj}`{{{f{CLb}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{CLb}}{f{{l{Bh}}}}}{{l{An}}}}`{{BN`Bj}BBj}{{BFhBj}BFh}{{BNbBj}BBj}{{{f{AKj}}Bj}{{Ch{Aj}}}}{{BBjBj}BBj}{{{f{BKh}}Bj}{{Ch{Aj}}}}{{{f{DGj}}Bj}Mj}{{{f{BKh}}Bj}{{A`{Mjn}}}}{{JlJl}A@h}{BBjDGl}{{{f{C@`}}}{{l{Bd}}}}{{{f{C@`}}{f{Fh}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bd}}}}{f{Bf}}d}{{l{Bd}}}}{{{f{C@`}}}{{l{Fd}}}}03{{{f{C@`}}{f{Fh}}{f{Fh}}}{{A`{{l{Bd}}n}}}}3`{{{f{CBj}}{f{Bf}}}{{A`{Abn}}}}`{{BBjEn}BBj}`{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}606060{{{f{C@`}}{f{{l{Bd}}}}}{{l{Bd}}}}10{{{f{{N`{ce}}}}}GfA@fBLn}{BBjBKf}{{{BLd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{BLfBLf}}{{BLlBLl}BLl}{{{f{DfBLl}}BLl}b}{{{f{BLh}}{f{Ab}}}{{A`{Abn}}}}{{BM`c}BM`{{BAf{Dd}}}}{{DDd{f{Bf}}}BBj}{{{f{BKd}}}{{f{Dd}}}}`1{{{f{Bf}}}BBj}{BN`BBj}{BFhBFh}{BNbBBj}{{{f{AHd}}}{{Ch{c}}}{}}{BBjBBj}{{{f{DEd}}}Mj}{{{f{BKh}}}{{A`{Mjn}}}}{{}{{BMh{{N`{BMf}}}}}}{CAjCAj}?{{{f{Df}}g}{{A`{eBDd}}}{}{}{{ABb{{f{Dfc}}}{{Ad{e}}}}}}{{BFhJl}BFh}{{BLj{Ch{Gf}}}BFh}{{BNbBBj}BBj}{{BBj{Ch{Gf}}}BBj}{{{f{AKl}}{f{c}}}{{A`{AKln}}}A@f}{{{f{BKh}}{f{{l{Fd}}}}}{{A`{Abn}}}}{{{f{DGn}}{f{{Bl{A@h}}}}Mb}DGn}{{{f{DGn}}{f{{Bl{A@h}}}}}DGn}{{{f{BKh}}{f{{Bl{Jl}}}}}{{A`{Abn}}}}{{{f{BKh}}{f{{Bl{Jl}}}}}Ab}{{{f{AKn}}{f{c}}}AKnA@f}{{{f{BKh}}{f{{l{Fd}}}}}Ab}{{{f{DfBGd}}}{{Ch{Ih}}}}{{BBjBBjBBj}BBj}{{CH`c}CHb{{BAf{BBj}}}}{{CHdc}CHf{{BAf{BBj}}}}`{{BBjBBjBGhCCj}BBj}```{{{f{CBj}}Ld}{{A`{{l{Lb}}n}}}}{BFh{{A`{DH`n}}}}{CGn{{A`{DH`n}}}}1{{{f{CJn}}}{{Ch{Jj}}}}{{BNbGf}BBj}{{{f{DAb}}B@b}{{BDj{BAj}}}}{{{f{BGd}}}{{Cn{Cl}}}}{{{f{AL`}}}{{Gl{{f{{Bl{Bj}}}}}}}}{{{f{BFh}}d}{{A`{Eln}}}}{{{f{DHb}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{BKl}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{BBj}}{f{{BDj{En}}}}DBh}{{A`{Ojn}}}}{{{f{C@`}}{f{{l{Fd}}}}d}{{A`{{l{Lb}}n}}}}{BN`BBj}{{{f{C@`}}}{{l{Bd}}}}{DDdBBj}{{{f{AB`}}}{{Ch{Jl}}}}{fc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBjBBj}{{{f{BNd}}}{{A`{Ojn}}}}{{{f{CBj}}{f{Bf}}}{{A`{Abn}}}}{fEl}000000000000{{{f{DfDAb}}{f{{BDj{En}}}}}{{A`{dn}}}}`887{{{f{CEd}}c}{{C@j{c}}}C@h}{{{f{CFh}}c}{{CAb{c}}}C@h}{{{f{DfBLl}}BLl}b}``{{BFhJlcFj}BFh{{If{{Bl{BBj}}}}}}{{{f{BGd}}{f{BGd}}}Ih}{{{f{BGd}}f}Ih}10{{{f{Ab}}}{{A`{Abn}}}}0{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{f{DHd}}{Ch{{f{AMh}}}}{f{{l{Bd}}}}}{{A`{DHdn}}}}{{{f{BGh}}Hd{Ch{{f{AMh}}}}ceg}{{A`{Hdn}}}{{Eb{Hd}{{Ad{Hd}}}}}{{Eb{Hd}{{Ad{AMf}}}}}{{Eb{AMf}{{Ad{Hd}}}}}}{{{f{BGh}}Hd{Ch{{f{AMh}}}}}{{A`{Hdn}}}}{{{f{CD`}}Hd{Ch{{f{AMh}}}}}{{A`{Hdn}}}}10`10{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BGdc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{e{{A`{BGdc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}2{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGde}{{A`{BGdc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{AGde}{{A`{BGdc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{ADnDd}{{A`{{l{c}}e}}}Dn{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AE`DdEn}{{A`{{l{c}}e}}}Dn{}}0{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{N`{{Bl{c}}e}}}{{A`{{N`{{AAb{c}}e}}}}}{}BLn}11111111111111{DHf{{A`{CJfBD`}}}}{{{f{DAb}}{f{Bf}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CDb{Ch{CNn}}}{{A`{{BKn{AFj}}n}}}}{{{f{BNd}}c}{{A`{Ojn}}}{{ABb{{f{En}}}{{Ad{{A`{Enn}}}}}}}}{{{f{BNd}}c}{{A`{Ojn}}}{{ABb{{f{{Bl{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}}}{{BBjc}{{A`{BBjn}}}{{Af{BBj}{{Ad{{A`{BBjn}}}}}}}}{{{f{BNd}}c}{{A`{Ojn}}}{{ABb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{{f{BNd}}}{{A`{Ojn}}}}{{DEhGf}{{A`{Gfn}}}}{Bj{{A`{CG`n}}}}{Jl{{A`{CGbn}}}}{Nd{{A`{CGdn}}}}{c{{A`{{N`{c}}DHh}}}{}}{{AGdGf{Gl{{Cn{Cl}}}}{Ch{Ih}}}{{A`{BGdn}}}}{{ce}{{A`{{N`{ce}}DHh}}}{}BLn}{{}{{A`{{N`{{BOn{c}}}}DHh}}}{}}{c{{A`{{N`{{BOn{e}}c}}DHh}}}BLn{}}10{{{f{Bf}}}{{A`{BGhn}}}}`0{c{{A`{{DFd{{N`{c}}}}DHh}}}{}}{{ce}{{A`{{DFd{{N`{ce}}}}DHh}}}{}BLn}{{{f{BNj}}{f{Df{Gl{Bj}}}}}{{A`{bn}}}}{{{f{CAl}}{f{Df{Gl{Bj}}}}}{{A`{bn}}}}{{{f{BMf}}{f{Df{Gl{Bj}}}}}{{A`{bn}}}}{{{f{DfAb}}Gf{f{{CBd{GfMbA@l}}}}}b}{f{{A`{GnBC`}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BLn}{fAAl}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bf}}}}`{{BLlBLl}BLl}{{{f{AHn}}}{{A`{AHnn}}}}{BN`BBj}{{BFh{Ch{{Gl{El}}}}BE`}BFh}{BNbBBj}{BBjBBj}{{{f{BKh}}}{{A`{Abn}}}}{{BFh{Ch{e}}BE`}BFh{{BAf{BLf}}Jf}{{If{{Bl{c}}}}}}5{{BFh{Ch{{Gl{Dd}}}}BE`}BFh}431{{BFhe}BFh{{BAf{BLf}}Jf}{{If{{Bl{c}}}}}}{{{N`{{AG`{c}}}}}{{A`{cb}}}Il}{{{N`{ce}}}cJfBLn}{{{f{DfMj}}Jj}b}{{{f{DfCDb}}{f{DHj}}}b}8{{{f{DHl}}c{f{Bf}}BGh}{{A`{AAnn}}}{{BG`{Dd}}}}0{{{C@n{c}}d}{{C@n{c}}}BLb}```{{BM`CEn}BM`}`{{{f{BGd}}}{{Ch{{f{Ih}}}}}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gf}cJf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{Mj}}}{{f{Jj}}}}{{{f{CNd}}ddDdd}{{A`{AAnn}}}}{{BBjdd{f{Bf}}d}BBj}``3{{{f{BGd}}}{{f{{Bl{{Cn{Cl}}}}}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{BGd}}}DCj}{{BN`Bj}BBj}{{BFhBj}BFh}{{BNbBj}BBj}{{{f{AKj}}Bj}{{Ch{Aj}}}}{{BBjBj}BBj}{{{f{BKh}}Bj}{{Ch{Aj}}}}{{{f{DGj}}Bj}Mj}{{{f{BKh}}Bj}{{A`{Mjn}}}}``{{{f{DHn}}A@l{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{DHn}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AG`{c}}}}}}g}{{A`{eb}}}Il{}{{ABb{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GfA@fBLn}{{{f{CLl}}}{{l{O`}}}}{{{f{CLn}}}{{l{O`}}}}{{{f{CBj}}}{{A`{{l{O`}}n}}}}10{{{f{CCn}}}{{Ch{Jl}}}}{{{f{BGh}}}Hd}`{{{f{BGh}}}d}`{cCH`{{BAf{BBj}}}}{{CHbc}CHd{{BAf{BBj}}}}{{CHfc}CHd{{BAf{BBj}}}}```{{BM`BFh}BM`}{{CIjBBj}CIj}{{{C@n{c}}{f{{N`{{BDj{BAj}}}}}}{Ch{{f{{BDj{BAj}}}}}}d}{{A`{{C@n{c}}n}}}BLb}{{CCb{Ch{{DCf{Gf}}}}}CCb}{{{C@d{c}}{DCf{Gf}}}{{C@d{c}}}C@h}{{{COj{c}}{DCf{Gf}}}{{COj{c}}}BLb}{{CBnd}CBn}{Gfc{}}0{{{CLd{c}}{Ch{{DCf{Gf}}}}}{{CLd{c}}}BLb}{{CDbGf}CDb}{{CBn{Ch{CKl}}}CBn}{{CCb{Ch{CKl}}}CCb}{{BFhd}BFh}{{BKdCEj}BKd}1{{BFhBBj}BFh}{{BFhc}BFh{{If{{Bl{BBj}}}}}}{{{COd{c}}{Ch{{Gl{El}}}}}{{COd{c}}}BLb}{{{BNf{c}}{Ch{{Gl{El}}}}}{{BNf{c}}}BNh}{{{C@n{c}}{Ch{{Gl{El}}}}}{{C@n{c}}}BLb}{{CDb{Ch{{N`{{Bl{Dd}}}}}}}CDb}`4{{CBn{Ch{Dd}}}CBn}{{CDd{Ch{c}}}CDd{{BAf{CDh}}}}{{{COf{c}}B@b}{{COf{c}}}{}}{{{C@j{c}}B@b}{{C@j{c}}}C@h}{{{COf{c}}{Ch{CEf}}}{{COf{c}}}{}}{{CMb{Ch{CEf}}}CMb}{{{C@j{c}}{Ch{CEf}}}{{C@j{c}}}C@h}{{{CAb{c}}CFl}{{CAb{c}}}C@h}{{BFhc}BFh{{If{{Bl{BFh}}}}}}{{{CAb{c}}{Ch{Gf}}}{{CAb{c}}}C@h}{{{C@d{c}}{Ch{El}}}{{C@d{c}}}C@h}0{{CIjBBj}CIj}{{CIlBBj}CIl}{{CBnd}CBn}{{CDdd}CDd}{{{f{BNd}}En}{{A`{Ojn}}}}{{CBn{Ch{{N`{{BDj{En}}}}}}}CBn}{{CDb{Ch{{N`{{Gl{En}}}}}}}CDb}{{CBnCDf}CBn}{{CDdCDf}CDd}{{CBnBj}CBn}{{CDdBj}CDd}{{CMbCNn}CMb}{{BKf{Gl{BBj}}}{{A`{BBjn}}}}{{{C@d{c}}{Ch{Gf}}}{{C@d{c}}}C@h}{{{C@d{c}}{Ch{d}}}{{C@d{c}}}C@h}{{CIlBBjBBjBBj}CIl}=={{CDbd}CDb}{{{COd{c}}{Ch{{Gl{Ab}}}}}{{COd{c}}}BLb}{{{C@n{c}}{Ch{{Gl{Ab}}}}}{{C@n{c}}}BLb}{{CIjBBjBBjBBj}CIj}4{{CIjBBj}CIj}{{CIlBBj}CIl}{{CBnd}CBn}{{CCbd}CCb}{{{COj{c}}d}{{COj{c}}}BLb}{{{CLd{c}}d}{{CLd{c}}}BLb}9{{{COd{c}}{Ch{{Hh{Dd{N`{Bf}}}}}}}{{COd{c}}}BLb}{{{C@n{c}}{Ch{{Hh{Dd{N`{Bf}}}}}}}{{C@n{c}}}BLb}{{CBn{Ch{Dd}}}CBn}{{CCb{Ch{Dd}}}CCb}{{CBn{Ch{Gf}}}CBn}{{CCb{Ch{{DCf{Gf}}}}}CCb}{{CDb{Ch{Gf}}}CDb}{{{COh{c}}DI`}{{COh{c}}}C@h}{{{COj{c}}DI`}{{COj{c}}}BLb}{{{C@d{c}}El}{{C@d{c}}}C@h}={{CDbd}CDb}{{BAj{DIb{DdDd}}}BAj}{{CIjBBj}CIj}{{CIlBBj}CIl}010{{CBnd}CBn}{{CDdd}CDd}3{{CKjc}CKj{{BAf{{Ch{Gf}}}}}}{{CBnc}CBn{{BAf{{Ch{Gf}}}}}}={{CCbc}CCb{{BAf{{Ch{Gf}}}}}}{{CCb{Ch{Gf}}}CCb}{{{COd{c}}{Ch{Gf}}}{{COd{c}}}BLb}{{{BNf{c}}{Ch{Gf}}}{{BNf{c}}}BNh}{{{CLd{c}}{Ch{Gf}}}{{CLd{c}}}BLb}{{CDb{Ch{Gf}}}CDb}10:>{{CBn{Ch{CDj}}}CBn}{{CDd{Ch{CDj}}}CDd}{{BFhBLl}BFh}{{CDbCDd}CDb}{{{CLd{c}}{Ch{e}}}{{CLd{c}}}BLb{{BAf{CNn}}}}{{CDb{Ch{c}}}CDb{{BAf{CNn}}}}{{CKj{N`{{Bl{CNn}}}}}CKj}{{{CLd{c}}{Ch{{N`{BL`}}}}}{{CLd{c}}}BLb}{{{C@n{c}}{Ch{{N`{BL`}}}}}{{C@n{c}}}BLb}{{BFhd}BFh}{{{COd{c}}{Ch{{Gl{Gf}}}}}{{COd{c}}}BLb}{{{BNf{c}}{Ch{{Gl{Gf}}}}}{{BNf{c}}}BNh}{{{COj{c}}{Ch{{Gl{Dd}}}}}{{COj{c}}}BLb}{{{CLd{c}}{Ch{{N`{{Bl{Dd}}}}}}}{{CLd{c}}}BLb}{{{C@n{c}}{Ch{{Gl{Gf}}}}}{{C@n{c}}}BLb}{{CDb{Ch{{N`{{Gl{Gf}}}}}}}CDb}6{{CBn{Ch{Bj}}}CBn}{{{C@d{c}}Bj}{{C@d{c}}}C@h}{{CDd{Ch{Bj}}}CDd}{{{C@d{c}}CE`}{{C@d{c}}}C@h}{{CBnd}CBn}{{CDbd}CDb}{{CKjd}CKj}2{{CCbd}CCb}{{{CLd{c}}d}{{CLd{c}}}BLb}3?{{{CAb{c}}{Ch{Gf}}}{{CAb{c}}}C@h}{{CKjc}CKj{{BAf{{Ch{DEb}}}}}}{{BFhc{Ch{Jl}}}BFh{{BAf{Dd}}}}{{CBnc}CBn{{BAf{{Ch{DEb}}}}}}{{CBn{Ch{DEb}}}CBn}{{CCb{Ch{DEb}}}CCb}{{CCbc}CCb{{BAf{{Ch{DEb}}}}}}{{{COd{c}}{Ch{DEb}}}{{COd{c}}}BLb}{{{BNf{c}}{Ch{DEb}}}{{BNf{c}}}BNh}{{{CLd{c}}{Ch{{f{DfDEb}}}}}{{CLd{c}}}BLb}{{{C@n{c}}{Ch{DEb}}}{{C@n{c}}}BLb}{{CDb{Ch{DEb}}}CDb}{{{f{BNd}}}{{A`{Ojn}}}}{{CBn{Ch{{N`{{BDj{En}}}}}}}CBn}{{CCb{Ch{{N`{{BDj{En}}}}}}}CCb}{{{COj{c}}{N`{{BDj{En}}}}}{{COj{c}}}BLb}{{{CLd{c}}{N`{{BDj{En}}}}}{{CLd{c}}}BLb}{{CDb{Ch{{N`{{BDj{En}}}}}}}CDb}{{CBnc}{{A`{CBnn}}}{{Eb{{BDj{En}}}{{Ad{{A`{{BDj{En}}n}}}}}}}}4{{{COj{c}}{f{{BDj{En}}}}}{{COj{c}}}BLb}{{{CLd{c}}{f{{BDj{En}}}}}{{CLd{c}}}BLb}3{{CIjBBj}CIj}{{CIlBBj}CIl}{{CBnBj}CBn}{{{C@d{c}}Bj}{{C@d{c}}}C@h}{{CDdBj}CDd}{{BFhd}BFh}{{CBnGf}CBn}{{CDbGf}CDb}10{{{C@n{c}}{Ch{{Hh{GfGf}}}}}{{C@n{c}}}BLb}3{{CKjDEn}CKj}{{CBnDEn}CBn}{{CCbDEn}CCb}{{{CAb{c}}CIb}{{CAb{c}}}C@h}{{BKd{Ch{Dd}}}BKd}{{{C@d{c}}{Ch{El}}}{{C@d{c}}}C@h}{{CIjLd}CIj}{{CIj{Ch{Dd}}}CIj}{{CBnd}CBn}{{CDdd}CDd}10={{{f{BGd}}{Ch{Ih}}}{{Cn{Cl}}}}{{BGd{Ch{Ih}}}BGd}{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Ih}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}1{{CIlBBj}CIl}{{CIjBBj}CIj}{BFhBFh}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}10{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFj}}}}{f{{Bl{Bj}}}}}{{A`{GfBDd}}}}{{{f{CEd}}AAnc}{{A`{bn}}}C@h}{{{f{CFh}}AAnc}{{A`{bn}}}C@h}{{{f{DfAAn}}{f{ANf}}e{f{g}}Gf}{{A`{bn}}}{{BAf{Dd}}}{{Ib{}{{Cj{c}}}}}{DIdIlIn}}{{{f{Df}}c}{{A`{GfBDd}}}DFl}{{{f{Df{N`{AFj}}}}{f{{Bl{DIf}}}}}{{A`{GfBDd}}}}{{BBjc}BBj{{BAf{BBj}}}}{{{f{BKh}}}{{A`{Mjn}}}}{{{f{CLl}}}{{l{Kl}}}}{{{f{CLn}}}{{l{Kl}}}}{{{f{CBj}}}{{A`{{l{Kl}}n}}}}``{{{f{ALb}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ih}}}Aj}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{{BDj{BAj}}}}{f{{BDj{BAj}}}}}{{A`{bn}}}}{cc{}}{{}Gf}{{}DIh}{{}c{}}{{{Ch{{f{BL`}}}}{f{CLf}}{f{{BDj{BAj}}}}}{{A`{dn}}}}{{{f{DIh}}Aj{f{AGd}}}d}{{{Gl{{Hh{{f{CMl}}DIj}}}}BAj{Ch{DIl}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``{{{f{BHb}}c}Ab{{Eb{{Hh{Jl{f{{BHd{Jl}}}}}}}{{Ad{Ch}}}}IlIn}}{{{f{BHb}}c}Ab{{Eb{{Hh{Jl{f{{BHd{Jl}}}}}}}{{Ad{}}}}IlIn}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{Eb{{AAb{Jl}}}{{Ad{Ch}}}}IlIn}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{Eb{{AAb{Jl}}}{{Ad{}}}}IlIn}}{{{f{{Bl{c}}}}e{Ch{BIj}}}{{ALn{c}}}{BIlBIn}{{D`{}{{Cj{{Hh{JlJl}}}}}}Jh}}{{{f{{Bl{c}}}}{f{Ih}}e{Ch{BIj}}}{{ALn{c}}}{BIlBIn}{{D`{}{{Cj{{Hh{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dn}{{{f{{Gl{{AAb{Jl}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BJ`}}{f{Cb}}}Ab}{{BJbBJb}BJb}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{Eb{ff}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALd{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bd}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALf}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALh{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnALj{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALf}ALj{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{ALl{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnALlDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALf}{{Af{f}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}0``{{{f{DIn}}}{{l{Fd}}}}0{{{f{DIn}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{DIn}}{f{{l{Bd}}}}d}{{A`{Abn}}}}{{{f{DIn}}}Ab}{{{f{DIn}}}{{A`{Abn}}}}1{{{f{DIn}}}{{A`{{l{Fd}}n}}}}{{{f{DIn}}}{{l{Cf}}}}{{{f{DIn}}{f{Ab}}}{{A`{Abn}}}}{{{f{DIn}}Fb}{{A`{{l{Cf}}n}}}}{{{f{DIn}}Bj}{{A`{Abn}}}}5{{{f{DIn}}}{{A`{{l{Ah}}n}}}}01{{{f{DJ`}}}{{f{{l{Cf}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CAhBBj}BBj}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}3{cc{}}{{}Gf}{{}c{}}{CAhBBj}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4`````````````````````{{{f{DfDJb}}{f{{Bl{Bj}}}}ddd}{{A`{bn}}}}{{{f{DfDJb}}d}b}>>>>====;;;;::::9999{{{f{DJb}}}En}99998888{{{f{{Bl{Gf}}}}Gf{f{{BDj{En}}}}{Ch{Bj}}CDfd}{{A`{{Gl{DJb}}n}}}}8888{DJb{{A`{Abn}}}}7777666655559999```````````{{{f{BNn}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{CLl}}}{{l{O`}}}}{{{f{CLn}}}{{l{O`}}}}{{{f{CM`}}}{{l{Lb}}}}`{{{f{DCd}}}{{l{O`}}}}21{{{f{CLl}}}{{l{An}}}}{{{f{CLn}}}{{l{An}}}}{{{f{CLl}}}{{l{Kl}}}}{{{f{CLn}}}{{l{Kl}}}}55`46576{{{f{DCd}}}{{l{Kl}}}}16{{{f{CLl}}}{{l{Nl}}}}{{{f{CLn}}}{{l{Nl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}Ld}{{L`{LfLb}}}}=<{{{f{DG`}}A@b}{{A`{Abn}}}}{{{f{DG`}}{f{Ab}}CCf}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BNn}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNn}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{DJd}}}{{f{{l{Bd}}}}}}{{{f{BNn}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJf}}}DJf}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{DJf}}{f{DJf}}}d}{{f{f{c}}}d{}}00{{{f{DJf}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DJf}}{f{Dfc}}}bADl}`{{}Gf}{{}c{}}{{{f{DJf}}{f{Bf}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DJh{c}}}}}{{DJh{c}}}{JfAl}}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{cc{}}{{{f{Bf}}}{{Ch{DJf}}}}{{}Gf}{{}c{}}`{{{f{Df{DJh{c}}}}{f{Bf}}}ChAl}{{{f{DfDJj}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{DJh{Kl}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Nd}}}}{{{f{Df{DJh{Lb}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Hd}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{DJn{}{{DJl{e}}}}n}}}{}{}}{{DJf{Ch{Ld}}}{{A`{{DJh{Kl}}n}}}}{{DJf{Ch{Ld}}}{{A`{{DJh{Lb}}n}}}}{{}{{A`{c}}}{}}{fAAl};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{CKl}}}CKl}{{f{f{Dfc}}}b{}}{fb}{{}CKl}{Gf{{f{c}}}{}}0{Gf{{f{Dfc}}}{}}0{Gfb}0{{{f{CKl}}{f{CKl}}}d}{{{f{DK`}}{f{DK`}}}d}{{f{f{c}}}d{}}00{{{f{CKl}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{{{f{Bf}}}{{A`{DK`}}}}{{{f{Bf}}g}{{A`{CKln}}}{{If{Bf}}}{{BAf{El}}}{{Ib{}{{Cj{{Hh{ce}}}}}}}}{{{f{CKl}}{f{Dfc}}}bADl}{{}Gf}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}044{{CKlGf}CKl}`````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bl{Bj}}}}}{{Ch{DKb}}}}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{cc{}}=<{{{f{{Bl{Bj}}}}{f{Df{Gl{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}};:9=`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAN`{}{{Ib{}{{Cj{c}}}}}}0{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{{f{ANh}}}{{f{En}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{AOj}}{f{En}}}{{A`{Abn}}}}{{{f{AOj}}{f{En}}G`}{{A`{Abn}}}}`{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{{AOd{Bf}}}En}{{{f{AOj}}}{{f{En}}}}``{{AOh{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}{{{Gl{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{Gl{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{Hb{}{{Cj{e}}}}JhIlIn}}{{GfcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{GfAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gf}{{Ch{c}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{AOj}}Gf}{{A`{Jjn}}}}{{{f{AOj}}Gf}Jj}{{}En}{{{f{BBd}}Gf}Jj}4{{BBfEn}{{A`{Mjn}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}{f{AMl}}}{{A`{{Hh{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hh{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{Enn}}}}`{{}c{}}0{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gf}cJf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}{Gfc{}}0{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Ih}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{Hb{}{{Cj{c}}}}JhIlIn}}```````````{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{AOh{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{Bd}}}}CKh{Gh{Hd}{{Ad{AMf}}}}{Gh{AMf}{{Ad{Hd}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{Gh{Hd}{{Ad{AMf}}}}{Gh{AMf}{{Ad{Hd}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{f{{l{Bd}}}}CKh}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Ih}}}DAd{}}{{{DAf{Hd}}{DAf{Bj}}{Ch{Ih}}}DAh}{{{DAf{Hd}}{DAf{Bj}}{Ch{Ih}}}DAj}`{CNbBBj}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CNbLd}BBj}3{{CNbBBjLd}BBj}{{CNbDd}BBj}555{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}8{cc{}}9{{}Gf}{{}c{}};;;;;;;;;;{{CNb{Ch{Dd}}BBjCKh}BBj}{{CNbBBj}BBj}={{CNb{f{Bf}}}BBj}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{CNbBBj}0?0`{{{f{BJd}}{f{AAn}}{f{Cb}}}{{A`{Abn}}}}{{{f{BJd}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}DKd}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{DKd{Ch{{f{AGd}}}}}{{A`{AEln}}}}{cc{}}{{}Gf}{{}c{}}{{{f{DKd}}}d}{{GfGf}DKd}{{{f{DfDKd}}{Cn{Cl}}}b}{{{f{DfDKd}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}7`{{{f{{l{c}}}}}GfAl}0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKf}}}DKf}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{DKf}}{f{DKf}}}d}{{{f{DKf}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DKf}}{f{Dfc}}}bADl}{{}Gf}{{}c{}}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GnBC`}}}}{fAAl}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKh}}}DKh}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{DKh}}{f{DKh}}}d}{{{f{DKh}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DKh}}{f{Dfc}}}bADl}{{}Gf}{{}c{}}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GnBC`}}}}{fAAl}6{{MbMb}Mb}{{{f{{l{Fd}}}}Jl}{{A`{bn}}}}{{{f{{ALn{Jl}}}}Jl}{{A`{bn}}}}```{{{f{Ab}}CGf}Ab}{{{f{Fh}}{f{Fh}}d}{{A`{Fhn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{Eb{}{{Ad{}}}}Ed}}{{{f{Ab}}{f{Cb}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{DKj}}}{{f{AGf}}}}{{{f{DfDKj}}}{{Cn{Cl}}}}{{{f{DfDKj}}}{{f{DfAGf}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKj}}}DKj}{{f{f{Dfc}}}b{}}{fb}{{}DKj}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{DKj}}}{{f{AGd}}}}{{{f{DfDKj}}Gf}b}{{{f{DKj}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{}Gf}{{}c{}}{{{f{DKj}}}Gf}{GfDKj}{{{f{DfDKj}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{DKj}}}{{Ch{{f{DKl}}}}}}8{{{f{{Bl{Fh}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AM`n}}}}{{{f{{Bl{Fh}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hd}}n}}}}{{Dd{f{{Bl{Fh}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Ff}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Ff}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AM`n}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Ff}}n}}}}00`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DHj}}}DHj}{{f{f{Dfc}}}b{}}{fb}{{}DHj}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{{BEb{EnA@l}}}}}En}{{{f{DHj}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DHj}}}Gf}{{{f{DHj}}}{{N`{{BDj{En}}}}}}{{{f{Bf}}dd}En}{{{f{DBl}}Bj{Ch{Gf}}d{Ch{{f{{BDj{En}}}}}}GfGf{Ch{{f{CDh}}}}{Ch{Bj}}Bj{Ch{{f{CDj}}}}dd{f{Df{Ch{Gf}}}}d}{{A`{{Hh{{BDj{En}}GfGf}}n}}}}{{}Gf}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DBl}}{f{CDb}}}{{A`{DHjn}}}}{{}{{A`{c}}}{}}{fAAl}5{{DHj{N`{{BDj{En}}}}}DHj}````{{{f{{l{c}}}}eAMbd}{{Gl{Jl}}}Dn{{D`{}{{Cj{Ch}}}}}}{{{f{{Bl{f}}}}cJle}{{Gl{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Eb{fGff}{{Ad{d}}}}}}``{{{f{DKn}}}{{f{Ab}}}}{{{f{CBj}}}{{A`{{l{Kl}}n}}}}{{{f{CBj}}}{{A`{{l{O`}}n}}}}0{{{f{CBj}}}{{A`{{l{An}}n}}}}22112{{{f{CBj}}}{{A`{{l{Nl}}n}}}}322{{{f{CBj}}{f{Bf}}}{{A`{Abn}}}}{{{f{CBj}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gf{f{Df{Gl{d}}}}}b}```{{{f{AKh}}GfGf}AKh}0{{Gf{f{{Bl{Fh}}}}{f{DfFj}}}{{A`{{AMd{{l{Fd}}}}n}}}}```````````11```{{{f{BOl}}}{{f{{l{Bd}}}}}}{{{f{C@`}}}{{A`{{l{Bd}}n}}}}{{{f{C@`}}}{{l{Bd}}}}{{{f{C@`}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{C@`}}{f{Bf}}d}{{A`{{l{An}}n}}}}{{{f{C@`}}{f{{l{Bd}}}}dd}{{A`{{l{An}}n}}}}{{{f{C@`}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{C@`}}{f{Bf}}d}{{A`{{l{Fd}}n}}}}{{{f{C@`}}{f{{l{Bd}}}}d}{{A`{{l{Fd}}n}}}}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{Bf}}}El}{{{f{C@`}}{f{{l{Bd}}}}Gf}{{A`{{l{Bd}}n}}}}{{{f{C@`}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{C@`}}{f{{l{Bd}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@`}}{f{Bf}}{f{En}}}{{A`{Abn}}}}7{{{f{C@`}}{f{{l{Bd}}}}dd}{{A`{{l{Fd}}n}}}}{{{f{C@`}}{f{Bf}}}{{A`{{l{Fd}}n}}}}?>{{{f{{Bl{{f{{l{Bd}}}}}}}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{C@`}}{f{Bf}}{f{Bf}}}{{A`{{l{Bd}}n}}}}0{{{f{C@`}}{f{Bf}}{f{Bf}}Gf}{{A`{{l{Bd}}n}}}}1{{{f{C@`}}{f{{l{Bd}}}}}{{l{Ah}}}}{{{f{C@`}}{f{{l{Bd}}}}Gf}{{A`{{l{j}}n}}}}0{{{f{{l{Bd}}}}{f{{l{Bd}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{Eb{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{{l{Bd}}}}{f{{l{Bd}}}}Gfed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{Eb{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{C@`}}}{{l{Bd}}}}{{{f{C@`}}{f{Fh}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bd}}}}{f{Bf}}d}{{l{Bd}}}}{{{f{C@`}}}{{l{Fd}}}}03{{{f{C@`}}{f{Fh}}{f{Fh}}}{{A`{{l{Bd}}n}}}}3{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}404040{{{f{C@`}}{f{{l{Bd}}}}}{{l{Bd}}}}10{{{f{C@`}}{f{{l{Fd}}}}d}{{A`{{l{Lb}}n}}}}777````````{{eGfGf}{{DL`{Hd}}}{{If{Bf}}}{{D`{}{{Cj{c}}}}}}{{eGfGf}{{Kb{Hd}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BKh}}}Aj}{{Dd{Gl{{Cn{Cl}}}}{f{AGd}}}{{A`{Abn}}}}{{Dd{Gl{{Cn{Cl}}}}{f{AGd}}{Ch{{f{{DIb{DdDd}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{Abc}{}{B`Mh}}{{{f{Ab}}c}{}{B`Mh}}`{{{f{BKh}}}{{A`{Mjn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}}{{Ch{Gf}}}}0{{{f{BKh}}Fb}{{l{Fd}}}}{{{f{BKh}}}{{A`{{l{Fd}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Ab}}Gf}{{f{{Cn{Cl}}}}}}{{{f{BKh}}}{{f{AGf}}}}{{{f{DfBKh}}}{{f{DfAGf}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBKh}}}{{f{Df{l{c}}}}}Dn}{{{f{BKh}}}{{f{{l{c}}}}}Dn}{{{f{Ab}}}{{f{BKh}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBKh}}}{{A`{Gfn}}}}{{{f{DfAb}}}{{A`{Gfn}}}}{{{f{Ab}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{BKh}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BKh}}}{{Ch{{Cn{Fn}}}}}}{{{f{BKh}}{f{En}}G`}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}0{{{f{Ab}}{f{En}}G`}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMl}}n}}}}8{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bb}{{{f{BKh}}}{{Gj{{Gd{{Cn{Cl}}}}{Gh{{f{{Cn{Cl}}}}}{{Ad{Gf}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gf}}}}}}}}{{{f{BKh}}}{{f{{Gl{{Cn{Cl}}}}}}}}{{{f{DfBKh}}}{{f{Df{Gl{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gl{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BKh}}}{{N`{BKh}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gf{{f{c}}}{}}00{{{f{Ab}}}f}1{Gf{{f{Dfc}}}{}}000{{Abc}{}{B`Mh}}{{{f{Ab}}c}{}{B`Mh}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{Gfb}000{{{f{BKh}}}Ab}{{{f{BKh}}}{{f{En}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{Ab}}c}{}BAh}929{{{f{Ab}}{f{Bf}}}}144{{f{f{c}}}d{}}00{{{f{Ab}}}Gf}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JjGf}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{BKh}}}{{E`{Oj}}}}{{{f{Ab}}AIb}{{A`{Abn}}}}{{{f{BKh}}{f{{l{An}}}}}{{A`{Abn}}}}{{{f{BKh}}}Mj}{{{f{Mb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ab}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Ab}}}El}{cc{}}00{{{L`{LnLb}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{KnKl}}}Ab}{DLbAb}5{{{l{c}}}AbDn}{{Dd{f{{Bl{Jj}}}}d}{{A`{Abn}}}}{{Dd{f{{Bl{Jj}}}}{f{En}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gl{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gl{{Cn{Cl}}}}{f{En}}}Ab}{cAb{{Ib{}{{Cj{{f{Aj}}}}}}}}{cAb{{Ib{}{{Cj{Hd}}}}}}{cAb{{Ib{}{{Cj{Of}}}}}}{cAb{{Ib{}{{Cj{{f{Of}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Of}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nd}}}}}}}}{cAb{{Ib{}{{Cj{d}}}}}}{cAb{{Ib{}{{Cj{{Ch{d}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Jl}}}}}}}}{cAb{{Ib{}{{Cj{{f{d}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{cAb{{Ib{}{{Cj{Jl}}}}}}{cAb{{Ib{}{{Cj{{f{Nn}}}}}}}}{cAb{{Ib{}{{Cj{Nn}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nn}}}}}}}}{cAb{{Ib{}{{Cj{Nd}}}}}}{cAb{{Ib{}{{Cj{{f{Ob}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Hd}}}}}}}}{cAb{{Ib{}{{Cj{{f{Bf}}}}}}}}{cAb{{Ib{}{{Cj{Ob}}}}}}{cAb{{Ib{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Ob}}}}}}}}{cAb{{Ib{}{{Cj{{f{Kd}}}}}}}}{cAb{{Ib{}{{Cj{{f{Jl}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Ib{}{{Cj{Kf}}}}}}{cAb{{Ib{}{{Cj{{f{Nd}}}}}}}}{cAb{{Ib{}{{Cj{Kd}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{El}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Bj}}}}}}}}{cAb{{Ib{}{{Cj{{f{Bj}}}}}}}}{cAb{{Ib{}{{Cj{{f{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{f{Hd}}}}}}}}{cAb{{Ib{}{{Cj{Bj}}}}}}{cAb{{Ib{}{{Cj{El}}}}}}{cAb{{Ib{}{{Cj{Aj}}}}}}{{Dd{Gl{Nn}}}Ab}{{Dd{Gl{Kf}}}Ab}{{Dd{Gl{Of}}}Ab}{{Dd{Gl{Nd}}}Ab}{{Dd{Gl{Hd}}}Ab}{{Dd{Gl{Kd}}}Ab}{{Dd{Gl{Jl}}}Ab}{{Dd{Gl{Bj}}}Ab}{{Dd{Gl{Ob}}}Ab}{{Dd{Gl{Nj}}}Ab}{{Dd{Gl{Aj}}}Ab}{{DdGf{f{En}}}Ab}{{{f{Ab}}GfGf}Ab}{{{f{BKh}}Gf}{{A`{Jjn}}}}{{{f{Ab}}}Gf}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BKh}}}{{Ch{{Nb{Fn}}}}}}{{{f{BKh}}Gf}{{Ch{{f{K`}}}}}}{{{f{BKh}}GfGf}{{Ch{{f{K`}}}}}}{{{f{BKh}}Gf}Jj}{{{f{Ab}}{f{Bf}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAh}102{{{f{BKh}}}d}{{{f{Mb}}{f{Dfc}}}bADl}{{{f{Ab}}{Ch{Gf}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gf}000{{}c{}}000{Ab{{Gl{{Cn{Cl}}}}}}{{}Fh}{AbAAn}3{BFjAb}{AbAb}?{{{f{Ab}}}{{A`{{l{An}}n}}}}000{{{f{BKh}}}{{l{An}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}DLd}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BKh}}}Mj}{{{f{BKh}}}Gf}{{{f{Ab}}}Gf}{{{f{BKh}}Gf}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ab}}}{{Hh{{Gl{{Hf{Hd}}}}{Gl{{Ch{Ih}}}}}}}}{{{f{Ab}}}Ab}{AbBBj}{{{f{Ab}}{f{Bf}}}}{{{f{Ab}}c}{}BAh}{{{f{Ab}}{f{Ab}}}}201{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BKh}}}{{A`{Mjn}}}}{{{f{BKh}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}1232{{Abc}{}{B`Mh}}{{AbAb}}{{{f{Ab}}c}{}{B`Mh}}7{{{f{BKh}}}Gf}{{{f{Ab}}}Gf}{{{f{BKh}}}{{A`{Gfn}}}}{{{f{BKh}}}{{f{Dd}}}}{{Dd{Nf{Hd}}}Ab}{{Ddc}Ab{{If{{Bl{Nd}}}}}}{{Ddc}Ab{{If{{Bl{{E`{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{E`{Bf}}}}}}}}}}{{Ddc}Ab{{If{{Bl{El}}}}}}{{Ddc}Ab{{If{{Bl{{E`{Bf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Gl{Bj}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{f{Bf}}}}}}}}}}{{Ddc}Ab{{If{{Bl{Jj}}}}}}{{Ddc}Ab{{If{{Bl{d}}}}}}{{Ddc}AbBFj}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{If{{Bl{{f{Bf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{E`{{Bl{Bj}}}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Ab}}}}}}}}{{Ddc}Ab{{If{{Bl{Ab}}}}}}{{Dd{Nf{Jl}}}Ab}{{Ddc}Ab{{If{{Bl{{Ch{AMj}}}}}}}}{{Dd{Nf{Kf}}}Ab}{{Ddc}Ab{{If{{Bl{AMj}}}}}}{{Dd{Nf{Nd}}}Ab}{{Ddc}Ab{{If{{Bl{BBb}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Aj}}}}}}}}{{Ddc}Ab{{If{{Bl{Ob}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nj}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Hd}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nd}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nn}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Ob}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Kf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Jl}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Of}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{BB`}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Bj}}}}}}}}{{Ddc}Ab{{If{{Bl{Bj}}}}}}{{Ddc}Ab{{If{{Bl{BB`}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{d}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{AMf}}}}}}}}{{Ddc}Ab{{If{{Bl{Of}}}}}}{{Ddc}Ab{{If{{Bl{AMf}}}}}}{{Ddc}Ab{{If{{Bl{Nn}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{Gl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{El}}}}}}}}{{Ddc}Ab{{If{{Bl{Jl}}}}}}{{Ddc}Ab{{If{{Bl{Aj}}}}}}{{Ddc}Ab{{If{{Bl{Kd}}}}}}{{Ddc}Ab{{If{{Bl{Nj}}}}}}{{Ddc}Ab{{If{{Bl{Kf}}}}}}{{Ddc}Ab{{If{{Bl{Hd}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{BBb}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Kd}}}}}}}}{{Dd{f{En}}}Ab}{{{f{BKh}}GfGf}Ab}{{DdGf}Ab}{{{f{DfDLd}}}Ch}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{Ab}}c}{}BAh}{{{f{Ab}}{f{Ab}}}}31{{{f{Ab}}{f{Bf}}}}1{{{f{Ab}}}{{A`{{f{ADh}}n}}}}{{{f{BKh}}}Gf}`{{{f{BKh}}}{{A`{Mjn}}}}{{{f{Ab}}}{{Cn{Jd}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BKh}}AjA@`}{{A`{Mjn}}}}{{{f{BKh}}}Ab}{{{f{BKh}}}{{Ch{Ih}}}}{{{f{Ab}}c}{}{B`Mh}}:{{Abc}{}{B`Mh}}{{{f{DfBKh}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bl{B@h}}}}}{{A`{Abn}}}}06{MbMb}{{{f{BKh}}{f{Eb}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gfdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gf}Ab}{{{f{DfAb}}Mb}b}{{{f{BKh}}Hd}Ab}{{{f{DfBKh}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{DLd}}}{{Hh{Gf{Ch{Gf}}}}}}{{{f{BKh}}HdGf}Ab}{{{f{Ab}}HdGf}Ab}{{{f{Ab}}Fb}{{A`{Abn}}}}{{{f{BKh}}Fb}{{A`{Abn}}}}{{{f{BKh}}Hd}{{Hh{AbAb}}}}{{{f{Ab}}Hd}{{Hh{AbAb}}}}{{{f{BKh}}Bj}{{Ch{Aj}}}}{{{f{BKh}}Bj}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ab}}Gf}{{A`{{E`{Bf}}n}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{AbAb}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BKh}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gf}}}Ab}{{{f{BKh}}{f{{l{Fd}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bl{A@h}}}}Mb}Ab}{{{f{Ab}}{f{{Bl{A@h}}}}}Ab}{{{f{BKh}}{f{{Bl{Jl}}}}}{{A`{Abn}}}}{{{f{BKh}}{f{{Bl{Jl}}}}}Ab}{{{f{BKh}}{f{{l{Fd}}}}}Ab}{{{f{Ab}}{f{{Bl{Jl}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GfB@b}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{E`{Ab}}}}{fEl}{{AbAb}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Cf}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ff}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Ab}}}{{Ch{{f{AMl}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ej}}}}}}}}{c{{A`{e}}}{}{}}00{{{Hh{{f{BAj}}{Gl{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hh{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hh{Dd{Gl{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hh{{f{BAj}}{Cn{Cl}}}}}{{A`{Abn}}}}4{{{f{Ab}}}{{Ch{{f{{l{Nl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fd}}}}}}}}{{}{{A`{c}}}{}}000{{{f{Ab}}}{{Ch{{f{{l{Ah}}}}}}}}{{AbAb}{{A`{Abn}}}}{{Ddc}{{A`{Ab}}}{}}{{{f{Ab}}}{{Ch{{f{ADh}}}}}}{{{f{DfAb}}{Kh{c}}}dDn}{{{f{Ab}}}{{Ch{{f{{l{Bd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{j}}}}}}}}5{{{f{Ab}}}{{Ch{{f{{L`{LnLb}}}}}}}}{f{{A`{GnBC`}}}}{{{f{Ab}}}{{Ch{{f{{l{Od}}}}}}}};{{{f{Ab}}}{{Ch{{f{{l{Nh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Oh}}}}}}}}{fAAl}000{{{f{Ab}}}{{A`{{f{{l{Od}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Oh}}}}n}}}}{{{f{BKh}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BKh}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{BKh}}Bj}{{Ch{Aj}}}}{{{f{BKh}}Bj}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{B`Mh}}{{{f{BKh}}}{{A`{Mjn}}}}{{{f{Ab}}{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ef}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ef}}}Ef}{{f{f{Dfc}}}b{}}{fb}{{{f{Ef}}}Ab}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{cc{}}{{}Gf}{{}c{}}{{{DLf{Ab}}}Ef}{{{f{DfEf}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{{{f{DfEf}}{f{Df{Cn{Cl}}}}e}c{}{{Eb{{f{Ef}}}{{Ad{c}}}}}}```````````{{fh}b}{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BLd{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BLh}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{DLh}}}DLh}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}987{Gfb}{{{f{DLh}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{DLh}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{}Gf}{{}c{}}?>=?>=?>={fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4``{{{f{CBl}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Gb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBl}}c}{{A`{Abn}}}Bb}{{{f{{l{Gb}}}}c}{{A`{Abn}}}Bb}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{CMn}}}CMn}{{f{f{Dfc}}}b{}}{fb}{{}CMn}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{CMn}}{f{CMn}}}d}{{f{f{c}}}d{}}00{{{f{CMn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{CMn}}{f{Dfc}}}bADl}{{}Gf}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4","D":"AEJjBKn","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",12028],[5,"StructType",2008,12029],[5,"ChunkedArray",17,12030],[6,"PolarsError",3601,12031],[6,"Result",12032],[5,"Series",11453,12033],[17,"Output"],[10,"FnMut",12034],[5,"ListType",2008,12029],[1,"f64"],[10,"PolarsNumericType",2008,12029],[5,"BooleanType",2008,12029],[10,"Num",12035],[10,"ToPrimitive",12036],[5,"StringType",2008,12029],[1,"str"],[5,"BinaryType",2008,12029],[1,"u8"],[1,"slice"],[10,"NumOpsDispatchInner",11948,12037],[5,"ObjectType",2008,12029],[6,"GroupsProxy",4260,12038],[10,"PolarsObject",1556,12039],[5,"FixedSizeListType",2008,12029],[6,"Option",12040],[17,"Item"],[10,"Array",12041],[5,"Box",12042],[10,"Iterator",12043],[5,"AmortizedListIter",12044],[5,"PlSmallStr",2008,12045],[0,"mut"],[17,"IsNested"],[5,"FalseT",2008,12029],[17,"IsObject"],[10,"PolarsDataType",2008,12029],[6,"Cow",12046],[10,"Fn",12034],[10,"Copy",12047],[5,"AmortSeries",11924,12048],[5,"Float32Type",2008,12029],[5,"Float64Type",2008,12029],[5,"String",12049],[6,"DataType",2008,12050],[5,"View",12051],[5,"SortOptions",1686,12052],[5,"UInt32Type",2008,12029],[5,"BinaryOffsetType",2008,12029],[6,"Column",3982,12053],[5,"SortMultipleOptions",1686,12052],[10,"PolarsIntegerType",2008,12029],[10,"MetadataTrait",1272,12054],[6,"CastOptions",1166,12055],[10,"NumOpsDispatchCheckedInner",11995,12056],[5,"Iter",12057],[1,"usize"],[1,"fn"],[5,"Map",12058],[5,"Vec",12059],[5,"CompactString",12060],[5,"MetadataProperties",1272,12061],[10,"DoubleEndedIterator",12062],[1,"i64"],[5,"OffsetsBuffer",12063],[1,"tuple"],[17,"HasViews"],[5,"Formatter",12064],[5,"Error",12064],[17,"Array"],[10,"IntoIterator",12065],[10,"PolarsAsRef",12066],[10,"AsRef",12067],[5,"Bitmap",12068],[10,"Borrow",12069],[10,"Send",12047],[10,"Sync",12047],[10,"IntoParallelIterator",12070],[10,"NoOption",12071],[10,"ExactSizeIterator",12072],[10,"Clone",12073],[10,"TrustedLen",12074],[6,"AnyValue",2008,12075],[1,"u32"],[5,"MetadataFlags",1272,12061],[10,"PolarsObjectSafe",1556,12039],[5,"BinaryArray",12076],[1,"f32"],[1,"u64"],[5,"Metadata",1272,12061],[5,"RwLockWriteGuard",12077],[5,"Int32Type",2008,12029],[5,"DateType",2008,12029],[5,"Logical",2008,12078],[5,"Int64Type",2008,12029],[6,"TimeUnit",2008,12079],[5,"DatetimeType",2008,12029],[5,"Int128Type",2008,12029],[5,"DecimalType",2008,12029],[5,"DurationType",2008,12029],[5,"TimeType",2008,12029],[10,"PolarsFloatType",2008,12029],[6,"IsSorted",11453,12080],[10,"PolarsIterator",1215,12081],[6,"ChunkedArrayLayout",17,12030],[10,"NumCast",12036],[5,"Scalar",4629,12082],[6,"MetadataReadGuard",1272,12083],[5,"IMMetadata",1272,12084],[5,"Arc",4629,12085],[5,"RwLockReadGuard",12077],[1,"i32"],[5,"Range",12086],[5,"UInt64Type",2008,12029],[1,"i128"],[5,"Int16Type",2008,12029],[1,"i16"],[5,"Int8Type",2008,12029],[1,"i8"],[5,"UInt16Type",2008,12029],[1,"u16"],[5,"UInt8Type",2008,12029],[5,"Field",2008,12087],[10,"ParallelIterator",12070],[10,"IndexedParallelIterator",12070],[6,"QuantileMethod",4629,12088],[5,"RollingOptionsFixedWindow",4629,12089],[10,"PolarsOpsNumericType",12090],[10,"Sized",12047],[5,"ChunkId",4629,12091],[17,"IsStruct"],[5,"RandomState",12092],[5,"BytesHash",12093],[5,"ViewRepr",12094],[1,"array"],[5,"Dim",12095],[5,"ArrayBase",12094],[5,"OwnedRepr",12096],[6,"Either",12097],[5,"TypeId",12098],[5,"DataFrame",3700,12099],[5,"NullableIdxSize",4629,12091],[10,"FnOnce",12034],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",860,12100],[5,"AnonymousListBuilder",888,12101],[5,"AnonymousOwnedListBuilder",888,12101],[5,"ListBooleanChunkedBuilder",888,12102],[5,"ListPrimitiveChunkedBuilder",888,12103],[10,"ListBuilderTrait",888,12104],[10,"ChunkedBuilder",888,12105],[5,"ListStringChunkedBuilder",888,12106],[5,"ListBinaryChunkedBuilder",888,12106],[5,"ListNullChunkedBuilder",888,12107],[5,"BinViewChunkedBuilder",888,12108],[10,"ViewType",12109],[5,"BooleanChunkedBuilder",888,12110],[5,"NullChunkedBuilder",888,12111],[5,"PrimitiveChunkedBuilder",888,12112],[5,"NullChunked",12113],[10,"NewChunkedArray",888,12105],[10,"Hasher",12114],[10,"ChunkedCollectInferIterExt",1195,12115],[10,"ChunkedCollectIterExt",1195,12115],[10,"Canonical",1209,12116],[10,"ChunkedCollectParIterExt",1211,12117],[10,"FromParIterWithDtype",1211,12117],[5,"BooleanArray",12118],[5,"BoolIterNoNull",1215,12081],[5,"FixedSizeListArray",12119],[5,"FixedSizeListIterNoNull",1215,12081],[5,"SomeIterator",1215,12081],[5,"MetadataEnv",1272,12120],[10,"MetadataCollectable",1272,12121],[5,"Iter",12122],[5,"IterNames",12122],[5,"File",12123],[5,"Mutex",12124],[6,"MetadataMerge",1272,12061],[5,"RwLock",12077],[5,"ObjectArray",1556,12039],[6,"ArrowDataType",2008,12125],[10,"Any",12098],[10,"Debug",12064],[5,"BitmapIter",12126],[6,"ZipValidity",12127],[5,"ObjectChunkedBuilder",1633,12128],[10,"AnonymousObjectBuilder",1657,12129],[5,"ObjectRegistry",1657,12129],[10,"ChunkAgg",1686,12130],[17,"FuncRet"],[10,"ChunkApply",1686,12130],[10,"ChunkApplyKernel",1686,12130],[10,"ChunkSort",1686,12130],[10,"ChunkUnique",1686,12130],[10,"ChunkCast",1686,12130],[6,"FillNullStrategy",1686,12130],[10,"ChunkCompareEq",11453,12130],[10,"ChunkExplode",1686,12130],[10,"ChunkFillNullValue",1686,12130],[10,"ChunkFilter",1686,12130],[10,"ChunkFull",1686,12130],[10,"ChunkFullNull",1686,12130],[10,"ChunkAnyValue",1686,12130],[10,"ChunkCompareIneq",1686,12130],[10,"IsFirstDistinct",1686,12130],[10,"IsLastDistinct",1686,12130],[10,"ChunkQuantile",1686,12130],[10,"ChunkExpandAtIndex",1686,12130],[10,"Reinterpret",1686,12130],[10,"ChunkReverse",1686,12130],[10,"ChunkRollApply",1686,12130],[10,"ChunkSet",1686,12130],[10,"ChunkShift",1686,12130],[10,"ChunkShiftFill",1686,12130],[10,"SlicedArray",1686,12131],[10,"ChunkVar",1686,12130],[10,"ChunkTake",1686,12130],[10,"ChunkTakeUnchecked",1686,12130],[10,"ChunkBytes",1686,12130],[10,"ChunkZip",1686,12130],[10,"BinaryFnMut",1896,12132],[10,"StaticArray",2008,12133],[10,"TernaryFnMut",1896,12132],[10,"Error",12134],[10,"UnaryFnMut",1896,12132],[5,"PrimitiveArray",12135],[5,"RowsEncoded",12136],[6,"SearchSortedSide",1946,12137],[5,"NoNull",4629,12138],[5,"NaiveDateTime",12139],[6,"Tz",12140],[5,"NaiveTime",12141],[5,"CategoricalChunked",2008,12142],[5,"CategoricalChunkedBuilder",2008,12143],[10,"ArrayFromIter",2008,12144],[10,"ArrayFromIterDtype",2008,12144],[5,"OsStr",12145],[5,"Path",12146],[10,"AsRefDataType",2008,12050],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",12147],[10,"From",12067],[5,"BinaryViewArrayGeneric",12109],[6,"RevMapping",2008,12148],[10,"CategoricalMergeOperation",2008,12149],[10,"LogicalType",2008,12078],[6,"CategoricalOrdering",2008,12148],[5,"OwnedObject",2008,12075],[6,"UnknownKind",2008,12050],[5,"CompatLevel",2008,12050],[5,"CategoricalType",2008,12029],[5,"Dimension",2008,12150],[6,"ReshapeDimension",2008,12150],[6,"ArrowTimeUnit",2008],[6,"Ordering",12151],[10,"ArrayCollectIterExt",2008,12144],[5,"GlobalRevMapMerger",2008,12149],[1,"char"],[10,"FromIterator",12065],[10,"Into",12067],[10,"NumericNative",2008,12029],[5,"ArrowField",4629],[6,"PrimitiveType",12152],[6,"IntegerType",12153],[5,"TimeDelta",12154],[5,"NaiveDate",12155],[10,"GetAnyValue",2008,12075],[10,"IntoScalar",2008,12156],[5,"CatIter",2008,12142],[6,"Expr",4629,12157],[1,"u128"],[6,"PhysicalType",12153],[6,"ToCompactStringError",12060],[5,"Arguments",12064],[5,"StringCacheHolder",3562,12158],[5,"EnumChunkedBuilder",3581,12159],[5,"ErrString",3601,12031],[6,"PolarsWarning",3601,12160],[6,"Error",12161],[5,"Error",12162],[6,"ParquetError",12163],[5,"TryReserveError",12164],[5,"Error",12165],[5,"Utf8Error",12166],[10,"Display",12064],[5,"Schema",12167],[10,"IntoColumn",3982,12053],[6,"NullStrategy",3700,12099],[6,"UniqueKeepStrategy",3700,12099],[5,"HashSet",12168],[5,"Row",4517,12169],[5,"GroupBy",4260,12170],[5,"DynamicGroupOptions",4629,12171],[5,"RangeFull",12086],[5,"RangeInclusive",12086],[5,"RangeFrom",12086],[5,"RangeTo",12086],[5,"RangeToInclusive",12086],[5,"RecordBatchIter",3700,12099],[5,"PhysRecordBatchIter",3700,12099],[5,"LazyFrame",4629,12172],[10,"IntoSeries",11453,12173],[5,"RollingGroupOptions",4629,12171],[10,"RangeBounds",12086],[10,"IntoVec",4629,12138],[6,"IndexOrder",4629,12174],[5,"StructArray",4629,12175],[5,"RecordBatchT",12176],[5,"Duration",4629,12177],[5,"ScalarColumn",3982,12178],[5,"PartitionedColumn",12179],[6,"BitRepr",11453,12080],[5,"UnpivotArgsIR",4231,12180],[5,"GroupsIdx",4260,12038],[5,"UnitVec",12181],[6,"GroupByMethod",4260,12170],[5,"SlicedGroups",4260,12038],[5,"GroupsProxyParIter",4260,12038],[10,"UnindexedConsumer",12182],[6,"GroupsIndicator",4260,12038],[6,"IRAggExpr",12183],[10,"IntoGroupsProxy",4260,12184],[5,"Copied",12185],[5,"Zip",12186],[5,"GroupsProxyIter",4260,12038],[6,"RollingFnParams",4629,12187],[10,"IsFloat",12188],[10,"NativeType",12189],[10,"AggList",4501,12190],[10,"TakeExtremum",4501,12191],[10,"PhysicalAggExpr",4514,12192],[6,"AnyValueBuffer",4517,12193],[6,"AnyValueBufferTrusted",4517,12193],[5,"Node",12194],[6,"IR",12195],[5,"Arena",12194],[6,"AExpr",12183],[10,"JoinDispatch",4629,12196],[5,"JoinArgs",4629,12197],[5,"StructNameSpace",4629,12198],[10,"SeriesTrait",11453,12080],[10,"DfTake",4629,12199],[10,"DataFrameOps",4629,12200],[5,"CsvReader",4629,12201],[10,"PhysicalIoExpr",12202],[10,"MmapBytesReader",12203],[10,"LhsNumOps",11948,12037],[6,"Selector",4629,12204],[10,"NumOpsDispatch",11948,12037],[5,"LazyGroupBy",4629,12172],[5,"OptFlags",4629,12205],[10,"Allocator",12206],[5,"JoinBuilder",4629,12172],[10,"AnonymousScan",4629,12207],[5,"ScanArgsAnonymous",4629,12208],[10,"FunctionOutputField",4629,12209],[5,"SpecialEq",4629,12209],[6,"VisitRecursion",12210],[6,"FunctionExpr",4629,12211],[10,"ArgAgg",4629,12212],[5,"ArrayNameSpace",4629,12213],[5,"ListNameSpace",4629,12214],[5,"FieldsMapper",4629,12215],[5,"IpcStreamReader",4629,12216],[10,"Read",12217],[10,"ColumnsUdf",4629,12209],[10,"AsBinary",4629,12218],[10,"StringMethods",10364,12219],[5,"BorrowedFd",12220],[10,"AsFd",12220],[10,"AsList",4629,12221],[10,"AsRawFd",12222],[6,"AggExpr",4629,12157],[10,"SeriesSealed",4629,12223],[10,"AsString",4629,12224],[20,"MaybeUninit",12225],[10,"StringNameSpaceImpl",4629,12226],[5,"OwnedBatchedCsvReader",4629,12227],[5,"CsvWriter",4629,12228],[5,"BatchedWriter",12228],[10,"Write",12217],[5,"IpcWriter",4629,12229],[5,"BatchedWriter",12229],[5,"ParquetReader",4629,12230],[5,"BatchedParquetReader",4629,12231],[5,"ParquetWriter",4629,12232],[5,"BatchedWriter",12233],[5,"BatchedCsvReader",4629,12227],[5,"BinaryNameSpace",10269,12234],[6,"Operator",4629,12157],[10,"RenameAliasFn",4629,12209],[5,"UserDefinedFunction",4629,12235],[10,"ColumnBinaryUdf",4629,12209],[5,"InProcessQuery",4629,12236],[5,"HashMap",12237],[5,"CategoricalNameSpace",4629,12238],[10,"RoundSeries",4629,12239],[10,"TemporalMethods",11343,12240],[10,"NumOpsDispatchChecked",11995,12056],[5,"LazyCsvReader",4629,12241],[5,"ScanArgsIpc",4629,12242],[5,"LazyJsonLineReader",4629,12243],[5,"ScanArgsParquet",4629,12244],[5,"RollingOptionsDynamicWindow",4629,12245],[5,"Bounds",4629,12246],[6,"ClosedWindow",4629,12247],[6,"Label",4629,12247],[6,"StartBy",4629,12247],[5,"Window",4629,12248],[5,"CsvReadOptions",4629,12249],[5,"CsvParseOptions",4629,12249],[6,"CsvEncoding",4629,12249],[6,"CommentPrefix",4629,12249],[6,"NullValues",4629,12249],[5,"CsvWriterOptions",4629,12250],[5,"SerializeOptions",4629,12250],[6,"QuoteStyle",4629,12250],[5,"IpcScanOptions",4629,12251],[5,"IpcWriterOptions",4629,12229],[6,"IpcCompression",4629,12229],[5,"JsonWriterOptions",4629,12252],[6,"JoinCoalesce",4629,12197],[6,"JoinType",4629,12197],[6,"JoinValidation",4629,12197],[5,"ParquetOptions",4629,12253],[6,"ParallelStrategy",4629,12253],[5,"AsOfOptions",4629,12254],[6,"AsofStrategy",4629,12254],[5,"ParquetWriteOptions",4629,12255],[6,"InequalityOperator",4629,12256],[6,"ParquetCompression",4629,12255],[5,"IEJoinOptions",4629,12256],[5,"GzipLevel",4629,12255],[5,"BrotliLevel",4629,12255],[5,"ZstdLevel",4629,12255],[6,"InterpolationMethod",4629,12257],[6,"ClosedInterval",4629,12258],[6,"RankMethod",4629,12259],[5,"RankOptions",4629,12259],[6,"DslPlan",4629,12260],[5,"When",4629,12261],[5,"Then",4629,12261],[5,"ChainedWhen",4629,12261],[5,"ChainedThen",4629,12261],[6,"LazySerde",4629,12157],[6,"Excluded",4629,12157],[6,"BooleanFunction",4629,12262],[6,"CategoricalFunction",4629,12263],[6,"TemporalFunction",4629,12264],[5,"StatisticsOptions",4629,12265],[6,"PowFunction",4629,12266],[6,"StringFunction",4629,12267],[6,"StructFunction",4629,12268],[5,"DatetimeArgs",4629,12269],[5,"DurationArgs",4629,12269],[5,"RollingCovOptions",4629,12270],[5,"StrptimeOptions",4629,12270],[5,"JoinOptions",4629,12270],[6,"WindowType",4629,12270],[5,"FileMetadata",4629,12271],[6,"WindowMapping",4629,12270],[6,"NestedType",4629,12270],[5,"UnpivotArgsDSL",4629,12270],[6,"LiteralValue",4629,12272],[5,"AnonymousScanOptions",4629,12273],[5,"UnionArgs",4629,12273],[5,"RollingVarParams",4629,12187],[5,"RollingQuantileParams",4629,12187],[6,"NonExistent",4629,12274],[10,"LazyFileListReader",4629,12275],[5,"CloudOptions",10500,12276],[10,"Ord",12151],[6,"ColumnOrder",12277],[10,"BinaryNameSpaceImpl",4629,12278],[5,"JsonLineReader",4629,12279],[5,"RowGroupMetadata",12280],[10,"CrossJoin",4629,12281],[10,"ExprEvalExtension",4629,12282],[10,"DateMethods",10364,12283],[10,"DatetimeMethods",10364,12284],[10,"DurationMethods",10364,12285],[5,"IpcStreamWriterOption",4629,12216],[10,"BinaryUdfOutputField",4629,12209],[10,"Default",12286],[5,"CStr",12287],[5,"ParquetStatistics",4629],[5,"ColumnChunkMetadata",12288],[6,"NullBehavior",12001,12289],[5,"Weak",12085],[5,"DateLikeNameSpace",10895,12290],[10,"SeriesMethods",4629,12291],[10,"PartialEq",12151],[10,"Scalar",12292],[10,"ListNameSpaceExtension",4629,12293],[10,"Command",12294],[5,"PathBuf",12146],[10,"SerReader",4629,12295],[10,"SerWriter",4629,12295],[5,"IpcReader",4629,12251],[5,"IpcStreamWriter",4629,12216],[5,"JsonWriter",4629,12252],[5,"JsonReader",4629,12252],[10,"UdfSchema",4629,12296],[6,"ListFunction",12297],[6,"ArrayFunction",12298],[6,"RangeFunction",12299],[6,"BinaryFunction",12300],[5,"MutableStatistics",12301],[1,"never"],[5,"OsString",12145],[5,"CString",12302],[10,"ToOwned",12046],[5,"GrowableStruct",12303],[10,"SchemaExt",4629,12304],[10,"FromData",10889,12305],[5,"Buffer",12306],[10,"FromDataUtf8",10889,12305],[10,"FromDataBinary",10889,12305],[5,"ListArray",12307],[6,"Ambiguous",4629,12274],[10,"NamedFromOwned",4629,12308],[10,"DataFrameJoinOps",4629,12309],[5,"FunctionOptions",12273],[10,"PartialOrd",12151],[6,"Context",12260],[5,"BoundsIter",4629,12248],[6,"ReaderBytes",12203],[10,"PolarsTemporalGroupby",4629,12171],[10,"Hash",12114],[10,"SeriesJoin",4629,12310],[10,"TimeMethods",10364,12311],[5,"NonZero",12312],[10,"IntoListNameSpace",4629,12293],[5,"StructValueIter",12313],[17,"DataType"],[10,"SchemaNamesAndDtypes",4629,12304],[10,"AsofJoinBy",4629,12314],[10,"ListNameSpaceImpl",4629,12315],[5,"ExprNameNameSpace",4629,12316],[5,"KeyValue",12317],[10,"IntoLazy",4629,12172],[10,"Literal",4629,12272],[5,"Null",4629,12272],[10,"CloneToUninit",12073],[5,"SuperTypeOptions",12318],[5,"RowIndex",12319],[10,"ChunkAggSeries",4629,12320],[10,"QuantileAggSeries",4629,12321],[10,"IndexToUsize",4629,12322],[10,"NamedFrom",4629,12308],[6,"RowGroupFetcher",12231],[6,"ScanSources",12323],[5,"SplitNChars",4629,12324],[5,"AnonymousScanArgs",4629,12207],[5,"Pin",12325],[5,"Request",12134],[10,"SeriesRank",4629,12259],[5,"BorrowedCursor",12326],[10,"VarInt",12327],[5,"IoSliceMut",12217],[10,"SeriesOpsTime",10364,12328],[10,"PolarsRound",4629,12329],[10,"ChunkedSet",4629,12090],[5,"SchemaDescriptor",12330],[6,"SeekFrom",12217],[10,"VarAggSeries",4629,12331],[5,"StringNameSpace",12332],[10,"TakeChunked",4629,12199],[5,"IRPlan",12195],[10,"ToDummies",4629,12333],[10,"PolarsTruncate",4629,12334],[5,"FileMetaData",12317],[5,"AllocError",12206],[5,"SchemaInferenceResult",11310,12335],[10,"PolarsUpsample",4629,12336],[10,"VecHash",4629,12337],[6,"JsonFormat",4629,12252],[5,"BTreeMap",12338],[10,"WriteDataFrameToFile",12295],[5,"IoSlice",12217],[6,"PrefilterMaskSetting",10179,12231],[5,"MemSlice",12339],[6,"Filter",12340],[10,"ArrayNameSpace",10250,12341],[10,"AsArray",10250,12342],[6,"Buffer",10286,12343],[10,"AsString",10430,12219],[6,"Pattern",10430,12344],[5,"DatetimeInfer",10469,12345],[10,"StrpTimeParser",10469,12345],[17,"Error"],[10,"TryFromWithUnit",10469,12345],[6,"CloudType",10500,12276],[6,"SupportedCompression",10559,12346],[5,"AnonymousBuilder",10950,12347],[6,"RollingFunction",11194,12348],[6,"RollingFunctionBy",11225,12349],[5,"MutableNullArray",11270,12350],[5,"MutableBitmap",12351],[10,"AsSeries",11343,12240],[5,"Utf8Array",12352],[5,"_SerdeSeries",12053],[5,"SeriesIter",11453,12353],[5,"Rc",12354],[6,"NumericListOp",11948,12355],[8,"FillNullLimit",1686],[10,"InitHashMaps",2008],[10,"InitHashMaps2",2008],[5,"TrueT",2008],[8,"PolarsResult",3601],[15,"IO",10159],[15,"Context",10159],[15,"Count",10153],[15,"Slice",10154],[8,"OpaqueColumnUdf",4629],[8,"QuantileInterpolOptions",4629],[8,"ChunkJoinOptIds",4629],[10,"ListFromIter",4629],[15,"Quantile",10035],[15,"Min",10035],[15,"Max",10035],[15,"IsBetween",11147],[15,"Any",11147],[15,"All",11147],[15,"GroupBy",10045],[15,"Union",10045],[15,"Sort",10045],[15,"Scan",10045],[15,"ExtContext",10045],[15,"DataFrameScan",10045],[15,"IR",10045],[15,"Select",10045],[15,"HStack",10045],[15,"MapFunction",10045],[15,"Cache",10045],[15,"Filter",10045],[15,"Distinct",10045],[15,"Slice",10045],[15,"Sink",10045],[15,"Join",10045],[15,"HConcat",10045],[15,"SortBy",10096],[15,"Filter",10096],[15,"Cast",10096],[15,"Sort",10096],[15,"Gather",10096],[15,"RenameAlias",10096],[15,"Ternary",10096],[15,"Function",10096],[15,"Window",10096],[15,"AnonymousFunction",10096],[15,"Slice",10096],[15,"BinaryExpr",10096],[15,"Round",11150],[15,"RoundSF",11150],[15,"Clip",11150],[15,"BackwardFill",11150],[15,"ForwardFill",11150],[15,"Random",11150],[15,"GatherEvery",11150],[15,"ValueCounts",11150],[15,"Rank",11150],[15,"ReplaceStrict",11150],[15,"CumCount",11150],[15,"CumSum",11150],[15,"CumProd",11150],[15,"CumMin",11150],[15,"CumMax",11150],[15,"Range",10156],[15,"ConcatHorizontal",11172],[15,"ConcatVertical",11172],[15,"ExtractGroups",11172],[15,"SplitExact",11172],[15,"Contains",11172],[15,"Find",11172],[15,"Replace",11172],[15,"DatetimeFunction",11186],[5,"Utf8Field",10286],[5,"CategoricalField",10286],[5,"DatetimeField",10286],[15,"Datetime",10360],[10,"Utf8FromIter",11449],[10,"BinaryFromIter",11449]],"r":[[1,12356],[2,12356],[3,12356],[4,12356],[6,12158],[7,12356],[8,12356],[9,12356],[13,12356],[14,12356],[16,12158],[17,12030],[18,12030],[19,12030],[24,12357],[116,12030],[140,12030],[141,12030],[169,12030],[171,12030],[226,12030],[279,12030],[424,12030],[471,12030],[579,12030],[582,12030],[729,12030],[860,12100],[888,12101],[889,12101],[890,12108],[891,12108],[892,12110],[893,12105],[894,12106],[895,12102],[896,12104],[897,12107],[898,12103],[899,12106],[900,12105],[901,12111],[902,12112],[903,12108],[1040,12105],[1056,12104],[1084,12105],[1149,12101],[1150,12101],[1151,12106],[1152,12102],[1153,12104],[1154,12107],[1155,12103],[1156,12106],[1164,12104],[1166,12055],[1195,12115],[1196,12115],[1209,12116],[1211,12117],[1212,12117],[1215,12081],[1216,12081],[1217,12081],[1218,12081],[1254,12081],[1270,12358],[1271,12358],[1277,12084],[1282,12061],[1283,12121],[1284,12120],[1285,12061],[1286,12061],[1287,12061],[1288,12083],[1289,12054],[1556,12039],[1557,12039],[1558,12039],[1559,12039],[1571,12039],[1602,12039],[1603,12359],[1633,12128],[1657,12129],[1658,12129],[1659,12129],[1660,12129],[1673,12129],[1674,12129],[1675,12129],[1678,12129],[1680,12129],[1687,12130],[1688,12130],[1689,12130],[1690,12130],[1691,12130],[1692,12130],[1693,12130],[1694,12130],[1695,12130],[1696,12130],[1697,12130],[1698,12130],[1699,12130],[1700,12130],[1701,12130],[1702,12130],[1703,12130],[1704,12130],[1705,12130],[1706,12130],[1707,12130],[1708,12130],[1709,12130],[1710,12130],[1711,12130],[1712,12130],[1713,12130],[1714,12130],[1717,12130],[1718,12130],[1728,12130],[1729,12131],[1731,12052],[1732,12052],[1746,12130],[1791,12130],[1794,12130],[1803,12130],[1806,12130],[1848,12130],[1851,12130],[1857,12130],[1894,12130],[1896,12132],[1900,12132],[1901,12132],[1902,12132],[1903,12132],[1904,12132],[1905,12132],[1906,12132],[1907,12132],[1908,12132],[1909,12132],[1910,12132],[1911,12132],[1912,12132],[1913,12132],[1914,12132],[1915,12132],[1916,12132],[1917,12132],[1918,12132],[1919,12132],[1920,12132],[1921,12132],[1922,12132],[1923,12132],[1924,12132],[1925,12132],[1926,12132],[1927,12132],[1928,12132],[1929,12132],[1930,12132],[1931,12132],[1932,12360],[1933,12360],[1934,12361],[1935,12361],[1936,12361],[1937,12362],[1938,12362],[1939,12362],[1940,12362],[1941,12362],[1942,12362],[1943,12362],[1944,12362],[1945,12362],[1949,12137],[1951,12137],[1970,12137],[1976,12131],[1977,12363],[1978,12363],[1979,12363],[1980,12363],[1983,12364],[1984,12131],[1985,12052],[1986,12052],[1997,12365],[1998,12366],[1999,12366],[2000,12366],[2001,12365],[2002,12365],[2003,12367],[2004,12365],[2005,12366],[2006,12366],[2007,12366],[2009,12075],[2013,12029],[2014,12144],[2015,12144],[2016,12144],[2017,12125],[2019,12050],[2023,12029],[2025,12029],[2026,12029],[2028,12029],[2033,12029],[2034,12029],[2035,12142],[2038,12142],[2039,12143],[2040,12149],[2041,12148],[2043,12029],[2044,12050],[2045,12050],[2046,12050],[2047,12050],[2052,12368],[2053,12029],[2056,12369],[2058,12029],[2063,12370],[2064,12029],[2066,12150],[2070,12371],[2071,12029],[2078,12029],[2079,12087],[2080,12087],[2083,12029],[2089,12029],[2090,12029],[2094,12029],[2095,12029],[2096,12075],[2098,12149],[2102,12372],[2103,12322],[2104,12372],[2105,12372],[2107,12373],[2108,12372],[2110,12029],[2111,12029],[2115,12029],[2116,12029],[2120,12029],[2121,12029],[2125,12029],[2126,12029],[2130,12029],[2131,12029],[2133,12156],[2144,12029],[2145,12029],[2147,12078],[2148,12078],[2160,12029],[2163,12029],[2165,12029],[2166,12075],[2170,12373],[2171,12373],[2172,12372],[2173,12373],[2174,12373],[2175,12373],[2176,12045],[2177,12029],[2178,12029],[2179,12029],[2180,12029],[2182,12150],[2183,12148],[2186,12133],[2190,12029],[2192,12029],[2197,12029],[2202,12374],[2203,12029],[2204,12079],[2205,12050],[2208,12029],[2212,12029],[2213,12029],[2217,12029],[2218,12029],[2222,12029],[2223,12029],[2227,12029],[2228,12029],[2232,12050],[2415,12149],[2429,12078],[2561,12050],[2739,12078],[3143,12149],[3144,12149],[3149,12050],[3539,12142],[3540,12142],[3541,12143],[3542,12149],[3543,12148],[3545,12149],[3549,12148],[3550,12149],[3552,12149],[3553,12149],[3554,12142],[3555,12142],[3556,12148],[3561,12148],[3562,12158],[3568,12158],[3571,12158],[3579,12158],[3581,12159],[3607,12031],[3614,12031],[3615,12031],[3616,12160],[3632,12031],[3645,12031],[3661,12160],[3668,12031],[3670,12031],[3671,12031],[3672,12031],[3673,12031],[3674,12160],[3675,12031],[3697,12375],[3698,12375],[3699,12375],[3701,12099],[3706,12099],[3707,12099],[3709,12099],[3710,12099],[3753,12099],[3791,12099],[3823,12099],[3895,12099],[3982,12053],[3983,12053],[3986,12178],[4231,12180],[4260,12038],[4263,12170],[4264,12170],[4266,12038],[4267,12038],[4268,12038],[4269,12038],[4270,12038],[4271,12038],[4274,12038],[4276,12184],[4288,12038],[4297,12170],[4368,12170],[4378,12170],[4501,12190],[4502,12191],[4503,12191],[4504,12191],[4505,12191],[4506,12191],[4507,12191],[4508,12191],[4509,12191],[4510,12191],[4514,12192],[4519,12193],[4520,12193],[4540,12169],[4574,12169],[4595,12169],[4609,12169],[4610,12169],[4611,12169],[4627,12376],[4628,12377],[4632,12157],[4639,12205],[4641,12274],[4644,12207],[4645,12207],[4646,12273],[4653,12075],[4654,12085],[4655,12212],[4658,12100],[4663,12029],[4664,12144],[4666,12144],[4667,12144],[4668,12213],[4669,12041],[4670,12125],[4672,12378],[4674,12218],[4675,12221],[4677,12254],[4678,12050],[4679,12224],[4681,12254],[4682,12314],[4683,12254],[4686,12379],[4692,12227],[4693,12231],[4698,12029],[4699,12108],[4702,12278],[4704,12029],[4705,12029],[4707,12029],[4708,12209],[4715,12029],[4716,12110],[4717,12262],[4718,12029],[4719,12038],[4722,12246],[4723,12248],[4725,12255],[4736,12142],[4740,12142],[4741,12143],[4742,12263],[4743,12149],[4744,12238],[4745,12148],[4747,12029],[4751,12261],[4752,12261],[4753,12130],[4754,12320],[4755,12130],[4756,12130],[4757,12130],[4758,12130],[4759,12130],[4760,12130],[4761,12130],[4762,12130],[4763,12130],[4764,12130],[4765,12130],[4766,12130],[4767,12130],[4768,12091],[4769,12197],[4770,12130],[4771,12130],[4772,12130],[4773,12130],[4774,12130],[4775,12130],[4776,12130],[4777,12130],[4778,12130],[4779,12130],[4780,12130],[4781,12130],[4782,12030],[4783,12105],[4784,12115],[4785,12115],[4786,12090],[4788,12258],[4789,12247],[4792,12053],[4794,12209],[4798,12209],[4800,12249],[4801,12050],[4813,12281],[4814,12249],[4815,12249],[4816,12249],[4817,12201],[4818,12228],[4819,12250],[4826,12050],[4827,12050],[4828,12099],[4829,12309],[4830,12200],[4834,12050],[4842,12368],[4843,12283],[4845,12029],[4849,12269],[4850,12369],[4852,12284],[4854,12029],[4861,12370],[4862,12029],[4866,12199],[4869,12150],[4874,12260],[4878,12177],[4884,12269],[4885,12371],[4886,12285],[4887,12029],[4888,12171],[4902,12157],[4906,12157],[4907,12282],[4908,12316],[4917,12379],[4918,12379],[4919,12029],[4920,12087],[4924,12087],[4925,12215],[4926,12316],[4927,12271],[4928,12380],[4930,12130],[4931,12130],[4941,12029],[4949,12029],[4950,12029],[4955,12029],[4956,12029],[4964,12305],[4965,12305],[4966,12305],[4970,12211],[4971,12209],[4975,12075],[4977,12209],[4979,12149],[4980,12170],[4982,12170],[4984,12038],[4985,12038],[4986,12038],[4987,12038],[4988,12038],[4989,12038],[4996,12255],[5007,12372],[5009,12256],[5010,12379],[5016,12322],[5017,12372],[5018,12038],[5019,12091],[5020,12372],[5023,12236],[5025,12174],[5026,12322],[5027,12256],[5029,12373],[5030,12372],[5032,12197],[5035,12029],[5036,12029],[5041,12029],[5042,12029],[5047,12029],[5048,12029],[5053,12029],[5054,12029],[5059,12029],[5060,12029],[5063,12257],[5066,12053],[5067,12184],[5068,12172],[5069,12293],[5070,12156],[5071,12173],[5072,12138],[5074,12229],[5075,12251],[5076,12251],[5077,12216],[5078,12216],[5079,12216],[5080,12229],[5081,12229],[5084,12130],[5088,12130],[5103,12197],[5104,12172],[5105,12197],[5106,12196],[5107,12270],[5109,12197],[5110,12197],[5113,12252],[5114,12279],[5116,12252],[5117,12252],[5118,12252],[5122,12247],[5124,12381],[5126,12381],[5127,12381],[5133,12241],[5134,12275],[5135,12172],[5136,12172],[5137,12243],[5138,12157],[5145,12197],[5150,12037],[5157,12106],[5158,12102],[5159,12104],[5160,12029],[5162,12382],[5163,12214],[5164,12293],[5165,12315],[5166,12103],[5167,12106],[5168,12029],[5169,12272],[5171,12272],[5173,12078],[5176,12078],[5229,12272],[5234,12308],[5235,12308],[5248,12270],[5250,12105],[5252,12138],[5253,12274],[5264,12272],[5272,12249],[5273,12091],[5274,12091],[5275,12037],[5276,12056],[5277,12029],[5280,12029],[5282,12029],[5287,12157],[5288,12157],[5289,12205],[5298,12227],[5299,12075],[5301,12383],[5304,12253],[5305,12255],[5306,12253],[5307,12230],[5309,12255],[5310,12232],[5314,12373],[5315,12373],[5316,12372],[5317,12373],[5318,12373],[5319,12373],[5320,12045],[5322,12029],[5323,12031],[5324,12029],[5325,12029],[5326,12081],[5327,12029],[5328,12039],[5329,12031],[5330,12329],[5331,12171],[5332,12334],[5334,12336],[5336,12266],[5339,12112],[5343,12321],[5344,12088],[5345,12088],[5347,12250],[5356,12259],[5357,12259],[5358,12130],[5360,12209],[5369,12150],[5370,12148],[5380,12270],[5383,12187],[5384,12171],[5385,12245],[5386,12089],[5387,12187],[5388,12384],[5389,12187],[5394,12239],[5395,12385],[5403,12082],[5407,12208],[5408,12242],[5409,12244],[5410,12304],[5411,12304],[5414,12304],[5415,12304],[5416,12137],[5420,12204],[5423,12295],[5424,12295],[5425,12250],[5426,12033],[5429,12310],[5430,12291],[5431,12328],[5432,12259],[5433,12223],[5434,12080],[5447,12131],[5448,12038],[5454,12052],[5455,12052],[5456,12209],[5461,12324],[5463,12247],[5465,12133],[5466,12265],[5474,12158],[5476,12029],[5477,12108],[5479,12267],[5480,12219],[5481,12226],[5483,12029],[5490,12270],[5494,12175],[5495,12357],[5498,12268],[5499,12198],[5501,12029],[5511,12199],[5513,12264],[5514,12240],[5516,12261],[5524,12374],[5525,12311],[5527,12029],[5528,12079],[5529,12050],[5533,12333],[5547,12029],[5554,12029],[5555,12029],[5560,12029],[5561,12029],[5566,12029],[5567,12029],[5572,12029],[5573,12029],[5574,12386],[5575,12296],[5579,12273],[5581,12099],[5584,12050],[5585,12270],[5586,12180],[5589,12235],[5599,12331],[5600,12337],[5604,12261],[5606,12248],[5609,12270],[5610,12270],[5620,12255],[5717,12387],[5722,12388],[5723,12387],[5736,12389],[5747,12170],[5749,12390],[5752,12391],[5766,12391],[5777,12392],[5783,12393],[5786,12394],[5799,12395],[5804,12395],[5807,12130],[5817,12396],[5842,12397],[5846,12398],[5850,12399],[5858,12393],[5860,12261],[6130,12400],[6138,12149],[6143,12398],[6154,12393],[6168,12401],[6171,12402],[6173,12402],[6175,12402],[6469,12403],[6477,12391],[6481,12404],[6482,12390],[6484,12405],[6497,12390],[6506,12386],[6510,12405],[6512,12406],[6515,12405],[6516,12405],[6517,12406],[6518,12406],[6527,12382],[6528,12407],[6534,12408],[6535,12409],[6536,12409],[6537,12408],[6538,12050],[6540,12231],[6545,12410],[6547,12391],[6548,12410],[6550,12410],[6552,12410],[6554,12391],[6555,12410],[6559,12356],[6561,12394],[6562,12396],[6563,12269],[6565,12394],[6566,12394],[6567,12366],[6568,12366],[6569,12366],[6636,12382],[6637,12196],[6904,12301],[6906,12356],[6908,12411],[7056,12412],[7057,12393],[7066,12390],[7067,12390],[7069,12269],[7077,12177],[7078,12177],[7079,12304],[7346,12413],[7347,12413],[7354,12383],[7355,12383],[7356,12383],[7363,12170],[7384,12130],[7421,12393],[7426,12382],[7430,12130],[7435,12414],[7542,12170],[7546,12391],[7550,12406],[7783,12130],[7793,12393],[7795,12130],[7820,12383],[7829,12379],[7841,12247],[7842,12247],[7926,12415],[7937,12416],[7938,12417],[7939,12417],[7941,12418],[7953,12390],[7956,12322],[7957,12335],[8095,12394],[8096,12394],[8097,12419],[8098,12257],[8100,12419],[8101,12420],[8256,12258],[8258,12383],[8267,12421],[8273,12422],[8276,12423],[8285,12398],[8288,12398],[8295,12407],[8330,12393],[8339,12408],[8340,12408],[8348,12393],[8357,12272],[8405,12149],[8406,12149],[8411,12392],[8422,12393],[8425,12393],[8434,12424],[8435,12379],[8437,12398],[8448,12398],[8454,12398],[8464,12050],[8474,12398],[8495,12396],[8533,12396],[8544,12425],[8545,12426],[8593,12427],[8617,12398],[8622,12393],[8623,12382],[8659,12379],[8677,12031],[8678,12031],[8679,12031],[8680,12031],[8685,12309],[8694,12398],[8726,12391],[8733,12252],[8737,12428],[8738,12429],[8740,12430],[8747,12430],[8748,12430],[8750,12417],[8752,12383],[8807,12130],[8845,12400],[8849,12130],[8863,12401],[8915,12130],[8935,12324],[8937,12324],[8956,12415],[8966,12396],[8967,12431],[8969,12431],[8971,12431],[8973,12431],[8975,12431],[8990,12398],[9015,12261],[9019,12394],[9168,12408],[9169,12408],[9480,12231],[9622,12393],[9647,12382],[9813,12261],[10024,12432],[10033,12130],[10182,12231],[10185,12231],[10189,12424],[10194,12433],[10196,12434],[10201,12190],[10202,12191],[10203,12191],[10204,12191],[10205,12191],[10206,12191],[10207,12191],[10208,12191],[10209,12191],[10210,12191],[10214,12132],[10218,12132],[10219,12132],[10220,12132],[10221,12132],[10222,12132],[10223,12132],[10224,12132],[10225,12132],[10226,12132],[10227,12132],[10228,12132],[10229,12132],[10230,12132],[10231,12132],[10232,12132],[10233,12132],[10234,12132],[10235,12132],[10236,12132],[10237,12132],[10238,12132],[10239,12132],[10240,12132],[10241,12132],[10242,12132],[10243,12132],[10244,12132],[10245,12132],[10246,12132],[10247,12132],[10248,12132],[10249,12132],[10250,12341],[10251,12342],[10269,12234],[10287,12343],[10289,12343],[10292,12343],[10306,12343],[10338,12343],[10363,12238],[10364,12283],[10365,12284],[10366,12285],[10367,12245],[10368,12328],[10369,12219],[10370,12311],[10423,12435],[10430,12219],[10436,12344],[10437,12219],[10460,12219],[10469,12345],[10471,12345],[10472,12345],[10483,12345],[10502,12276],[10503,12276],[10539,12436],[10552,12276],[10553,12276],[10560,12346],[10572,12346],[10578,12075],[10582,12029],[10583,12144],[10584,12144],[10585,12144],[10586,12125],[10588,12050],[10592,12029],[10594,12029],[10595,12029],[10597,12029],[10602,12029],[10603,12029],[10604,12142],[10607,12142],[10608,12143],[10609,12149],[10610,12148],[10612,12029],[10613,12050],[10614,12050],[10615,12050],[10616,12050],[10621,12368],[10622,12029],[10625,12369],[10627,12029],[10632,12370],[10633,12029],[10635,12150],[10639,12371],[10640,12029],[10645,12029],[10646,12087],[10647,12087],[10650,12029],[10656,12029],[10657,12029],[10661,12029],[10662,12029],[10663,12075],[10665,12149],[10669,12372],[10670,12322],[10671,12372],[10672,12372],[10674,12373],[10675,12372],[10677,12029],[10678,12029],[10682,12029],[10683,12029],[10687,12029],[10688,12029],[10692,12029],[10693,12029],[10697,12029],[10698,12029],[10700,12156],[10711,12029],[10712,12029],[10714,12078],[10715,12078],[10727,12029],[10730,12029],[10732,12029],[10733,12075],[10737,12373],[10738,12373],[10739,12372],[10740,12373],[10741,12373],[10742,12373],[10743,12045],[10744,12029],[10745,12029],[10746,12029],[10747,12029],[10749,12150],[10750,12148],[10753,12133],[10757,12029],[10759,12029],[10764,12029],[10769,12374],[10770,12029],[10771,12079],[10772,12050],[10775,12029],[10779,12029],[10780,12029],[10784,12029],[10785,12029],[10789,12029],[10790,12029],[10794,12029],[10795,12029],[10799,12050],[10812,12149],[10815,12078],[10820,12050],[10823,12078],[10838,12149],[10839,12149],[10840,12050],[10858,12142],[10859,12142],[10860,12143],[10861,12149],[10862,12148],[10864,12149],[10868,12148],[10869,12149],[10871,12149],[10872,12149],[10873,12142],[10874,12142],[10875,12148],[10880,12148],[10881,12158],[10882,12158],[10883,12158],[10884,12158],[10885,12159],[10886,12417],[10887,12417],[10888,12417],[10889,12305],[10890,12305],[10891,12305],[10895,12290],[10947,12192],[10950,12347],[10970,12360],[10971,12360],[10986,12262],[10989,12263],[11029,12211],[11072,12266],[11105,12267],[11113,12268],[11118,12264],[11143,12211],[11144,12211],[11145,12211],[11146,12211],[11188,12263],[11192,12266],[11198,12348],[11229,12349],[11256,12361],[11257,12361],[11258,12361],[11259,12257],[11262,12257],[11263,12420],[11264,12437],[11265,12438],[11266,12438],[11267,12438],[11268,12438],[11269,12438],[11270,12350],[11301,12362],[11302,12362],[11303,12362],[11304,12362],[11305,12362],[11306,12362],[11307,12362],[11308,12362],[11309,12362],[11310,12335],[11321,12335],[11326,12335],[11327,12335],[11340,12137],[11341,12137],[11342,12137],[11343,12240],[11344,12240],[11365,12131],[11366,12363],[11367,12363],[11368,12363],[11369,12363],[11372,12364],[11373,12131],[11374,12052],[11375,12052],[11386,12224],[11387,12324],[11388,12226],[11398,12413],[11399,12413],[11409,12415],[11417,12324],[11419,12324],[11423,12415],[11429,12431],[11431,12431],[11433,12431],[11435,12431],[11437,12431],[11443,12235],[11449,12439],[11450,12439],[11454,12080],[11455,12130],[11457,12173],[11458,12080],[11462,12033],[11463,12353],[11464,12353],[11465,12080],[11476,12033],[11483,12033],[11673,12033],[11798,12033],[11924,12048],[11925,12048],[11951,12037],[11953,12037],[11954,12037],[11955,12355],[11960,12037],[11966,12037],[11995,12056],[11996,12056],[12003,12289]],"b":[[29,"impl-Add-for-ChunkedArray%3CT%3E"],[30,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[31,"impl-Add-for-%26ChunkedArray%3CT%3E"],[32,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[33,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[34,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add-for-ChunkedArray%3CStringType%3E"],[36,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[38,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[39,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[40,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[42,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[43,"impl-AggList-for-ChunkedArray%3CT%3E"],[44,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[46,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[47,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[49,"impl-AggList-for-ChunkedArray%3CListType%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[59,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[60,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[61,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[62,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[64,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[67,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[73,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[78,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CBinaryType%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CFixedSizeListType%3E"],[86,"impl-ChunkedArray%3CListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[88,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[89,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[92,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[95,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[96,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[97,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[98,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[100,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[102,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[103,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[104,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[105,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[108,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[109,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[110,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[118,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[158,"impl-ChunkedArray%3CStructType%3E"],[161,"impl-ChunkedArray%3CT%3E"],[162,"impl-Container-for-ChunkedArray%3CT%3E"],[182,"impl-Div-for-%26ChunkedArray%3CT%3E"],[183,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[184,"impl-Div-for-ChunkedArray%3CT%3E"],[185,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[192,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[193,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[194,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[195,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[196,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[197,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[198,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[199,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[200,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[201,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[202,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[203,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[204,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[205,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[207,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[210,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[212,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[217,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[218,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[220,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[221,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[222,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[223,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[227,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[228,"impl-Debug-for-ChunkedArray%3CListType%3E"],[229,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[230,"impl-Debug-for-ChunkedArray%3CT%3E"],[231,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[232,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[233,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[235,"impl-ChunkedArray%3CListType%3E"],[236,"impl-ChunkedArray%3CFixedSizeListType%3E"],[245,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[246,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[248,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[249,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[250,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[251,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[252,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[253,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[254,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[255,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[256,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[257,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[258,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[259,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[260,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[261,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[262,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[263,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[265,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[271,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[272,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[274,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[275,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[276,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[277,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[278,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[283,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[287,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[290,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[291,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[293,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[294,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[296,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[297,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[299,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[300,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[301,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[304,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[305,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[306,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[308,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[310,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[311,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[322,"impl-ChunkedArray%3CFixedSizeListType%3E"],[323,"impl-ChunkedArray%3CListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[343,"impl-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ChunkedArray%3CListType%3E"],[348,"impl-ChunkedArray%3CListType%3E"],[349,"impl-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[358,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[359,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[370,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[371,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[372,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[373,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[374,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[375,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[376,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[377,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[378,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[379,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[380,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[381,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[382,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[383,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[389,"impl-ChunkedArray%3CFixedSizeListType%3E"],[390,"impl-ChunkedArray%3CListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[410,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ChunkedArray%3CT%3E"],[436,"impl-Container-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[442,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[443,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[444,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[445,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[446,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[447,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[449,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[450,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[453,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[454,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[455,"impl-ChunkedArray%3CBooleanType%3E"],[456,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[458,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[459,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[460,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[462,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[463,"impl-ChunkedArray%3CBooleanType%3E"],[464,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[465,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[466,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[467,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[468,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[469,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[477,"impl-ChunkedArray%3CBooleanType%3E"],[478,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[481,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[482,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[485,"impl-ChunkedArray%3CT%3E"],[486,"impl-ChunkedArray%3CBooleanType%3E"],[487,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[488,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[489,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[490,"impl-Mul-for-ChunkedArray%3CT%3E"],[493,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[494,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[495,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[497,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[498,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[499,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[501,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[503,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[505,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[507,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[508,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[509,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[510,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[511,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[526,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[527,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[528,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[529,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[530,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[531,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[532,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[534,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[535,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[536,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[537,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[538,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[540,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[541,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[542,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[543,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[544,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[545,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[546,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[547,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[548,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[554,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[555,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[556,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[557,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[558,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[559,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[560,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[561,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[562,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[563,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[564,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[565,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[566,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[567,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[568,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[569,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[570,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[571,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[572,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[573,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[574,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[575,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[580,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[581,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[583,"impl-ChunkedArray%3CListType%3E"],[584,"impl-ChunkedArray%3CStringType%3E"],[585,"impl-ChunkedArray%3CStringType%3E"],[586,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[590,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[591,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[592,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[593,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[594,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[625,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[626,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[627,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[628,"impl-Rem-for-ChunkedArray%3CT%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[643,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[644,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[645,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[646,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[647,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[648,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[650,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[651,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[652,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[653,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[654,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[655,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[656,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[657,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[663,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[664,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[665,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[666,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[667,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[668,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[669,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[670,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[671,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[672,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[673,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[674,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[675,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[676,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[677,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[678,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[679,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[681,"impl-ChunkedArray%3CT%3E"],[682,"impl-Container-for-ChunkedArray%3CT%3E"],[683,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[685,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[686,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[688,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[689,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[690,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[691,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[692,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[693,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[694,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[695,"impl-Container-for-ChunkedArray%3CT%3E"],[696,"impl-ChunkedArray%3CT%3E"],[698,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[699,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[700,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[702,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[703,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[704,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[705,"impl-Sub-for-ChunkedArray%3CT%3E"],[707,"impl-ChunkedArray%3CBooleanType%3E"],[708,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[709,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[710,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[711,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[713,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[714,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[718,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[719,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[720,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[721,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[722,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[723,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[724,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[725,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[726,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[727,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[728,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[733,"impl-ChunkedArray%3CFixedSizeListType%3E"],[734,"impl-ChunkedArray%3CListType%3E"],[735,"impl-ChunkedArray%3CT%3E"],[736,"impl-ChunkedArray%3CListType%3E"],[741,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[742,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[743,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[744,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[745,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[746,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[748,"impl-ChunkedArray%3CListType%3E"],[749,"impl-ChunkedArray%3CFixedSizeListType%3E"],[763,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[764,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[765,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[766,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[767,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[773,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[774,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[775,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[777,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[778,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[784,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[787,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[793,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[801,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[802,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[803,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[807,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[859,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[1035,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1036,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1310,"impl-MetadataProperties"],[1311,"impl-Flags-for-MetadataProperties"],[1312,"impl-MetadataFlags"],[1313,"impl-Flags-for-MetadataFlags"],[1376,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1377,"impl-Metadata%3CT%3E"],[1402,"impl-LowerHex-for-MetadataProperties"],[1403,"impl-Octal-for-MetadataProperties"],[1404,"impl-UpperHex-for-MetadataProperties"],[1405,"impl-Binary-for-MetadataProperties"],[1406,"impl-Debug-for-MetadataProperties"],[1407,"impl-Octal-for-MetadataFlags"],[1408,"impl-LowerHex-for-MetadataFlags"],[1409,"impl-UpperHex-for-MetadataFlags"],[1410,"impl-Binary-for-MetadataFlags"],[1411,"impl-Debug-for-MetadataFlags"],[1421,"impl-Flags-for-MetadataProperties"],[1422,"impl-MetadataProperties"],[1423,"impl-Flags-for-MetadataFlags"],[1424,"impl-MetadataFlags"],[1435,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1436,"impl-Metadata%3CT%3E"],[1479,"impl-Metadata%3CT%3E"],[1480,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1484,"impl-Metadata%3CT%3E"],[1485,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1562,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1563,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1598,"impl-ObjectArray%3CT%3E"],[1599,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1614,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1615,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1625,"impl-ObjectArray%3CT%3E"],[1626,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1627,"impl-ObjectArray%3CT%3E"],[1628,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1630,"impl-Array-for-ObjectArray%3CT%3E"],[1631,"impl-ObjectArray%3CT%3E"],[1634,"impl-ObjectChunkedBuilder%3CT%3E"],[1635,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1637,"impl-ObjectChunkedBuilder%3CT%3E"],[1638,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2310,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2311,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2312,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2313,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2420,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2421,"impl-Logical%3CDurationType,+Int64Type%3E"],[2423,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2424,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2425,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2426,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2427,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2728,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2729,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2730,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2731,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2732,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2744,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2745,"impl-PartialEq-for-DataType"],[2754,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2755,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2756,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2757,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2758,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2759,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2798,"impl-Display-for-PlSmallStr"],[2799,"impl-Debug-for-PlSmallStr"],[2803,"impl-Debug-for-AnyValue%3C\'a%3E"],[2804,"impl-Display-for-AnyValue%3C\'_%3E"],[2806,"impl-Debug-for-DataType"],[2807,"impl-Display-for-DataType"],[2810,"impl-Display-for-TimeUnit"],[2811,"impl-Debug-for-TimeUnit"],[2813,"impl-Display-for-ReshapeDimension"],[2814,"impl-Debug-for-ReshapeDimension"],[2818,"impl-From%3C%26String%3E-for-PlSmallStr"],[2819,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2820,"impl-From%3C%26str%3E-for-PlSmallStr"],[2821,"impl-From%3CString%3E-for-PlSmallStr"],[2825,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2826,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2839,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2840,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2841,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2842,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2843,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2847,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2848,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2849,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2851,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2853,"impl-From%3C%26ArrowField%3E-for-Field"],[2878,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2879,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2888,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2889,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2890,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2891,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2892,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2893,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2894,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2895,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2915,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2916,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2917,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2918,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2919,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2922,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2923,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2924,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2925,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2926,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2964,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2965,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2966,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[2967,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[2968,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2969,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3082,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3083,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3084,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3085,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3086,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3137,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3138,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3139,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3140,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3141,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3142,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3179,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3180,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3181,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3182,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3183,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3184,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3185,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3186,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3195,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3196,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3197,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3198,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3199,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3200,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3203,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3204,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3226,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3227,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3233,"impl-Logical%3CDurationType,+Int64Type%3E"],[3234,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3241,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3242,"impl-Logical%3CTimeType,+Int64Type%3E"],[3243,"impl-Logical%3CDateType,+Int32Type%3E"],[3259,"impl-Logical%3CDurationType,+Int64Type%3E"],[3260,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3313,"impl-Logical%3CTimeType,+Int64Type%3E"],[3314,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3315,"impl-Logical%3CDateType,+Int32Type%3E"],[3321,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3322,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3647,"impl-Display-for-ErrString"],[3648,"impl-Debug-for-ErrString"],[3649,"impl-Display-for-PolarsError"],[3650,"impl-Debug-for-PolarsError"],[3654,"impl-From%3CError%3E-for-PolarsError"],[3655,"impl-From%3CError%3E-for-PolarsError"],[3657,"impl-From%3CParquetError%3E-for-PolarsError"],[3658,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3659,"impl-From%3CError%3E-for-PolarsError"],[3660,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3800,"impl-Debug-for-DataFrame"],[3801,"impl-Display-for-DataFrame"],[3807,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3808,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3834,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3835,"impl-Index%3C%26str%3E-for-DataFrame"],[3836,"impl-Index%3Cusize%3E-for-DataFrame"],[3837,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3838,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3839,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3840,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3841,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3860,"impl-DataFrame"],[3861,"impl-Container-for-DataFrame"],[3869,"impl-Container-for-DataFrame"],[3870,"impl-DataFrame"],[3917,"impl-Container-for-DataFrame"],[3918,"impl-DataFrame"],[3922,"impl-Container-for-DataFrame"],[3923,"impl-DataFrame"],[3947,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3948,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[3990,"impl-Add-for-Column"],[3991,"impl-Add%3CT%3E-for-%26Column"],[3992,"impl-Add-for-%26Column"],[3993,"impl-Add%3CT%3E-for-Column"],[4018,"impl-BitAnd-for-%26Column"],[4019,"impl-BitAnd-for-Column"],[4020,"impl-Column"],[4021,"impl-BitOr-for-%26Column"],[4022,"impl-BitOr-for-Column"],[4023,"impl-BitXor-for-Column"],[4024,"impl-BitXor-for-%26Column"],[4052,"impl-Div%3CT%3E-for-%26Column"],[4053,"impl-Div-for-Column"],[4054,"impl-Div-for-%26Column"],[4055,"impl-Div%3CT%3E-for-Column"],[4079,"impl-From%3CScalarColumn%3E-for-Column"],[4081,"impl-From%3CPartitionedColumn%3E-for-Column"],[4082,"impl-From%3CSeries%3E-for-Column"],[4128,"impl-Mul%3CT%3E-for-%26Column"],[4129,"impl-Mul%3CT%3E-for-Column"],[4130,"impl-Mul-for-%26Column"],[4131,"impl-Mul-for-Column"],[4147,"impl-Rem%3CT%3E-for-%26Column"],[4148,"impl-Rem-for-Column"],[4149,"impl-Rem%3CT%3E-for-Column"],[4150,"impl-Rem-for-%26Column"],[4171,"impl-Sub%3CT%3E-for-%26Column"],[4172,"impl-Sub-for-%26Column"],[4173,"impl-Sub%3CT%3E-for-Column"],[4174,"impl-Sub-for-Column"],[4376,"impl-Display-for-GroupByMethod"],[4377,"impl-Debug-for-GroupByMethod"],[4384,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4385,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4418,"impl-IntoIterator-for-%26GroupsIdx"],[4419,"impl-IntoIterator-for-GroupsIdx"],[4421,"impl-IntoParallelIterator-for-GroupsIdx"],[4422,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5810,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5811,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5815,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5816,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5844,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5845,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5868,"impl-Flags-for-OptFlags"],[5869,"impl-OptFlags"],[6614,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6615,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6616,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6626,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6627,"impl-Default-for-Arc%3Cstr%3E"],[6628,"impl-Default-for-Arc%3CT%3E"],[6629,"impl-Default-for-Arc%3CCStr%3E"],[7122,"impl-PartialEq-for-Expr"],[7123,"impl-Expr"],[7127,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[7128,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[7146,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[7147,"impl-PartialEq-for-Arc%3CT,+A%3E"],[7148,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[7154,"impl-PartialEq-for-StructArray"],[7155,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7444,"impl-Debug-for-Duration"],[7445,"impl-Display-for-Duration"],[7467,"impl-Debug-for-JoinType"],[7468,"impl-Display-for-JoinType"],[7469,"impl-Debug-for-JoinValidation"],[7470,"impl-Display-for-JoinValidation"],[7486,"impl-Debug-for-Expr"],[7487,"impl-Display-for-Expr"],[7490,"impl-Display-for-Operator"],[7491,"impl-Debug-for-Operator"],[7493,"impl-Display-for-BooleanFunction"],[7494,"impl-Debug-for-BooleanFunction"],[7496,"impl-Debug-for-CategoricalFunction"],[7497,"impl-Display-for-CategoricalFunction"],[7498,"impl-Debug-for-TemporalFunction"],[7499,"impl-Display-for-TemporalFunction"],[7501,"impl-Debug-for-PowFunction"],[7502,"impl-Display-for-PowFunction"],[7503,"impl-Debug-for-StringFunction"],[7504,"impl-Display-for-StringFunction"],[7505,"impl-Display-for-StructFunction"],[7506,"impl-Debug-for-StructFunction"],[7507,"impl-Debug-for-FunctionExpr"],[7508,"impl-Display-for-FunctionExpr"],[7521,"impl-UpperHex-for-OptFlags"],[7522,"impl-Octal-for-OptFlags"],[7523,"impl-LowerHex-for-OptFlags"],[7524,"impl-Debug-for-OptFlags"],[7525,"impl-Binary-for-OptFlags"],[7526,"impl-Pointer-for-Arc%3CT,+A%3E"],[7527,"impl-Debug-for-Arc%3CT,+A%3E"],[7528,"impl-Display-for-Arc%3CT,+A%3E"],[7560,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7561,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7641,"impl-From%3Ci16%3E-for-Expr"],[7642,"impl-From%3Ci64%3E-for-Expr"],[7643,"impl-From%3Cu32%3E-for-Expr"],[7645,"impl-From%3CAggExpr%3E-for-Expr"],[7646,"impl-From%3C%26str%3E-for-Expr"],[7647,"impl-From%3Cu16%3E-for-Expr"],[7648,"impl-From%3Cf32%3E-for-Expr"],[7649,"impl-From%3Cf64%3E-for-Expr"],[7650,"impl-From%3Ci8%3E-for-Expr"],[7651,"impl-From%3Ci32%3E-for-Expr"],[7652,"impl-From%3Cu64%3E-for-Expr"],[7653,"impl-From%3Cu8%3E-for-Expr"],[7654,"impl-From%3Cbool%3E-for-Expr"],[7659,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7660,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7661,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7662,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7663,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7664,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7666,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7667,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7668,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7669,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7679,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7680,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7681,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7682,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7695,"impl-From%3CExpr%3E-for-Selector"],[7696,"impl-From%3CString%3E-for-Selector"],[7697,"impl-From%3CPlSmallStr%3E-for-Selector"],[7698,"impl-From%3C%26str%3E-for-Selector"],[7702,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7703,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7704,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7707,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7708,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7709,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7710,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7711,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7712,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7713,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7714,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7715,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7716,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7717,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7718,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7719,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7729,"impl-From%3Cf32%3E-for-Scalar"],[7730,"impl-From%3Cu16%3E-for-Scalar"],[7731,"impl-From%3Cu8%3E-for-Scalar"],[7732,"impl-From%3Cf64%3E-for-Scalar"],[7733,"impl-From%3Ci64%3E-for-Scalar"],[7734,"impl-From%3Ci32%3E-for-Scalar"],[7735,"impl-From%3Ci16%3E-for-Scalar"],[7736,"impl-From%3Ci8%3E-for-Scalar"],[7737,"impl-From%3Cu64%3E-for-Scalar"],[7739,"impl-From%3Cu32%3E-for-Scalar"],[7748,"impl-OptFlags"],[7749,"impl-Flags-for-OptFlags"],[7754,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7755,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7763,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7764,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7777,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7778,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8904,"impl-StructArray"],[8905,"impl-Array-for-StructArray"],[8911,"impl-StructArray"],[8912,"impl-Array-for-StructArray"],[9183,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[9184,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[9188,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9189,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9650,"impl-Array-for-StructArray"],[9651,"impl-StructArray"],[9907,"impl-LazyFileListReader-for-LazyCsvReader"],[9908,"impl-LazyCsvReader"],[9909,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9910,"impl-LazyJsonLineReader"],[9951,"impl-LazyFileListReader-for-LazyCsvReader"],[9952,"impl-LazyCsvReader"],[9953,"impl-LazyJsonLineReader"],[9954,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9996,"impl-Array-for-StructArray"],[9997,"impl-StructArray"],[10489,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10490,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10495,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10496,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[11212,"impl-Debug-for-RollingFunction"],[11213,"impl-Display-for-RollingFunction"],[11243,"impl-Debug-for-RollingFunctionBy"],[11244,"impl-Display-for-RollingFunctionBy"],[11472,"impl-Add-for-%26Series"],[11473,"impl-Add-for-Series"],[11474,"impl-Add%3CT%3E-for-Series"],[11475,"impl-Add%3CT%3E-for-%26Series"],[11492,"impl-AsSeries-for-Series"],[11493,"impl-SeriesSealed-for-Series"],[11546,"impl-Div%3CT%3E-for-Series"],[11547,"impl-Div%3CT%3E-for-%26Series"],[11548,"impl-Div-for-Series"],[11549,"impl-Div-for-%26Series"],[11560,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11561,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11562,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11564,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11565,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11566,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11583,"impl-Debug-for-Series"],[11584,"impl-Display-for-Series"],[11589,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11590,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11591,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11592,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11593,"impl-From%3C_SerdeSeries%3E-for-Series"],[11595,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11601,"impl-FromIterator%3C%26f64%3E-for-Series"],[11602,"impl-FromIterator%3Ci64%3E-for-Series"],[11603,"impl-FromIterator%3Cu16%3E-for-Series"],[11604,"impl-FromIterator%3C%26u16%3E-for-Series"],[11605,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11606,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11607,"impl-FromIterator%3Cbool%3E-for-Series"],[11608,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11609,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11610,"impl-FromIterator%3C%26bool%3E-for-Series"],[11611,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11612,"impl-FromIterator%3Cu32%3E-for-Series"],[11613,"impl-FromIterator%3C%26i16%3E-for-Series"],[11614,"impl-FromIterator%3Ci16%3E-for-Series"],[11615,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11616,"impl-FromIterator%3Ci32%3E-for-Series"],[11617,"impl-FromIterator%3C%26i8%3E-for-Series"],[11618,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11619,"impl-FromIterator%3C%26str%3E-for-Series"],[11620,"impl-FromIterator%3Ci8%3E-for-Series"],[11621,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11622,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11623,"impl-FromIterator%3C%26f32%3E-for-Series"],[11624,"impl-FromIterator%3C%26u32%3E-for-Series"],[11625,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11626,"impl-FromIterator%3Cu64%3E-for-Series"],[11627,"impl-FromIterator%3C%26i32%3E-for-Series"],[11628,"impl-FromIterator%3Cf32%3E-for-Series"],[11629,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11630,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11631,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11632,"impl-FromIterator%3C%26u8%3E-for-Series"],[11633,"impl-FromIterator%3C%26u64%3E-for-Series"],[11634,"impl-FromIterator%3C%26i64%3E-for-Series"],[11635,"impl-FromIterator%3Cu8%3E-for-Series"],[11636,"impl-FromIterator%3CString%3E-for-Series"],[11637,"impl-FromIterator%3Cf64%3E-for-Series"],[11638,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11639,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11640,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11641,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11642,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11643,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11644,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11645,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11646,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11647,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11648,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11659,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11660,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11661,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11662,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11663,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11664,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11709,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11710,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11711,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11712,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11713,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11714,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11723,"impl-Mul%3CT%3E-for-Series"],[11724,"impl-Mul-for-Series"],[11725,"impl-Mul%3CT%3E-for-%26Series"],[11726,"impl-Mul-for-%26Series"],[11731,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11732,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11733,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11734,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11735,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11736,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11737,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11738,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11739,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11740,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11741,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11742,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11743,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11744,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11745,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11746,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11747,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11748,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11749,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11750,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11751,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11752,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11753,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11754,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11755,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11756,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11757,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11758,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11759,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11760,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11761,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11762,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11763,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11764,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11765,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11766,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11767,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11768,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11769,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11770,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11771,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11772,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11773,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11774,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11775,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11776,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11777,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11778,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11779,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11780,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11781,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11782,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11783,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11789,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11790,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11791,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11793,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11794,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11795,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11805,"impl-Rem%3CT%3E-for-%26Series"],[11806,"impl-Rem-for-%26Series"],[11807,"impl-Rem%3CT%3E-for-Series"],[11836,"impl-Sub-for-%26Series"],[11837,"impl-Sub%3CT%3E-for-%26Series"],[11838,"impl-Sub%3CT%3E-for-Series"],[11839,"impl-Sub-for-Series"],[11875,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11876,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11877,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11878,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAA0AEAAAAMkQFBFPEVIRUxFUEVURVhFbEV4RYxFkEYoR4RQ=","e":"OzAAAAEAAMgilQQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAFAF8ABABlAAYAbQAAAHAABAB2ABUAjQAAAI8AAACRABAAowAAAKYAAwCrAAIAsgANAMEAFQDZAAgA4wAKAO8AAADxAAEA9QAdABkBFQAxARMARgEHAE8BDQBfAQEAYwEBAGYBCwBzAQ0AgwECAIsBEQCeAQMApQECAKkBAgCtAQYAtQEAALoBHgDeAQcA6AEIAPIBNQArAhUAQgIEAEgCBABOAgUAWAICAFwCGgB4AgcAhAIRAJgCEACrAg0AugIOAMwCBgDWAgAA2QIAANsCAQDiAgAA5gIHAPACAgD0Ag0AAwMAAAUDKAAwAwIANAMjAFsDNQCTAwgAoAMRALUDXAAfBBIAPQQHAEYESQCTBA4AowQBAKYEGQDBBAAAxAQOANYEAgDcBAIA4QQcAP8ECQAKBQoAIAUAACIFAAAnBQ0ANgUPAEoFEgBfBQAAYQUJAG0FAwBzBQEAdwUNAI4FAACQBQAAmAUHAKEFBwC2BQEAugUAAL0FAwDFBQUAzAUEANgFCwDrBQQA8gUNAAIGBgAMBgcAFQYBABkGFwAyBgcAOwYAAD0GAABABgIARgYQAFgGAABbBgQAYQYBAGQGAQBnBggAcQYBAHQGBQB8BgEAfwYAAIEGAQCEBgMAiQYEAI8GAgCTBgMAmQYAAJwGAAClBgAAqgYAAK0GAQCyBgEAtQYAALgGAQDBBgAAxwYDANMGBgDdBhAA8AYFAPgGCAADBwMACAcBAAwHAAAOBwEAFAcFAB0HAgAnBwEAMwcAADUHAQA4BwEAPAcAAD4HAABCBwAARAcAAEkHDABYBwIAZwcAAGkHBwByBwEAdQcAAHkHAAB7BwMAgAcBAIMHBQCPBx8AsAcBALQHBAC6BwMAzgcDANMHCADdBwQA5AcCAOgHBQDwBwAA8gcOAAUIAQAJCAAACwgAABAIAQATCAAAFQgAABcIBgAfCAAAIQgAACQIAQAoCAAAKggBAC0IAAAvCAIAMwgNAEIIAABECAEARwgAAEkIAQBMCAAATggBAFEIAABTCAEAVggDAF0IAABhCAEAZQgAAGgIAABqCAAAbAgDAHEIAAB0CAgAfggCAIMIAwCICAAAiggCAI8IAACRCAIAlQgBAJsIAwCgCAEAowgAAKUIAQCoCAAAqggBAK0IAACvCAEAsggAALQIAQC3CAAAuQgAALwIJwDlCBgA/wgDAAQJbAByCQEAdwmAAPkJCQAECqMAqQoFALEKOQDsChUAAwsDAAoLAQAYCwQAIAsCACQLAAAmCwEAPwsBAEMLAABJCwcAVAsAAFcLAgBbCwUAYgsGAGoLBQBxCwAAcwscAJULDwCnCy8A2AsAAAcMCQASDAAAFAwAABYMAgAaDAMAHwwBACQMAAAmDAcALwwBADMMAgA4DAMAPQwAAEAMCwBNDAIAUgwAAFUMDwBmDAAAaQwLAHYMEACIDAIAjAwAAI4MDgCeDAAApgwAAKgMAQCuDBEAwgwAAMQMAwDKDCMA8AwBAPUMbABjDTUAmg0BAJ0NOwDaDQEA3Q0IAOcNAADpDQEA7A0EAPINAQD3DQAA+Q0CAP0NCgAJDgAACw4EABIOBAAYDgQAHg4SADIOEQBFDgAARw4BAEoOBwBVDgUAXA4YAHgOAAB7DgsAiQ4DAI4OAACUDgsAoQ4JAK4OEADIDgEAzA4CANAOAADSDgAA1w4DAOkOAADwDgAA8g4AAPQOAQD7DgwADg8CABYPAAAZDwEAHg8AACcPAQAqDwAANw8BADsPAABCDwAATA8CAFAPAABTDwAAVQ8BAF0PAABfDwQAZw8GAHAPCgB8DwAAfw8BAIQPBACRDwEAlA8GAKYPAwCsDwIAsA8QAMMPHQDjDwsA8A8AAPIPAQD1DwYA/w8JAAsQAwAQEAgAGhACAB8QDgAwEAsAPRAUAFQQAABXEAIAWxAjAIAQBwCJEA4AmRACAJ0QCgCpEAEArBADALEQAwC2EAkAwRAHAMoQAQDNEBwA6xAoABURBgAhEQEAJBEAACYRAAAoEQIALREAADERBwBBEQ0AUBEBAFcRAwBcEQEAYBECAGURAABnESAAixEMAJoRBQChEQcAqhEjANARDgDgEQ8A8hEAAPQRAwD7EQUABRIOABYSBgAfEgAAIhIJAC0SAQAxEgQANxIFAD4SAABDEgkAThIBAFISBABYEgEAWxIKAGcSAABqEgAAbBIJAHcSAgB/EgkAihIFAJQSAACXEgAAoBICAKcSAACqEgEAsBIIALoSAAC8EgAAvhIAAMASEQDVEgcA3hIBAOESBQDrEgQA8xICAPcSAQD+EgUABRMBAAgTCQATEwAAFhMDABsTCAAlEwAAJxMCACwTAAAvEwAAMRMCADYTAgA6EwUAQRMEAEcTAwBOEwIAVBMAAFYTAQBaEwAAXBMEAGMTDwB0EwAAdxMBAHoTAwCAEwQAiBMlALATAACyEwEAthMAALgTAQC8EwAAvhMBAMITAADEEwUAzRMCANITAADVEwAA2BMAANoTAgDeEwIA4hMLAPATBwD5EwAA+xMAAP8TAQADFAAABRQAAAcUAQAKFAEADRQBABIUAQAVFA0AJhQFAC0UBwA3FAIAOxQJAEkUAQBMFAAAThQBAFEUBABXFAQAXRQCAGEUAABjFAQAaRQAAGsUBgBzFAQAeRQBAHwUAgCAFAEAgxQBAIYUAACIFAAAixQAAI0UAgCSFAMAlxQHAKEUAgCoFAEAqxQGALMUAwC5FAAAuxQAAL4UAADAFAQAxhQCAMoUAADMFAIA0BQAANIUBwDbFAgA5hQTAPsUAgD/FBUAGBUBABsVDwAtFQAALxUCADQVDABCFQAARBUCAEkVAQBNFQEAUhUIAFwVAwBkFQYAbBUJAHgVAwB9FQgAhxUAAIkVAgCOFQIAlRUFAJwVEgCxFQAAsxUBALcVAAC5FQEAvRUAAL8VAQDDFQAAxRUEAMwVAwDRFQEA1BUBANoVCgDmFQAA6RUGAPIVAgD2FWEAWhYGAGYWAABoFgAAaxYGAHQWAAB7FgAAfRYAAIEWAACEFgAAiRYFAJMWAACXFgAAnhYAAKIWAACuFgIAshYIALwWAAC+FgEAwRYCAMgWAQDLFgQA0RYBANkWCgDmFgAA6BYAAOsWAADtFgAA7xYAAPEWAADzFv0A8hcCAPYXAQD5FwAA+xcCAAEYAAAFGAAACRgAAAsYAAANGAAAExgAABUYAQAYGAAAIhhRAHUYDACDGL8ARBkBAEoZAgBQGQIAVhkKAGUZBABrGQAAcRkAAHMZAAB9GQEAgRkAAIMZAACHGQAAihkBAI0ZAACRGQEAoxkAAKgZAgCuGQAAsBkFALgZKgDnGQgB8hoAAPcaAQD6GgMAARsAAAMbAwALGwgAFRtmAH0bDgCRGwEAlhsBAJkbAACdGwAAnxsAAKEbAgClGy4A1RsWAO0bDgD/G7UAuRwAAMEcAADDHAEAxhwAAMgcAADMHAAA0BwAANIcAADWHAAA2RwAANwcAADjHAAA5hwCAO0cBgD1HAEA+BwAAPocAwADHQAABR0AAAcdAQAMHWwAfR0AAIkdAQCtHQAAtR0AAL4dAADaHQIA3h0JAOsdBgDzHQMA+B0AAAAeAwAKHgAAEB4DABoeAAAfHgAAKh4AADEeCQA8HgAAQx4AAEYeAABIHgAASx4BAFQeAQBZHgIAXx4FAGYeAgBqHgEAbh4CAHIeAAB0HgAAdh4AAHseAACBHgAAhB4BAIceAwCMHgAAjh4BAJQeAwCbHgEAnx4AAKoeAACsHkMA8x4DAPseAAD9HgAA/x4EAAYfAAAIHwAACh8BAA0fAAAQHwEAFR8AABgfggCdHwAAoh8BAKUfAQAoIAEALCAAAC4gBgA4IAUAPyADAEQgAwBKIAAATCABAE8gAABRIAEAVSABAFwgAABjIAAAZSABAGkgAgBtIAMAcyACAHggAAB6IAAAgSABAIQgAgCOIAAAkSABAJQgAgCaIAIAoCABAKggAwCuIAEAsiACALYgAwC8IA4A0CAAANYgAQDdIAAA4CAFAOkgAADxIAQAACEAAAohAAARIQAAEyECABchAAAaIQAAHyEAACEhAAAjIQAAKCEAACwhAAAuIQIANSEGAEIhCABQIQAAUiEAAFYhAABcIQAAXiEEAGchAQBqIQEAbSEAAHAhCAB7IQEAfiEAAIEhAQCFIQAAiSEAAJIhAACVIQEAnCEBAKIhAQClIQQAsCECALghAQC/IQIAwyEEANEhAADTIQQA2SEFAOAhAADmIQMA6yEAAO0hAgDzIQAA9SEAAAEiAAAEIgEAByIBAAoiAwAQIgYAGCIEAB4iAAAjIgAAKSIAAC8iAQA1IgAAOSIAADsiAAA9IgEAYCIAAGUiAABoIgAAbiIDAHMiBAB6IgEAhCIAAIgiBACOIgQAliIAAJgiAQCbIgAAnSIAAJ8iAQCjIgAApSIAAKciAwCuIgAAtyIAALkiAAC7IgAAwSIDAMoiAQDNIgAAzyIAANEiAADUIgAA1iIAANwiAgDgIgIA5CIHAO0iAADvIgAA8yIAAPkiAAD9IgAAAyMAAAcjCgAUIwIAGSMAABwjAgAnIwEAOCMAADojAAA9IwIAQSMDAEYjAgBKIwAATSMAAFEjYQC1Iw4AxyMBAMwjDADaIwAA3CMBAN8jkABxJH4A8yQAAPYkAwABJQIABiUQABglfQCXJQAAnyUAAKQlAACmJQAAqCUAAK4lBQC1JQEAuSUBAL0lAADBJQAAxyUBAMolAADMJX4AUSYDAFomAABdJgAAXyYAAGMmAQBnJgEAaiYAAHImAAB2JgEAfCYAAIImAACMJgAAkyYBAJ4mAwClJgEAtCYAALYmAAC6JgAAvCYAAMQmAQDHJgEAzSYAANomAADgJgAA4yYAAOYmAADtJgAA8iYAAP4mAAABJwEABCcAAAYnAQANJwAADycBABQnFAAqJwEAMScBADQnDQBDJwQASScwAHwnAAB+JwAAgCcBAIMnAQCGJwYAjic/ANAnAQDTJwgA3icFAOUnCQDwJwEA8ycAAPcnAAD5JwMA/icBAAEoBQALKBIAHygBACIoAgAnKAAAKygWAEMoFwBfKAQAaCgTAH0oBgCUKAAAoigCALgoAAC/KAgAzCgAAM4oDADcKAIA4CgSAPQoAQD3KA8ACCkZACQpAAAmKQIAKykKADcpAQA6KQYAQikDAEcpAgBLKQAATikGAFYpBABdKQIAYSkFAGkpAABrKQ4AfikBAIIpAACEKQAAiSkBAIwpAACOKQAAkCkEAJYpAACYKQAAmykBAJ8pAAChKQEApCkAAKYpAgCqKQ0AuSkAALspAQC+KQAAwCkBAMMpAADFKQEAyCkAAMopAQDNKQMA1CkAANgpAQDcKQAA3ykAAOEpAADjKQMA6CkAAOspCAD1KQIA+ikDAP8pAAABKgIABioAAAgqAgAMKgEAEioDABcqAQAaKgAAHCoBAB8qAAAhKgEAJCoAACYqAQApKgAAKyoBAC4qAAAwKgAAMyoSAEcqBwBRKgAAVCoRAGcqCABxKgEAdCoIAH4qAACAKgEAhioBAIkqBACSKgEAmyoCAKEqAACjKgAArSoAALwqAwDEKgoA0CoAANIqCADdKvEA0CsBANMrGgDvKwEA8isQAAUsEgAZLAAAGywgAD0sAQBBLAAAQywLAFAsAgBXLAAAZywDAHssBQCDLAAAhywBAI4sAACQLAEAlywGAKAsAACmLAoAuiwFAMEsAADDLAMAyCwFANEsBADYLAEA3CwAAOIsBADrLAIA7ywKAP0sAgABLQAABS0CAAktAwARLREAJi0BACktAQAuLQEAMi0CAD8tAwBGLQQATC0AAE8tAQBSLTAAhi0AAIgtAACMLQAAji0AAJAtAQCTLQAAmS0BAJwtAwCkLQUAsS0CALUtAAC4LQAAvS0CAMEtAADDLQAAxy0AAMwtAwDRLQAA1C0JAN8tKQALLgEADi4BABIuAQAXLgAAGS4AAB0uAwAjLgEAJi4AACkuAgAvLgEAMi4AADQuAAA2LgAAOi4AAD0uAwBGLgAATi4AAFEuAQBULgEAYS4HAG0uBABzLgEAeS4AAHsuAACALgMAii4AAI0uAwCSLgAAli4LAKMuAAClLgAApy4EAK0uHQDMLgAAzi4PAOAuAQDkLg8A9S4BAPguBAA="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNMHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNNMMNNNNNNMMMMNMNCMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPFPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIPKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGGPPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFKSHHHNNNNNNNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPPPKKKPFPPPIIGKEEEPIIIPPEPPEEEKEEPPPPPKKPPEPGPPIFEKPPPFGEEIEPKIGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNNMNNNNNNNMMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNNNMNNNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNPPPKPKKGRPPNMMNNNNCNNNNNMMNNNNNNNNMMNNMMNNMMNNNNNNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_binary","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","num_falses","num_trues","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","can_have_dtype","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","","","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_or_infer","get_or_infer_with","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","gt_eq","","","","","hash","","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","last","leaf_dtype","lt","","","","","lt_eq","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","max_binary","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_binary","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","","","new_dimension","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","num_falses","num_trues","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","rechunk_and_trim_to_normalized_offsets","remainder","","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","sum","sum_reduce","","take_unchecked","","","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_fixed_size_list","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","align_chunks_par","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","apply_unary_elementwise","arg_sort","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_apply_unary_elementwise","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_str","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","try_from","try_into","type_id","vec_hash","","vec_hash_combine","","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Equiprobable","","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","","Midpoint","","NamedFrom","NamedFromOwned","Nearest","","NewChunkedArray","NoData","NonExistent","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","method","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_cyclic_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","materialize_unknown_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompareEq","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","first","","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","last","","len","","limit","","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","or_reduce","","phys_iter","product","quantile_reduce","","rechunk","rechunk_validity","","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_sub_owned","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Add","Div","FloorDiv","LhsNumOps","Mul","NumOpsDispatch","NumOpsDispatchInner","NumericListOp","Output","Rem","Sub","__clone_box","add","add_to","","","borrow","borrow_mut","checked","clone","clone_into","clone_to_uninit","deref","deref_mut","div","divide","","","drop","execute","fmt","from","init","into","mul","multiply","","","rem","remainder","","","sub","subtract","","","to_owned","try_from","try_into","type_id","vzip","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","merge_dtypes_many","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[450,"polars_core::chunked_array::arithmetic"],[478,"polars_core::chunked_array::builder"],[586,"polars_core::chunked_array::builder::list"],[740,"polars_core::chunked_array::cast"],[768,"polars_core::chunked_array::collect"],[782,"polars_core::chunked_array::float"],[784,"polars_core::chunked_array::from_iterator_par"],[788,"polars_core::chunked_array::iterator"],[825,"polars_core::chunked_array::iterator::par"],[827,"polars_core::chunked_array::metadata"],[1113,"polars_core::chunked_array::object"],[1190,"polars_core::chunked_array::object::builder"],[1214,"polars_core::chunked_array::object::registry"],[1243,"polars_core::chunked_array::ops"],[1373,"polars_core::chunked_array::ops::arity"],[1409,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1411,"polars_core::chunked_array::ops::gather"],[1414,"polars_core::chunked_array::ops::row_encode"],[1423,"polars_core::chunked_array::ops::search_sorted"],[1452,"polars_core::chunked_array::ops::sort"],[1459,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1460,"polars_core::chunked_array::ops::sort::options"],[1535,"polars_core::chunked_array::temporal"],[1536,"polars_core::chunked_array::temporal::conversion"],[1539,"polars_core::config"],[1543,"polars_core::datatypes"],[3063,"polars_core::datatypes::categorical"],[3206,"polars_core::datatypes::categorical::revmap"],[3260,"polars_core::datatypes::categorical::string_cache"],[3279,"polars_core::datatypes::enum_"],[3297,"polars_core::datatypes::revmap"],[3303,"polars_core::datatypes::string_cache"],[3307,"polars_core::error"],[3374,"polars_core::error::PolarsError"],[3378,"polars_core::error::constants"],[3381,"polars_core::export"],[3388,"polars_core::fmt"],[3419,"polars_core::frame"],[3708,"polars_core::frame::column"],[3945,"polars_core::frame::explode"],[3973,"polars_core::frame::group_by"],[4209,"polars_core::frame::group_by::GroupByMethod"],[4210,"polars_core::frame::group_by::GroupsProxy"],[4212,"polars_core::frame::group_by::aggregations"],[4225,"polars_core::frame::group_by::expr"],[4228,"polars_core::frame::row"],[4324,"polars_core::functions"],[4326,"polars_core::hashing"],[4356,"polars_core::prelude"],[4987,"polars_core::prelude::PolarsError"],[4991,"polars_core::prelude::default_arrays"],[4997,"polars_core::prelude::list"],[5020,"polars_core::prelude::null"],[5051,"polars_core::prelude::revmap"],[5057,"polars_core::prelude::slice"],[5060,"polars_core::prelude::string_cache"],[5064,"polars_core::prelude::utf8"],[5068,"polars_core::random"],[5069,"polars_core::scalar"],[5109,"polars_core::scalar::reduce"],[5110,"polars_core::schema"],[5134,"polars_core::series"],[5589,"polars_core::series::amortized_iter"],[5613,"polars_core::series::arithmetic"],[5664,"polars_core::series::arithmetic::checked"],[5672,"polars_core::series::ops"],[5698,"polars_core::utils"],[5907,"polars_core::utils::flatten"],[5912,"dyn_clone::sealed"],[5913,"num_traits"],[5914,"num_traits::cast"],[5915,"polars_error"],[5916,"polars_core::series::arithmetic::borrowed"],[5917,"polars_core::frame::group_by::proxy"],[5918,"core::option"],[5919,"core::iter::traits::iterator"],[5920,"polars_utils::pl_str"],[5921,"core::ops::function"],[5922,"core::marker"],[5923,"alloc::string"],[5924,"polars_core::datatypes::dtype"],[5925,"polars_arrow::array::binview::view"],[5926,"polars_core::datatypes::aliases"],[5927,"polars_core::chunked_array::metadata::md_trait"],[5928,"alloc::boxed"],[5929,"polars_core::series::arithmetic::borrowed::checked"],[5930,"polars_arrow::array"],[5931,"alloc::vec"],[5932,"compact_str"],[5933,"core::iter::traits::double_ended"],[5934,"core::fmt"],[5935,"core::iter::traits::collect"],[5936,"polars_arrow::bitmap::immutable"],[5937,"rayon::iter"],[5938,"polars_arrow::trusted_len"],[5939,"polars_core::datatypes::any_value"],[5940,"polars_utils::index"],[5941,"std::sync::rwlock"],[5942,"polars_core::chunked_array::logical::decimal"],[5943,"core::iter::traits::exact_size"],[5944,"polars_core::series::series_trait"],[5945,"core::slice::iter"],[5946,"core::iter::adapters::map"],[5947,"core::convert"],[5948,"polars_core::chunked_array::metadata::guard"],[5949,"polars_core::chunked_array::metadata::interior_mutable"],[5950,"alloc::sync"],[5951,"core::ops::range"],[5952,"polars_core::datatypes::field"],[5953,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5954,"polars_core::chunked_array::ops::rolling_window"],[5955,"polars_utils::aliases"],[5956,"polars_utils::hashing"],[5957,"ndarray::aliases"],[5958,"either"],[5959,"core::result"],[5960,"core::any"],[5961,"polars_core::chunked_array::arithmetic::numeric"],[5962,"polars_core::chunked_array::builder::string"],[5963,"polars_arrow::array::binview"],[5964,"polars_core::chunked_array::builder::boolean"],[5965,"polars_core::chunked_array::builder::null"],[5966,"polars_core::chunked_array::builder::primitive"],[5967,"core::clone"],[5968,"polars_core::chunked_array::builder::list::anonymous"],[5969,"polars_core::chunked_array::builder::list::boolean"],[5970,"polars_core::chunked_array::builder::list::primitive"],[5971,"polars_core::chunked_array::builder::list::binary"],[5972,"polars_core::chunked_array::builder::list::null"],[5973,"core::hash"],[5974,"polars_arrow::array::boolean"],[5975,"polars_core::chunked_array::metadata::env"],[5976,"polars_core::chunked_array::metadata::collect"],[5977,"bitflags::iter"],[5978,"std::fs"],[5979,"std::sync::mutex"],[5980,"polars_arrow::datatypes"],[5981,"polars_arrow::bitmap::utils::iterator"],[5982,"polars_arrow::bitmap::utils::zip_validity"],[5983,"polars_arrow::offset"],[5984,"polars_arrow::array::static_array"],[5985,"core::error"],[5986,"polars_arrow::array::primitive"],[5987,"polars_row::row"],[5988,"polars_arrow::array::binary"],[5989,"polars_arrow::legacy::array::slice"],[5990,"chrono::naive::datetime"],[5991,"alloc::borrow"],[5992,"polars_arrow::array::static_array_collect"],[5993,"bytemuck::zeroable"],[5994,"polars_core::chunked_array::logical::categorical"],[5995,"polars_core::chunked_array::logical::categorical::merge"],[5996,"polars_core::chunked_array::logical"],[5997,"polars_core::datatypes::time_unit"],[5998,"polars_arrow::datatypes::reshape"],[5999,"core::cmp"],[6000,"polars_arrow::types"],[6001,"polars_arrow::datatypes::physical_type"],[6002,"core::borrow"],[6003,"polars_arrow::pushable"],[6004,"polars_core::datatypes::into_scalar"],[6005,"polars_core::chunked_array::logical::categorical::builder"],[6006,"polars_core::chunked_array::logical::categorical::revmap"],[6007,"polars_core::chunked_array::logical::categorical::string_cache"],[6008,"polars_core::chunked_array::logical::enum_"],[6009,"polars_error::warning"],[6010,"polars_arrow::datatypes::schema"],[6011,"polars_core::series::from"],[6012,"polars_core::chunked_array::ndarray"],[6013,"polars_arrow::record_batch"],[6014,"polars_arrow::array::struct_"],[6015,"polars_core::frame::column::scalar"],[6016,"polars_core::series::iterator"],[6017,"polars_utils::idx_vec"],[6018,"rayon::iter::plumbing"],[6019,"polars_core::frame::group_by::into_groups"],[6020,"core::iter::adapters::copied"],[6021,"core::iter::adapters::zip"],[6022,"polars_arrow::legacy::kernels::rolling"],[6023,"polars_utils::float"],[6024,"polars_arrow::types::native"],[6025,"polars_core::frame::group_by::aggregations::agg_list"],[6026,"polars_core::frame::row::av_buffer"],[6027,"polars_core::hashing::identity"],[6028,"polars_core::hashing::vector_hasher"],[6029,"core::alloc"],[6030,"std::os::fd::owned"],[6031,"std::os::fd::raw"],[6032,"std::ffi::os_str"],[6033,"std::path"],[6034,"core::mem::maybe_uninit"],[6035,"polars_arrow::legacy::kernels::time"],[6036,"core::default"],[6037,"core::ffi::c_str"],[6038,"polars_arrow::scalar"],[6039,"std::io::error"],[6040,"regex::error"],[6041,"alloc::collections"],[6042,"simdutf8::basic"],[6043,"alloc::ffi::c_str"],[6044,"polars_arrow::legacy::array::default_arrays"],[6045,"polars_arrow::buffer::immutable"],[6046,"polars_arrow::array::list"],[6047,"polars_core::named_from"],[6048,"polars_core::chunked_array::ops::aggregate"],[6049,"polars_core::chunked_array::ops::aggregate::quantile"],[6050,"polars_arrow::legacy::index"],[6051,"core::pin"],[6052,"core::io::borrowed_buf"],[6053,"std::io"],[6054,"polars_core::chunked_array::ops::aggregate::var"],[6055,"alloc::collections::btree::map"],[6056,"polars_arrow::legacy::array::list"],[6057,"polars_arrow::legacy::array::null"],[6058,"polars_arrow::bitmap::mutable"],[6059,"polars_arrow::array::utf8"],[6060,"polars_schema::schema"],[6061,"alloc::rc"],[6062,"polars_core::series::arithmetic::list_borrowed"],[6063,"polars_core::utils::supertype"],[6064,"polars_arrow::legacy::utils"],[6065,"polars_arrow::legacy::trusted_len::rev"],[6066,"core::iter::sources::repeat"],[6067,"core::iter::adapters::take"],[6068,"polars_core::chunked_array::object::extension"],[6069,"polars_error::constants"],[6070,"polars_core::frame::horizontal"],[6071,"polars_arrow::legacy::prelude"],[6072,"polars_arrow::legacy::array"],[6073,"polars_arrow::legacy::array::utf8"],[6074,"polars_core::utils::any_value"],[6075,"polars_core::utils::schema"],[6076,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kj000l00000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`000000100000000000`00000000000000000000000000000000100001000000000000000000`00000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000``00000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`A@`00000000000000000000000000````````A@dA@hA@jA@lA@b432140043143214321432143214321432143214321044AA`AAb5436543AAd00076547654`7654365476547654765476547654````````AAf0AAhAAjAAl0AAn43AB`ABb4ABd47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Ff00000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdInGd0Ib`3L`22````````42110Lb4ACh43434343434344334343215604321560431150431504315043ACj054542654332671543267154541Fb7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000If1111`111111110011111111111111111111``111111101111111110Ih2222222222`AEf0000000000000000000000````AEj00AEl00000001```00`0`10000AG`````````````````````````````0AFf``AGbAHb33333CEb4044AFb4AFh055AFj0AFl`88AFn00999999977AGd0`AGhAGj`<<`AGlAGn`AH`0<<????AHdAHf>><<AHh==:AHjAGb0:2AHlAHn`AI`0`0AIbAId`AFj0AIfAFbAIhAIjAIlAG`000AFl61`AIn`AJhAJdAJ```````````````````````````````````````````````AKb00`0`00000000000000000`00000`````AKd0````EfEl1010101010101010101010110010110010101010101010221010101010101010010010````````AMl`Cb``````HnE`ADj`1``2`0210```21````2`````100`1`2100``0`10`2120```0040210``210```BCd`4CEdCEf````AOj``8``654``654``654``654``4`777444BCf765``4``5AOlAN`1010A`:98`:9`:``;3;```````````B@h``35`=;:`;`9:99```90`;:9``;:9``;:9``;:9``9:9`99AJb0=0AMhAMj>AMl>AMnMj8ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlEbJdGh0Db00En00HnjJbLlMbMdM`D`CnDfDjAnEb?>=AEhGh0220020DbEn344AKnAL`43243232664325643253432AK`54305436ALb0ALd06HnE`MjALfAJb><<<<<<AMhCEhBnjJbIdAMj;AMl;AMn;AN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMhCEhBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlE``HnAMf012EbGhDbEnAK`5Jd54321`JbLlMbMdM`D`CnAMhAMjHnAMlE`AMnMjAN`ANbANd?>ANfANh?>=<ANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMhAMjHnAMlE`AMnMjAN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMhAMjHnAMlE`AMnMjAN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOl3MjB@`0005E`00`HnAMl26AMh0CEhBnjJbIdAMj879AMn<AN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMh0CEhBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlJdjJbLlMbMdM`D`CnAMhCEhBn:9IdAMjHnAMlE`AMnMjAN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMfJdHnMj0`1AMlE`0AMn3AN`;:985EbGhDb0En0321100997766558844??>>==<<3AMh3121AEhAMd6431AMj==;::9<88AOhAOj0ADjAOl;7CEhBnjJbId9Hn00000AMlE`000AMnMj00AN`0ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADj00AOlE`Eb00GhDb0En0AEh32104432211AK`01432154433225432143214AJb00654312065431260;:JdAMf08765341008765348CbjJbIdANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfEbAEh0AOj0HnBAfAJb5DbAK`7Gh2En2813300133006AMlE`MjAN`;ADjAOl<<4AMhCEhBnjJbIdAMjHn=<AMn<;ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlEbE`3AMhCEhBnjJbIdAMjHnAMl9AMnMjAN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMhBAh0EbGhDbEnAK`AEhBAjJd8HnE`0010000101000010=101010=0001000010=AJb019887798877``1AMl2:8:98:AKnAL`10`<:<;:<6jJbLlMbMdM`D`CnDbEnMj0CEdCEfBBn55554444AEh04AOhAOj02EbGh:9AK`555AMhAMn3343==<<43==<<33404=4=HnAN`83Jd4AKnAL`1089jJbLlMbMdM`D`CnEbGhDbEnAK`AEh`JdAMh65465465477Mj87654387654376547654AKnAL`Hn0`5jJbLlMbMdM`D`CnGh0EnEb0Db022E`MjAN`203ADj505AMhAMjHnAMl7AMn76ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlE`2JdAMhHn3AN`7En2Eb0ALb0ALd0B@`00067CEhBnjJbIdAMj<AMlE`AMnMj?ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOh0AOjADjAOlAMhCEhBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlHnE`10AN`5EbAMhCEhBnjJbIdAMj:AMl:AMnMj;ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOl1GhDbEnAEhAJb0E`1AKnAL`7BB`BBbB@dBBdBBfBBhBBjBBlBAh:9?>AK`>Gh:98765432<;DbEn3AEhAMhCEhBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdLlMbANfANhMdM`D`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlCEdCEfBBnEhAJbHnEb`````BCd`BCf10`AMb00BC`10010BChBCb32103`3333021032103221033333333AMd31321444444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCn0000`00`0000000`0`BD`0000000000000000`8787`````BDdAKj000Ah`112101```11111112BDb3030`3003030`300300`3030`0``````0303003030CEjCEl10```````````BDh0000000000`0`````00`````00000BEb`0BE`11``0``01BCl00000000000000000000BFfBFh34210342222342342342`222421034210342222103422222222224222442`2222223422103422222222222222222`22242222222222222210342210342102222222222222222222222221022222222222222222`2222222222222222222102222222222222222222342222221034222221034221034222222210342222222``Ej0`0BGh1111111111111111111011110111111111110101010101110101011101011111101101111111111111101011101111111111011111110101BDn122212222222211222222222212121222222222222221221222122222222122222221222212212222222212222221222222212222222122122222`BGn00000000000000000000000000`BHd0``0``````BHlAl`2`22222222210`222BH`1BEj40`1023BIfBHhBHf4537621045374537453745373456210045376210453731621044537454455`643445377`62104445537445335BI`04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CEnCF`0``````````BJbBJd0`BJf0BJhBJj``101010101010`10101010BEh211210210210210210`0210210210000022110`2102102121021```210210210210210`````````BJl000000000000BJn000111111`````````BGb````````````AKj00`0Bh0BO`CFbN`Ah6```BCd`326```````6```4BCf`43``````14343``43`7`5BLf````381``````BIl```71`````99`99``9``9`9``0``8OfBL`LdNb>B@l:5BLbBLd84444????4?44AKjBh08766BO`6BGb6N`<65=43;:928170<65=`98BKn04<;:9281=76>4<;:9281=76>4<;:9281=76>4:B@`0005;66``8;;5;;;;:392`655=<;;4:392>87?65=<;4:392>87?;`;;;65=<;;4:392>87?995=;;;:392>87?55==;;339922??<AMd<7766>=<<<;4:3?98BLf<8888877777??>==================6<5;4BIl;:1BNfBNjBNl;;;;;;;;LdCFd0000111==<=BOb222Fn3?3=B@l=9Of55`AKjBh2BL`8BO`NbBGb7N`BIlBLbBLdBLf;8:9;8Ld876=5432100000:9<=0<0BEf1`1``1BOl0BOnB@l6;2204C@`C@b6266666666666`OfBL`Bh999````;7799699999`9`AKd0:C@n3`;994243;NbBGb9N`BIlBLbBLdBLfAKj:LdB@`0002<>=11BO`:9B@l987654>OfBL`53=<2;:987C@`666666667Bh77803275?>4=<;:97`C@n914386NbBGb7N`BIlBLbBLdBLf?66<AKjLd:::0CEjCEl10```BNfBNjBNl`CAh000000000000000000000`CAl00000000000000000000000000000`BCdBCf10``AKd0``````CFfCFh``Kn000000000000000000000000000000`0000000`CBn0`````BDlCBj101012101010101Jn0``00```BGj11````01AfBOh0111111`0010000`10001001001110000001CCb3420342111222211221211224214242222034220342222220342111142222222224422222211211142220342222222222222222222222222222222222222222212221111111122222214222222`2034203422220BFj322333322003333222322333333333322223222232233332232223333333333333333333333333333333333333323133333332`223322222333233252233332223312332223222233333333223322223333533333333333145333333333314533333333333331453333322322222145333223``Cj000000000000000000000CCj00`0```CCf1110CChAj033`33333210033333321002100210033333``BKnFh0100CCl0`00000000000000000000000CCn0``````````0CD`CDd```````211````22222222CDlAKf43210432CDb543543543``CDf06``6653322654322654632654``636533665565`6666653265546666226CDj337333````4764376577743765375BFn6888383``3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{Cb{}{{Bl{Bn}}{C`{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cf{B`}{{Cd{B`}}}}Ch}}{{{f{{l{j}}}}c}{{l{j}}}{{Cl{Cj}{{Cd{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cl{{B`{Cj}}}{{Cd{{B`{c}}}}}}Ch}Cb}{{{f{{l{Cn}}}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{{l{D`}}}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{c}}}}e}DbCb{{Cl{{f{BjDd}}}}}}{{{f{{l{c}}}}{f{Cf}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cf}}}{{l{e}}}A`Cb}{{{f{Bj{l{c}}}}e}bA`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cl{{f{Dh}}}{{Cd{{f{Dh}}}}}}}}{{{f{{l{Dj}}}}c}{{l{Dj}}}{{Cl{{f{{Dn{Dl}}}}}{{Cd{{f{{Dn{Dl}}}}}}}}}}{{{f{{l{c}}}}E`g}{{l{i}}}Cb{}{{Cl{}{{Cd{e}}}}}Cb}{{{f{{l{j}}}}{f{Cf}}}{{Ah{Eb}}}}{{{f{{l{c}}}}g{f{Bj{Dn{e}}}}}bA`{}{{Cf{B`{f{e}}}{{Cd{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cl{Ed{f{Dh}}}{{Cd{Ed}}}}Ch}}{{{f{{l{c}}}}Ef}EhA`}{{{f{{l{c}}}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}A`}{{{f{{l{c}}}}}{{Ah{Eh}}}A`}`{{{f{{l{Df}}}}}En}{{{f{{l{c}}}}}{{f{{l{c}}}}}Cb}{{{f{{l{c}}}}}{{f{E`}}}Cb}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}CbCb{{Cl{{B`{Cj}}B`B`}{{Cd{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eF`{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{{l{c}}}}}{{Fd{Fb}}}Cb}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cf{}{{Cd{}}}}Ch}A`}{{{f{{l{c}}}}{f{E`}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{E`}}Ff}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Fh}{{{f{{l{c}}}}e}{{Ah{Af}}}FhAd}{{{f{{l{c}}}}}FjCb}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fl}}}}}}}Cb}{{{f{{l{c}}}}}{{f{{G`{Fn}}}}}Cb}{{{f{Bj{l{c}}}}}{{f{Bj{G`{Fn}}}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Cb}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{CbA`}}`{fGb}{{{f{{l{c}}}}}{{Ah{{f{Dn}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Gd}bCb}{{{f{Bj{l{c}}}}{f{{l{e}}}}Gd}bCbCb}{{{f{{l{c}}}}}{{`{{Gf{}{{Bb{{f{Dn}}}}}}}}}A`}{{}{{l{c}}}Cb}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}}bCb}{Flb}0{{{f{{l{c}}}}}{{l{c}}}Cb}{{{f{{l{c}}}}}{{f{E`}}}Cb}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}01{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gh}}}{{Ah{{l{c}}}}}{{Cb{}{{Gj{Bn}}{C`{Bn}}}}}}{{{f{{l{c}}}}}B`Cb}{{{f{{l{c}}}}}{{B`{Fl}}}Cb}`{{{f{{l{c}}}}{f{BjGl}}}GnA`}{{{f{{l{An}}}}{f{BjGl}}}Gn}{{{f{{l{c}}}}e}bCb{{Cl{B`}}}}{{{f{{l{j}}}}c}b{{Cl{{B`{Cj}}}}}}{c{{l{e}}}H`{{Cb{}{{Hb{c}}}}}}{cc{}}0{{Bhc}{{l{e}}}Hd{{Cb{}{{Hb{}}}}Cb}}{{{f{{l{c}}}}e}{{l{c}}}{{Cb{}{{Hb{}}}}Cb}Hd}{{Bh{G`{Fn}}}{{l{c}}}Cb}{{Bh{G`{Fn}}E`}{{l{c}}}Cb}{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{c{{l{An}}}{{Hd{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{Hd{}{{Bb{{Hh{G`{B`{Hf}}}}}}}}}A`}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}23{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hj{}{{Bb{B`}}}}}A`}{{Bh{f{Dn}}}{{l{c}}}A`}{{Bh{f{{Dn{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hl{}{{Bb{B`}}}}}A`}{{BhG`}{{l{c}}}A`}{{BhG`{B`{Hf}}}{{l{c}}}A`}{{BhFl}{{l{c}}}A`}0{{{f{{l{c}}}}Fl}{{l{c}}}Cb}{{BhFl{f{E`}}}Eb}{{{f{{l{c}}}}Fl}B`Cb}{{{f{{l{c}}}}Fl}{{Ah{Hn}}}A`}{{{f{{l{c}}}}Fl}HnA`}{{{f{{l{j}}}}Fl}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{I`}}}Cb}{{{f{{l{c}}}}}dCb}{{{f{{l{c}}}}}IbCb}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`Cb}0{{{f{{l{{Id{c}}}}}}Fl}{{B`{{f{If}}}}}Ih}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FldFl}AlF`}{{{f{{l{c}}}}e}GhA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}018{{{f{{l{c}}}}{B`{Fl}}}{{l{c}}}Cb}{{}Fl}0{{FlIj{B`{Il}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{E`}}}}{{{f{{l{c}}}}}{{J`{{In{c}}}}}Cb}{{}c{}}0{{}Ej}{{{l{Jb}}{B`{Fl}}Fl}{{Ah{Jd}}}}{{{l{Jb}}{B`{Fl}}Fl}Jd}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JfJh{Jj{}{{Bb{}}}}GfHl}}}A`}{{{l{c}}}AfCb}{{{f{{l{c}}}}}dCb}{{{f{{l{c}}}}}GhJl}000{{{f{{l{c}}}}}GhCb}02{{{f{{l{c}}}}}JnCb}{{{f{{l{c}}}}}{{`{{K`{}{{Bb{B`}}}}}}}Cb}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}Cb}{{{f{{l{c}}}}}{{Kf{{Kb{Fn}}{Kd{{f{Fn}}}{{Cd{{B`{{f{Hf}}}}}}}}}}}Cb}`{{fc}Gb{{Kh{Dh}}}}{{{f{{l{c}}}}}B`Cb}{{{f{{l{c}}}}}{{B`{Fl}}}Cb}{{{f{{l{c}}}}}{{Kj{c}}}Cb}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{c}}}}}FlCb}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKl}}00{{{f{{l{c}}}}Fl}{{l{c}}}Cb}{{{f{{l{c}}}}e}GhA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}01{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{Dj}}}}}{{B`{{f{{Dn{Dl}}}}}}}}{{{f{{l{c}}}}}KnA`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{c}}}}}{{B`{n}}}F`}{{{f{{l{c}}}}}KnF`}{{{f{Bj{l{c}}}}{In{c}}}bCb}`{{{f{{l{c}}}}}{{L`{c}}}Cb}{{{f{{l{c}}}}}{{f{{Ld{{Lb{c}}}}}}}Cb}{{{f{{l{c}}}}}{{B`{{Lf{Fb}}}}}Cb}{{{f{Bj{l{c}}}}}{{f{Bj{Ld{{Lb{c}}}}}}}Cb}{{{f{{l{c}}}}}{{Ld{{Lb{c}}}}}Cb}=<;{{{f{{l{c}}}}}{{B`{Hh}}}A`};{{Bh{f{{Dn{Dl}}}}FlFl}{{l{An}}}}{{Bh{f{Dn}}}{{l{c}}}A`}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FlCb}{{{f{{l{c}}}}}{{Ah{Fl}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}Cb}{{Bh{Lj{Lh}}}{{l{Ll}}}}{{Bh{Lj{Ln}}}{{l{M`}}}}{{Bhc}{{l{Df}}}{{Kh{{Dn{Dd}}}}}}{{Bhc}{{l{Dj}}}{{Kh{{Dn{{G`{Dl}}}}}}}}{{Bhc}{{l{An}}}{{Kh{{Dn{d}}}}}}{{Bhc}{{l{Ll}}}{{Kh{{Dn{Lh}}}}}}{{Bhc}{{l{Mb}}}{{Kh{{Dn{Il}}}}}}{{Bhc}{{l{Md}}}{{Kh{{Dn{Mf}}}}}}{{Bh{Lj{Il}}}{{l{Mb}}}}{{Bhc}{{l{M`}}}{{Kh{{Dn{Ln}}}}}}{{Bhc}{{l{Jb}}}{{Kh{{Dn{Mh}}}}}}{{Bhc}{{l{D`}}}{{Kh{{Dn{Ij}}}}}}{{Bhc}{{l{Cn}}}{{Kh{{Dn{n}}}}}}{{Bh{Lj{Mf}}}{{l{Md}}}}{{Bhc}{{l{Dj}}}{{Kh{{Dn{{B`{{G`{Dl}}}}}}}}}}{{Bhc}{{l{An}}}{{Kh{{Dn{{B`{d}}}}}}}}{{Bhc}{{l{Ll}}}{{Kh{{Dn{{B`{Lh}}}}}}}}{{Bhc}{{l{Mb}}}{{Kh{{Dn{{B`{Il}}}}}}}}{{Bhc}{{l{Md}}}{{Kh{{Dn{{B`{Mf}}}}}}}}{{Bhc}{{l{M`}}}{{Kh{{Dn{{B`{Ln}}}}}}}}{{Bhc}{{l{Jb}}}{{Kh{{Dn{{B`{Mh}}}}}}}}{{Bhc}{{l{D`}}}{{Kh{{Dn{{B`{Ij}}}}}}}}{{Bhc}{{l{Cn}}}{{Kh{{Dn{{B`{n}}}}}}}}{{Bhc}{{l{Df}}}{{Kh{{Dn{{B`{Dd}}}}}}}}{Bh{{l{{Id{c}}}}}Ih}{{{f{{l{c}}}}FlFl}{{l{c}}}A`}{{Bh{G`{c}}}{{l{{Id{c}}}}}Ih}{{Bh{G`{c}}Hf}{{l{{Id{c}}}}}Ih}{{BhG`}{{l{c}}}A`}{{{Ld{Mj}}{G`{Fn}}I`I`}{{l{c}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}10{{{f{{l{c}}}}}FlCb}{{{f{{l{An}}}}}Fl}0``{{{f{{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Df}}}}}{{`{{Ml{}{{Bb{{B`{{f{Dh}}}}}}}}}}}}{{{f{{l{Df}}}}}{{`{{Mn{}{{Bb{{B`{{f{Dh}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{c}}}}}KnA`}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}nN`}{{Ah{{B`{n}}}}}F`}{{{f{{l{c}}}}nN`}{{Ah{Kn}}}F`}{{BhFln}{{Ah{{l{An}}}}}}{{BhFlnn}{{Ah{{l{c}}}}}A`}{{BhFl}{{l{c}}}A`}{{BhFlnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Cb}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}}{{B`{Hf}}}Cb}{{{f{{l{c}}}}}{{f{Mj}}}Cb}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bCb}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cf}}Nb}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fle}{{Ah{{l{c}}}}}Jl{{Cl{{f{Bj{l{c}}}}}{{Cd{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Il}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}Fldd{B`{Il}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}{{Cf{B`}{{Cd{B`}}}}}}{{{f{{l{c}}}}{f{Gh}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bCb}{{{f{Bj{l{j}}}}E`}b}{{{f{Bj{l{c}}}}I`}bCb}{{{f{Bj{l{c}}}}Jn}bCb}{{{f{{l{c}}}}Ln}{{l{c}}}A`}{{{f{{l{c}}}}LnB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}LnFl}{{l{c}}}Cb}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ef}{{l{c}}}A`}{{{f{{l{c}}}}Ln}{{Hh{{l{c}}{l{c}}}}}Cb}0{{{f{{l{c}}}}Dl}{{B`{n}}}A`}{{{f{{l{c}}}}Dl}KnF`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{An}}}}}{{B`{I`}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}KnA`}{{{f{{l{c}}}}{B`{Fl}}}{{l{c}}}Cb}{{{f{{l{c}}}}{f{Eh}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}Cb{{Kh{{Dn{I`}}}}Nd}}{{{f{{l{c}}}}{f{Eh}}}{{l{c}}}{{Cb{}{{Gj{Bn}}{Nf{Bn}}{Bl{Bn}}}}Cb}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Cb{}{{Gj{Bn}}{Nf{Bn}}{Bl{Bn}}}}Cb}{{Kh{{Dn{I`}}}}Nd}}`{{{f{{l{c}}}}dNh}{{G`{{G`{Nj}}}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{Df}}}}Fl}{{Ah{Af}}}}{{{f{Bj{l{j}}}}E`}b}{{{f{{l{j}}}}}{{Ah{Nl}}}}{{{f{{l{c}}}}}{{Ah{Nn}}}A`}{fc{}}{{{f{{l{Dj}}}}}Db}{{{f{{l{c}}}}}{{G`{B`}}}A`}{{{f{{l{c}}}}}{{O`{G`{G`{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cl{Cj}{{Cd{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cl{{B`{Cj}}}{{Cd{{Ah{{B`{c}}}}}}}}Ch}Cb}{{{f{{l{c}}}}g}{{Ob{Dbe}}}Cb{}{{Cl{{f{BjDd}}}{{Cd{{Ob{be}}}}}}}}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{}{{Cd{{Ob{eg}}}}}}}Cb}{c{{Ob{e}}}{}{}}0{{Bhg}{{Ob{{l{i}}e}}}H`{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{{Cb{}{{Hb{c}}}}Cb}}{{}{{Ob{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{Ah{{B`{Af}}}}}}}}}}{fOd}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}Cb}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}Fl}{}Cb}{{{f{{l{c}}}}Dl}{{B`{n}}}A`}{{{f{{l{c}}}}Dl}KnF`}{{}c{}}0{{Bhc}{{l{e}}}H`{{Cb{}{{Hb{c}}}}Cb}}{{{f{{l{e}}}}c}{{l{e}}}H`{{Cb{}{{Hb{c}}}}Cb}}{{{f{{l{c}}}}{G`{Fn}}}{{l{c}}}Cb}{{{l{c}}Bh}{{l{c}}}Cb}{{{f{{Dn{Of}}}}e}c{}{{Oh{{f{Eh}}}{{Cd{c}}}}}}{{{f{{l{c}}}}Jn}{{l{c}}}Cb}{{{f{{l{c}}}}}eA`{}}{{{l{c}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}3201{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}452301542367543210542310{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gh}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{Cb{}{{Nf{Bn}}}}}}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@b}}}b}{{{f{Bj{A@d{c}}}}}b{A@fNd}}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{{{f{Bj{A@d{c}}}}{B`{e}}}b{A@fNd}{{Kh{c}}}}{{{f{BjA@b}}{B`{c}}}b{}}{{{f{BjA@b}}c}b{}}{{{f{Bj{A@d{c}}}}e}b{A@fNd}{{Kh{c}}}}{{{f{BjA@h}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@d{c}}}}}{{A@d{c}}}{A@fNd}}{{{f{A@h}}}A@h}{{{f{A@j}}}A@j}{{{f{{A@l{c}}}}}{{A@l{c}}}{A`A@n}}{{f{f{Bjc}}}b{}}000{fb}000{Fl{{f{c}}}{}}000{Fl{{f{Bjc}}}{}}000{Flb}000{A@b{{l{c}}}Cb}{{{A@d{Dh}}}Db}{{{A@d{{Dn{Dl}}}}}En}{AA`Db}{AAbEn}{A@hGh}`{{{A@l{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAd{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAd{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dn{c}}}}}AAd{}}{{Bh{f{{Dn{{B`{c}}}}}}}AAd{}}{{}Fl}000{{}c{}}000`{{BhFl}{{A@d{c}}}{A@fNd}}{{BhFl}A@h}{{BhFl}A@j}{{BhFl}{{A@l{c}}}A`}{{{f{BjA@b}}}b}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{fc{}}000{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}000<<<<````````{{{f{BjAAf}}{f{H`}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}}b}{{{f{BjAAj}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hl}}{{{f{BjAAn}}}b}54{{{f{BjAB`}}}b}{{{f{BjABb}}}b}{{{f{BjAAj}}}b}{{{f{BjABd}}}b}{{{f{Bj{AAl{c}}}}}bA`}{{{f{BjAAf}}{B`{{f{H`}}}}}b}{{{f{BjAAf}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAn}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{B`{{f{Dn}}}}}bA`}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjABd}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAl{c}}}}{f{Dn}}}bA`}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{Dh}}}}}}}}Hl}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{B`{{f{{Dn{Dl}}}}}}}}}}Hl}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{Dh}}}}}}}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{f{{Dn{Dl}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAf}{{}AAh}{Fl{{f{c}}}{}}000000{Fl{{f{Bjc}}}{}}000000{Flb}000000{{{f{AB`}}}d}{{{f{ABb}}}d}{{{f{AAj}}}d}{{{f{{AAl{c}}}}}dA`}{{{f{AAn}}}d}{{{f{AB`}}}{{f{Mj}}}}{{{f{ABb}}}{{f{Mj}}}}{{{f{AAj}}}{{f{Mj}}}}{{{f{{AAl{c}}}}}{{f{Mj}}}A`}{{{f{AAn}}}{{f{Mj}}}}{{{f{BjAAf}}}Eb}{{{f{BjAAh}}}Eb}{{{f{BjABd}}}Eb}{{{f{BjAAn}}}Eb}{cc{}}000000{{{f{E`}}FlFlBh}{{Fd{AAn}}}}{{}Fl}000000{{{f{BjAB`}}}Fn}{{{f{BjABb}}}Fn}{{{f{BjAAj}}}Fn}{{{f{Bj{AAl{c}}}}}FnA`}{{{f{BjAAn}}}Fn}{{}c{}}000000{{BhFl{B`{E`}}}AAf}{{BhFl{B`{E`}}}AAh}{{BhFlFl}AB`}{{BhFlFl}ABb}{{BhFlFl}AAj}{{BhFl}ABd}{{BhFlFlE`}{{AAl{c}}}A`}{{BhFlFlE`E`}{{AAl{c}}}A`}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{fOd}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ff}}}Ff}{{f{f{Bjc}}}b{}}{fb}{{}Ff}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{Ff}}{f{Ff}}}d}{{f{f{c}}}d{}}0{{{f{Ff}}{f{BjGl}}}Gn}{cc{}}{{{f{Ff}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{Ff}}}d}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5``{{ABhBh}{{l{c}}}Cb}{{ABj{f{{l{c}}}}}{{l{c}}}Cb}10{{ABjBhE`}{{l{c}}}Cb}0{{ABhBh}{{Ob{{l{c}}e}}}Cb{}}{{ABj{f{{l{c}}}}}{{Ob{{l{c}}e}}}Cb{}}10{{ABjBhE`}{{Ob{{l{c}}e}}}Cb{}}0`{ABlABl}``{{ABnBhE`}e{}{{AC`{c}}}}{{eBhE`}AC`{}{{Hj{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{Flb}0{cc{}}0{{}Fl}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}Gf{}}`{{{f{ACd}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{{ACf{c}}}}}{{Hh{Fl{B`{Fl}}}}}Bf}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}099`````````````````````````{{fh}b}0000{{}Gd}{{}Ib}{{GdGd}Gd}{{IbIb}Ib}{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}3210{{{f{Gd}}}Lh}0{{{f{Ib}}}Dl}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Lb{c}}}}}{{Fd{Fb}}}Cb}{{{f{{Lb{c}}}}}{{Lb{c}}}Cb}{{{f{{In{c}}}}}{{In{c}}}Cb}{{{f{ACh}}}ACh}{{{f{Gd}}}Gd}{{{f{Ib}}}Ib}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{GdGd}{IbIb}{{{f{Gd}}Gd}d}{{{f{Ib}}Ib}d}{{}{{Lb{c}}}Cb}{{}{{In{c}}}Cb}{{}Gd}{{}Ib}{Fl{{f{c}}}{}}{{{f{{L`{c}}}}}{{f{e}}}Cb{}}111111{Fl{{f{Bjc}}}{}}000000{{GdGd}Gd}{{IbIb}Ib}{{}d}{{{f{Fb}}}{{B`{I`}}}}{{{f{{In{c}}}}}{{B`{I`}}}Cb}{{{In{c}}I`}{{In{c}}}Cb}{{{In{c}}{B`{I`}}}{{In{c}}}Cb}{Flb}000000<;5{{{f{Gd}}{f{Gd}}}d}{{{f{Ib}}{f{Ib}}}d}7{{{f{BjGd}}c}b{{Hd{}{{Bb{Gd}}}}}}{{{f{BjIb}}c}b{{Hd{}{{Bb{Ib}}}}}}{{{In{c}}d}{{In{c}}}Cb}{{{In{c}}{B`{d}}}{{In{c}}}Cb}{{{f{{In{c}}}}Gd}{{In{c}}}Cb}{{{f{{In{c}}}}Gd}{{In{e}}}CbCb}{{{In{c}}Ib}{{In{c}}}Cb}{{{In{c}}{B`{Ib}}}{{In{c}}}Cb}{{{f{{In{c}}}}{f{BjGl}}}GnCb}{{{f{ACh}}{f{BjGl}}}Gn}{{{f{Gd}}{f{BjGl}}}Gn}0000{{{f{Ib}}{f{BjGl}}}Gn}0000{cc{}}000000{Lh{{B`{Gd}}}}{Dl{{B`{Ib}}}}{LhGd}0{DlIb}010{cGd{{Hd{}{{Bb{Gd}}}}}}{cIb{{Hd{}{{Bb{Ib}}}}}}{{{f{Dh}}}{{B`{Gd}}}}{{{f{Dh}}}{{B`{Ib}}}}{{{f{{In{c}}}}}{{B`{I`}}}Cb}{{{f{{In{c}}}}}dCb}{{{f{Ib}}}d}{{{f{Fb}}}Ib}{{{f{{In{c}}}}}IbCb}0{{{f{{In{c}}}}}{{B`{f}}}Cb}0{{{f{Bj{Lb{c}}}}}{{f{Bj{In{c}}}}}Cb}{{{f{Ib}}}Jn}{{}Fl}000000{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{{GdGd}Gd}{{IbIb}Ib}{{{f{Gd}}Gd}d}{{{f{Ib}}Ib}d}{{}c{}}000000{Gdc{}}{Ibc{}}{{{f{Gd}}}d}{{{f{Ib}}}d}{{{f{{In{c}}}}}dCb}21{{{f{{In{c}}}}}JnCb}111{{{f{Gd}}}{{ACl{Gd}}}}{{{f{Ib}}}{{ACl{Ib}}}}{{{f{Gd}}}{{ACn{Gd}}}}{{{f{Ib}}}{{ACn{Ib}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{Fb}}}{{B`{Kn}}}}{{{In{c}}}{{In{c}}}Cb}{{{f{{In{c}}}}}{{B`{Kn}}}Cb}{{{In{c}}B`}{{In{c}}}Cb}{{{f{{In{c}}}}{In{c}}}{{ADd{c}}}Cb}4231{{{In{c}}}{{Lb{c}}}Cb}{GdGd}{IbIb}{{{f{{Lb{c}}}}}{{Lf{{In{c}}}}}Cb}{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{{{f{BjGd}}Gdd}b}{{{f{BjIb}}Ibd}b}{{{f{Bj{In{c}}}}{B`{I`}}}bCb}{{{f{Bj{In{c}}}}d}bCb}{{{f{BjIb}}d}b}{{{f{Bj{In{c}}}}Ib}bCb}{{{f{Bj{In{c}}}}B`}bCb}033{{{f{Bj{In{c}}}}Jn}bCb}{{{f{BjIb}}Jn}b}{{{In{c}}Jn}{{In{c}}}Cb}{{{In{c}}{B`{Jn}}}{{In{c}}}Cb}{{GdGd}Gd}{{IbIb}Ib}>=10{{{Lb{c}}}{{In{c}}}Cb}{fc{}}0000{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{{{f{{Lb{c}}}}}{{B`{{Lf{{In{c}}}}}}}Cb}{{{f{{Lb{c}}}}}{{B`{{J`{{In{c}}}}}}}Cb}{fOd}000000:9{{{f{{Lb{c}}}}}{{f{{ADf{Fb}}}}}Cb}{{}c{}}000000{ACjACj}0{{{f{{Lb{c}}}}}{{J`{{In{c}}}}}Cb}````{{fh}b}{{{f{{ADh{c}}}}Fl}{{Hh{{ADh{c}}{ADh{c}}}}}Ih}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{f{c}}}}}}}}{{ADje}g{}{{Hd{}{{Bb{c}}}}}{}}0{{{f{If}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Ih}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Fl}dIh}{{{f{{ADh{c}}}}}{{ADh{c}}}{IhA@n}}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{{ADh{c}}}}}{{f{ADj}}}Ih}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADh{c}}}}{f{BjGl}}}Gn{IhADn}}{{{G`{c}}}{{ADh{c}}}Ih}{cc{}}{{FlADj}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}Fl}{{B`{{f{c}}}}}Ih}{{}ADj}{{{f{Hf}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Ih}{{ADj{f{Hf}}cc}{{ADh{e}}}{}Ih}{{{f{Hf}}{f{{ADh{c}}}}e}{{ADh{c}}}Ih{}}{{{f{Hf}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Ih}{{}Fl}{{}c{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}Fl}dIh}{{fFl}d}1{{{f{{ADh{c}}}}}{{AEb{egAE`}}}Ih{}{}}{{{f{{ADh{c}}}}}{{AEb{{f{c}}{AEd{c}}AE`}}}Ih}{{{f{{ADh{c}}}}}FlIh}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hf}}}bIh}{{{f{Bj{ADh{c}}}}FlFl}bIh}{{fFlFl}c{}}01{{{f{{ADh{c}}}}Fl}{{Hh{{Fd{H`}}{Fd{H`}}}}}Ih}0{{{f{If}}}{{Fd{If}}}}{{{f{{ADh{c}}}}}{{Fd{H`}}}Ih}{fc{}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{B`{{f{c}}}}e}}}}}}}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{f{c}}e}}}}}}}}{{ADjg}{{Ob{ie}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{}}0{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{If}}}{{f{Dh}}}}{{}{{f{Dh}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hf}}}}}Ih}{{{f{{ADh{c}}}}Fl}{{f{c}}}Ih}{{{f{{ADh{c}}}}Fl}eIh{}}1{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}}{{AEd{c}}}Ih}{{}c{}}{{{f{{ADh{c}}}}{B`{Hf}}}{{Fd{H`}}}Ih}{{{ADh{c}}{B`{Hf}}}{{ADh{c}}}Ih}0`{{{f{Bj{AEf{c}}}}}bIh}0{{{f{Bj{AEf{c}}}}{B`{c}}}bIh}{{{f{Bj{AEf{c}}}}c}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Ih}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{AEf{c}}}{{AEh{c}}}Ih}{cc{}}{{{f{{AEf{c}}}}BhFlFl}{{Fd{AAn}}}Ih}{{}Fl}{{}c{}}{{BhFl}{{AEf{c}}}Ih}{{{f{Bj{AEf{c}}}}}AfIh}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AEl}}{f{BjGl}}}Gn}{cc{}}{{{f{AEj}}BhFlFl}{{Fd{AAn}}}}{{BhFl}{{Fd{AEj}}}}{{}AEn}{{}ADj}{{}Fl}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6````````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cf{{B`{e}}}{{Cd{{B`{c}}}}}}Ch}}{{{f{AFh}}{f{Cf}}}AFh}{{{f{AFh}}{f{Cf}}}{{l{c}}}Cb}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dn{g}}}}}b{}{}{}{{Cf{{B`{e}}{f{g}}}{{Cd{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cf{e}{{Cd{c}}}}Ch}}{{{f{AFj}}Ef}Eh}{{{f{AFj}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{AFl}}}{{Ah{Eh}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{E`}}}{{Ah{Af}}}}0{{{f{AFn}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hh{Af{AGf{Ln}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gh}}}{{Ah{{l{c}}}}}Cb}`{{{f{AG`}}{f{BjGl}}}Gn}{cc{}}`{{BhcFl}AGl{}}{{BhFl}AGn}`{{{f{AH`}}Fl}{{Ah{Hn}}}}{{{f{AH`}}Fl}Hn}{{{f{{AHb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AG`}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{AG`}}}d}{{{f{AHd}}}{{Ah{Gh}}}}{{{f{AHf}}}{{Ah{Gh}}}}66{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHh}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hh{cc}}}}}{}}{{{f{AFl}}}{{Ah{Fl}}}}{{{f{AHj}}FlFl}{{l{c}}}Cb}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Ln}}}}}}{{{f{AHh}}nN`}{{Ah{{B`{c}}}}}{}}{{{f{AHl}}}AHl}{{{f{AHn}}{f{Cf}}Nb}{{Ah{Af}}}}`{{{f{AI`}}c{B`{e}}}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}}{{{f{AI`}}ci}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}{}{{Cf{{B`{e}}}{{Cd{{B`{g}}}}}}}}`{{{f{AI`}}{f{Gh}}{B`{c}}}{{Ah{AI`}}}{}}{{{f{AIb}}Ln}{{l{c}}}Cb}{{{f{AId}}Lnc}{{l{e}}}{}Cb}`{{{f{AFj}}d}{{l{c}}}Cb}{{{f{AFj}}Ef}{{l{c}}}Cb}{{{f{AIf}}Dl}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIh}}{f{c}}}{{Ah{AIh}}}Nd}{{{f{AIj}}{f{c}}}AIjNd}{{{f{AIl}}}{{G`{{f{{Dn{Dl}}}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIn}}{f{Gh}}{f{{l{c}}}}}{{Ah{{l{c}}}}}Cb}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}CbCb{{Cf{ff}{{Cd{}}}}}{{Cf{f}{{Cd{}}}}}{{Cf{f}{{Cd{}}}}}Cb}{{{l{c}}{l{e}}gik}{{l{m}}}CbCb{{Cf{}{{Cd{}}}}}{{Cf{}{{Cd{}}}}}{{Cf{}{{Cd{}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CbCbH`{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}CbCb{{AJ`{B`B`}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}g}bCbCb{{Cl{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}DbCbCb{{Cl{{f{BjDd}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CbCb{}{{Cl{}{{Cd{g}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}CbCb{H`AJb}{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}CbCbH`{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}CbCbH`{{Cl{}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}CbCb{{Cl{ff}{{Cd{{Fd{H`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}CbCb{{Cl{ff}{{Cd{{Fd{H`}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}CbCb{}{}{{Cl{B`B`}{{Cd{{Ob{{B`{g}}i}}}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}CbCbCb{{AJd{B`B`B`}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}CbCbH`AJf{{Cl{ff}{{Cd{{Ob{gi}}}}}}}{{Cb{}{{Hb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Ob{{l{m}}i}}}CbCbH`AJf{{Cl{ff}{{Cd{{Ob{gi}}}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Ob{{l{c}}g}}}CbCbAJf{{Cl{ff}{{Cd{{Ob{{Fd{H`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Ob{{l{o}}k}}}CbCbCb{}{}{{Cl{B`B`B`}{{Cd{{Ob{{B`{i}}k}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{B`}{{Cd{{Ob{{B`{e}}g}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{}{{Cd{{Ob{eg}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{H`AJb}AJf{{Cl{f}{{Cd{{Ob{eg}}}}}}}{{Cb{}{{Hb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Cb{{AJh{B`}}}Cb}{{{f{{l{c}}}}e}{{l{g}}}CbAJhCb}{{{f{{l{c}}}}g}{{l{i}}}CbH`{{Cl{f}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}{{{l{c}}g}{{l{i}}}CbH`{{Cl{}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Cb{H`AJb}{{Cl{f}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}0{{{f{{l{c}}}}}FlA`}0{{JnJn}Jn}{{{f{Eh}}I`}{{Ah{b}}}}{{{f{{AJj{I`}}}}I`}{{Ah{b}}}}{{{f{{Dn{Ej}}}}{f{{Dn{d}}}}{f{{Dn{d}}}}}{{Ah{AJl}}}}{{{f{{Dn{Ej}}}}{f{{Dn{d}}}}{f{{Dn{d}}}}}{{Ah{{AJn{Ln}}}}}}{{Bh{f{{Dn{Ej}}}}{f{{Dn{d}}}}{f{{Dn{d}}}}}{{Ah{AK`}}}}{{Bh{f{{Dn{Af}}}}}{{Ah{AK`}}}}{{{f{Af}}}{{Ah{Fn}}}}{{{f{{Dn{Af}}}}}{{Ah{AJl}}}}{{{f{{Dn{Af}}}}}{{Ah{AK`}}}}00````{{fh}b}{{{f{{l{c}}}}eAKbd}{{G`{I`}}}Cb{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AKb}}}AKb}{{f{f{Bjc}}}b{}}{fb}{{}AKb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AKb}}{f{AKb}}}d}{{f{f{c}}}d{}}0{{{f{AKb}}{f{BjGl}}}Gn}{cc{}}{{{f{AKb}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{{Dn{f}}}}cI`e}{{G`{I`}}}{{Bf{}{{Bb{B`}}}}}{{Cf{fFlf}{{Cd{d}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5`{{Fl{f{Bj{G`{d}}}}}b}```{{{f{AKd}}FlFl}AKd}0{{Fl{f{{Dn{Ej}}}}{f{BjEl}}}{{Ah{{AKf{Eh}}}}}}```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ef}}}Ef}{{{f{El}}}El}{{f{f{Bjc}}}b{}}0{fb}0{{}Ef}{{}El}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0``{Flb}0{{{f{Ef}}{f{Ef}}}d}{{{f{El}}{f{El}}}d}{{f{f{c}}}d{}}000{{{f{Ef}}{f{BjGl}}}Gn}{{{f{El}}{f{BjGl}}}Gn}{{{f{El}}}Ef}{cc{}}0{{{f{Ef}}}El}{{{f{Ef}}{f{Bjc}}}bABf}{{{f{El}}{f{Bjc}}}bABf}{{}Fl}0{{}c{}}0````{{}Ef}{{}El}``{{{f{AKd}}FlFl}AKd}0{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077{{Efd}Ef}{{Eld}El}1010{{Elc}El{{Hd{}{{Bb{d}}}}}}210{EfEf}{ElEl}`{AKhLn}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000{{{f{Eb}}}d}{{{f{Jd}}{f{Jd}}}c{}}{{{f{Gh}}{f{Gh}}}c{}}{{GhGh}c{}}{{{f{Db}}{f{Dh}}}c{}}{{DbDb}c{}}{{{f{Db}}{f{Db}}}c{}}{{{f{En}}{f{En}}}c{}}{{EnEn}c{}}{{{f{En}}{f{{Dn{Dl}}}}}c{}}{{{f{Hn}}{f{Hn}}}Hn}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Db}}{f{Af}}}{{Ah{Af}}}}{{{f{En}}{f{Af}}}{{Ah{Af}}}}{{{f{Gh}}{f{Af}}}{{Ah{Af}}}}{{{f{Eb}}{f{Al}}}Af}{{{f{Gh}}{f{Al}}}Af}{{{f{Db}}{f{Al}}}Af}{{{f{En}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfIh}{{{f{Gh}}}d}{{{f{Gh}}}{{B`{d}}}}{{{f{Eb}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Eb}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Eb}}c}Eb{{Cf{{B`{Af}}}{{Cd{{B`{Af}}}}}}Ch}}{{{f{Gh}}c}Gh{{Cf{{B`{d}}}{{Cd{{B`{d}}}}}}Ch}}{{{f{Db}}c}Db{{Cf{{B`{{f{Dh}}}}}{{Cd{{B`{{AKl{Dh}}}}}}}}Ch}}{{{f{En}}c}En{{Cf{{B`{{f{{Dn{Dl}}}}}}}{{Cd{{B`{{AKl{{Dn{Dl}}}}}}}}}}Ch}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cf{{B`{{f{c}}}}}{{Cd{{B`{c}}}}}}Ch}}{{{f{Eb}}c}Eb{{Cl{Cj}{{Cd{Af}}}}}}{{{f{Eb}}e}{{l{g}}}{}{{Cl{{B`{Cj}}}{{Cd{{B`{c}}}}}}Ch}Cb}{{{f{AKn}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{AL`}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{Gh}}{f{Cf}}}Gh}{{{f{Db}}{f{Cf}}}Db}{{{f{En}}{f{Cf}}}En}{{{f{Gh}}{f{Cf}}}{{l{c}}}Cb}{{{f{Db}}{f{Cf}}}{{l{c}}}Cb}{{{f{En}}{f{Cf}}}{{l{c}}}Cb}{{{f{Db}}c}Db{{Cl{{f{Dh}}}{{Cd{{f{Dh}}}}}}}}{{{f{En}}c}En{{Cl{{f{{Dn{Dl}}}}}{{Cd{{f{{Dn{Dl}}}}}}}}}}{{{f{Eb}}{f{Cf}}}{{Ah{Eb}}}}{{{f{Eb}}e{f{Bj{Dn{c}}}}}b{}{{Cf{{B`{Af}}{f{c}}}{{Cd{c}}}}}}{{{f{Gh}}e{f{Bj{Dn{c}}}}}b{}{{Cf{{B`{d}}{f{c}}}{{Cd{c}}}}}}{{{f{Db}}e{f{Bj{Dn{c}}}}}b{}{{Cf{{B`{{f{Dh}}}}{f{c}}}{{Cd{c}}}}}}{{{f{En}}e{f{Bj{Dn{c}}}}}b{}{{Cf{{B`{{f{{Dn{Dl}}}}}}{f{c}}}{{Cd{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dn{e}}}}}bIh{}{{Cf{{B`{{f{c}}}}{f{e}}}{{Cd{e}}}}}}{{{f{Eb}}c}Eb{{Cf{Af}{{Cd{Af}}}}Ch}}{{{f{Gh}}c}Gh{{Cf{d}{{Cd{d}}}}Ch}}{{{f{Db}}c}Db{{Cf{{f{Dh}}}{{Cd{{AKl{Dh}}}}}}Ch}}{{{f{En}}c}En{{Cf{{f{{Dn{Dl}}}}}{{Cd{{AKl{{Dn{Dl}}}}}}}}Ch}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cf{{f{c}}}{{Cd{c}}}}Ch}}{{{f{Db}}c}Db{{Cl{Ed{f{Dh}}}{{Cd{Ed}}}}Ch}}{{{f{Gh}}Ef}Eh}{{{f{Db}}Ef}Eh}{{{f{En}}Ef}Eh}{{{f{AK`}}Ef}Eh}{{{f{Gh}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{Db}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{En}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{AK`}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{Gh}}}{{Ah{Eh}}}}{{{f{Db}}}{{Ah{Eh}}}}{{{f{En}}}{{Ah{Eh}}}}{{{f{{AEh{c}}}}}{{Ah{Eh}}}Ih}{eALb{}{{Hd{}{{Bb{c}}}}}}0{{ADje}ALd{}{{Hd{}{{Bb{c}}}}}}0{{{f{Db}}}En}{{{f{Hn}}}Hn}{{{f{E`}}}{{f{E`}}}}{{{f{Mj}}}{{f{E`}}}}{{{f{ALf}}}{{f{E`}}}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{{f{{Dn{c}}}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{Eb}}{f{{l{c}}}}{f{{l{e}}}}g}EbCbCb{{Cl{{B`{Cj}}B`B`}{{Cd{{B`{Af}}}}}}}}{{{f{Gh}}{f{Gh}}}c{}}{{GhGh}c{}}0110{f{{f{c}}}{}}000000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}000000000000000000000000000000000000{E`{{Fd{E`}}}}{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{Hn}}{f{E`}}}d}{{{f{AMf}}{f{E`}}}{{Ah{Af}}}}0{{{f{Hn}}{f{E`}}}Hn}{{{f{E`}}E`}E`}{{{f{Eb}}{f{E`}}}{{Ah{Af}}}}{{{f{Gh}}{f{E`}}}{{Ah{Af}}}}{{{f{Db}}{f{E`}}}{{Ah{Af}}}}{{{f{En}}{f{E`}}}{{Ah{Af}}}}{{{f{AK`}}{f{E`}}}{{Ah{Af}}}}{{{f{AMf}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Jd}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Eb}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Gh}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Db}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{En}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AK`}}{f{E`}}Ff}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{AL`}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMh{ce}}}}}{{AMh{ce}}}CbCb}{{{f{AMj}}}AMj}{{{f{Hn}}}Hn}{{{f{AMl}}}AMl}{{{f{E`}}}E`}{{{f{AMn}}}AMn}{{{f{Mj}}}Mj}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Ll}}}Ll}{{{f{Mb}}}Mb}{{{f{ANf}}}ANf}{{{f{ANh}}}ANh}{{{f{Md}}}Md}{{{f{M`}}}M`}{{{f{D`}}}D`}{{{f{Cn}}}Cn}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{Df}}}Df}{{{f{Dj}}}Dj}{{{f{ANn}}}ANn}{{{f{An}}}An}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{AOd}}}AOd}{{{f{AOf}}}AOf}{{{f{AOh}}}AOh}{{{f{AOj}}}AOj}{{{f{ADj}}}ADj}{{{f{AOl}}}AOl}{{f{f{Bjc}}}b{}}0000000000000000000000000000000{fb}0000000000000000000000000000000{{{f{AOh}}{f{AOh}}}AOn}{{{f{BjMj}}E`}b}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}{{{f{E`}}}d}00{B@bE`}{{}Hn}{{}AMl}{{}E`}{{}ADj}{{{f{{AMh{ce}}}}}{{f{g}}}CbCb{}}{Fl{{f{c}}}{}}000000000000000000000000000000000000{Fl{{f{Bjc}}}{}}{{{f{Bj{AMh{ce}}}}}{{f{Bjg}}}CbCb{}}111111111111111111111111111111111111{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{Flb}000000000000000000000000000000000000{{{f{AMf}}}{{f{E`}}}}{{{f{Jd}}}{{f{E`}}}}{{{f{Hn}}}E`}{{{f{Mj}}}{{f{E`}}}}``{{{f{Hn}}{f{Hn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{E`}}{f{ADj}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{AOh}}{f{AOh}}}d}{{{f{AOj}}{f{AOj}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{Hn}}{f{Hn}}d}d}{{{f{Eb}}{f{Eb}}}Gh}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Dh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{En}}{f{{Dn{Dl}}}}}Gh}{{{f{En}}{f{En}}}Gh}542301{{f{f{c}}}d{}}0000000000000000000{{{f{Eb}}}{{Ah{{Hh{Af{AGf{Ln}}}}}}}}{{{f{{AMh{ce}}}}}MjCbCb}{{{f{Gh}}d}{{Ah{Gh}}}}{{{f{En}}{f{{Dn{Dl}}}}}{{Ah{En}}}}{{{f{Db}}{f{Gh}}}{{Ah{{l{Df}}}}}}{{{f{En}}{f{Gh}}}{{Ah{{l{Dj}}}}}}{{{f{{AEh{c}}}}{f{Gh}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Eb}}{f{BjGl}}}Gn}{{{f{Db}}{f{BjGl}}}Gn}{{{f{En}}{f{BjGl}}}Gn}{{{f{{AEh{c}}}}{f{BjGl}}}GnIh}{{{f{AMj}}{f{BjGl}}}Gn}{{{f{Hn}}{f{BjGl}}}Gn}0{{{f{AMl}}{f{BjGl}}}Gn}{{{f{E`}}{f{BjGl}}}Gn}0{{{f{AMn}}{f{BjGl}}}Gn}{{{f{Mj}}{f{BjGl}}}Gn}{{{f{AN`}}{f{BjGl}}}Gn}0{{{f{AOh}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{ADj}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{Eb}}c}b{{Cl{{B`{Cj}}}}}}{cc{}}000000{dHn}{{{f{Dh}}}Hn}{{{f{{Dn{Dl}}}}}Hn}{cHnB@h}4{{{B`{c}}}Hn{{B@j{Hn}}}}5{HnE`}{{{f{ADj}}}E`}7{{{f{Hn}}}E`}8{{{f{Hn}}}Mj}9{{{f{B@l}}}Mj}:{{{f{AOl}}}AN`};;;;;;;;;;;;;;;;;;;;;;;{B@nADj}{BA`ADj}={{{f{ADj}}d}E`}{eEb{{BAb{Af}}}{{Hd{}{{Bb{c}}}}}}{cEb{{Hd{}{{Bb{{B`{{Fd{H`}}}}}}}}}}{cEb{{Hd{}{{Bb{{B`{Af}}}}}}}}{cGh{{Hd{}{{Bb{d}}}}}}{eDb{{`{Dh}}}{{Hd{}{{Bb{c}}}}}}{eDb{{Kh{Dh}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEn{{`{{Dn{Dl}}}}}{{Hd{}{{Bb{c}}}}}}{eEn{{Kh{{Dn{Dl}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{e{{AEh{c}}}Ih{{Hd{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}Db{{Kh{Dh}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}En{{Kh{{Dn{Dl}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{{B`{c}}}}}}}}<:98765{eAK`{{`{{Dn{Dl}}}}}{{Hd{}{{Bb{c}}}}}}{eAK`{{Kh{{Dn{Dl}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}Db{{Kh{Dh}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}En{{Kh{{Dn{Dl}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{c}}}}}}{cEb{{Hj{}{{Bb{{B`{Af}}}}}}}}{cGh{{Hj{}{{Bb{{B`{d}}}}}}}}{cGh{{Hj{}{{Bb{d}}}}}}{eDb{{Kh{Dh}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eDb{{`{Dh}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{eEn{{Kh{{Dn{Dl}}}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEn{{`{{Dn{Dl}}}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{{cBhE`}Eb{{Hj{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dn{d}}}}}Gh}{{Bh{f{{Dn{c}}}}}Db{{Kh{Dh}}}}{{Bh{f{{Dn{c}}}}}En{{Kh{{Dn{Dl}}}}}}{{Bh{f{{Dn{c}}}}}{{AEh{c}}}Ih}{{Bh{f{{Dn{{B`{d}}}}}}}Gh}{{Bh{f{{Dn{{B`{c}}}}}}}Db{{Kh{Dh}}}}{{Bh{f{{Dn{{B`{c}}}}}}}En{{Kh{{Dn{Dl}}}}}}{{Bh{f{{Dn{{B`{c}}}}}}}{{AEh{c}}}Ih}{cGh{{Hl{}{{Bb{{B`{d}}}}}}}}{{{G`{c}}ADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{G`{c}}ADj}{{AJb{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}A@n{{Gf{}{{Bb{e}}}}HlJfJh}}{{FlcADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{Bh{f{Af}}Fl}Eb}{{BhdFl}Gh}{{Bh{f{Dh}}Fl}Db}{{Bh{f{{Dn{Dl}}}}Fl}En}{{Bh{f{{Dn{Dl}}}}Fl}AK`}{{BhcFl}{{AEh{c}}}Ih}{{FlADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{BhFl}Eb}{{BhFl}Gh}{{BhFl}Db}{{BhFl}En}{{BhFl}AK`}{{BhFl}{{AEh{c}}}Ih}{{BhFl{f{E`}}}Eb}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{AOhIl}{AOj{{B`{Il}}}}{{{f{Jd}}Fl}{{Ah{Hn}}}}{{{f{AMf}}Fl}{{Ah{Hn}}}}0{{{f{Eb}}Fl}{{Ah{Hn}}}}{{{f{Gh}}Fl}{{Ah{Hn}}}}{{{f{Db}}Fl}{{Ah{Hn}}}}{{{f{En}}Fl}{{Ah{Hn}}}}{{{f{AK`}}Fl}{{Ah{Hn}}}}{{{f{{AEh{c}}}}Fl}{{Ah{Hn}}}Ih}{{{f{Jd}}Fl}Hn}{{{f{AMf}}Fl}Hn}0{{{f{Eb}}Fl}Hn}{{{f{Gh}}Fl}Hn}{{{f{Db}}Fl}Hn}{{{f{En}}Fl}Hn}{{{f{AK`}}Fl}Hn}{{{f{{AEh{c}}}}Fl}HnIh}{{{f{Eb}}Fl}{{B`{Af}}}}{{}E`}00000000000000000000000{{{f{Eb}}}Af}{{{f{{AEh{c}}}}Fl}{{B`{{f{If}}}}}Ih}0{{AOjIl}Il}{{AOjc}Il{{Cf{}{{Cd{Il}}}}}}{{{f{Hn}}}{{B`{{f{Dh}}}}}}{{{f{BAf}}Fl}Hn}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{Eb}}}Fl}{{{f{Db}}}Fl}{{{f{AK`}}}Fl}{{{f{Eb}}dd}{{Ah{Al}}}}{{{f{Gh}}dd}{{Ah{Al}}}}{{{f{Db}}dd}{{Ah{Al}}}}{{{f{En}}dd}{{Ah{Al}}}}{{{f{AK`}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Ih}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{Db}}{f{Dh}}}Gh}{{{f{En}}{f{En}}}Gh}{{{f{En}}{f{{Dn{Dl}}}}}Gh}42301{{{f{Hn}}{f{Bjc}}}bABf}{{{f{AMl}}{f{Bjc}}}bABf}{{{f{E`}}{f{Bjc}}}bABf}{{{f{Mj}}{f{Bjc}}}bABf}{{{f{AN`}}{f{Bjc}}}bABf}{{{f{AOj}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOl}}{f{Bjc}}}bABf}{{{f{Hn}}{f{Bjc}}d}bABf}{{{f{Hn}}}I`}{E`E`}{{}Fl}000000000000000000000000000000000000{{{f{Eb}}}{{f{E`}}}}{{{f{E`}}}{{B`{{f{E`}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}000000000000000000000000000000000000{{}Ej}{{BAh{B`{Fl}}Fl}{{Ah{Jd}}}}{{BAh{B`{Fl}}Fl}Jd}{{{f{Eb}}}c{}}{{{f{Gh}}}c{}}{{{f{Db}}}c{}}{{{f{En}}}c{}}{{{f{AK`}}}c{}}{{{f{{AEh{c}}}}}eIh{}}{{BAjE`}{{Ah{Kn}}}}{JdAf}{BAhAf}{HnHn}{{{f{E`}}}d}00{{{f{Hn}}}d}1111010111101{{{f{ADj}}}d}121212022212222120{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEb{cgAE`}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}{{f{E`}}}}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{Db}}{f{Dh}}}Gh}{{{f{En}}{f{En}}}Gh}{{{f{En}}{f{{Dn{Dl}}}}}Gh}43201{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{E`}}{f{E`}}}{{Ah{d}}}}{{{f{AMl}}}{{B`{E`}}}}{{{f{E`}}}{{Ah{E`}}}}{{{f{Gh}}}{{B`{d}}}}{{{f{En}}}{{B`{{f{{Dn{Dl}}}}}}}}{{{f{Gh}}}Kn}{{{f{Db}}}Kn}{{{f{En}}}Kn}{{{f{Gh}}}{{B`{n}}}}{{{f{AKn}}}{{B`{Ij}}}}{{{f{AL`}}}{{B`{n}}}}{{{f{AKn}}}Kn}{{{f{AL`}}}Kn}{{{f{E`}}{f{E`}}}{{Ah{E`}}}}:9876{{Bh{f{{Dn{Dl}}}}FlFl}Gh}{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Db}}}{{Ah{Fl}}}}{{{f{En}}}{{Ah{Fl}}}}{{{f{Mj}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}Db{{Kh{{Dn{{f{Dh}}}}}}}}{{Bhc}Db{{Kh{{Dn{{B`{{AKl{Dh}}}}}}}}}}{{Bhc}Db{{Kh{{Dn{{AKl{Dh}}}}}}}}{{Bhc}Db{{Kh{{Dn{{B`{{f{Dh}}}}}}}}}}{{Bhc}En{{Kh{{Dn{{AKl{{Dn{Dl}}}}}}}}}}{{Bhc}En{{Kh{{Dn{{B`{{f{{Dn{Dl}}}}}}}}}}}}{{Bhc}En{{Kh{{Dn{{f{{Dn{Dl}}}}}}}}}}{{Bhc}En{{Kh{{Dn{{B`{{AKl{{Dn{Dl}}}}}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Kh{{Dn{{B`{c}}}}}}}}{{Bh{f{{Dn{c}}}}}{{AEh{c}}}Ih}{{BhE`}Mj}{IlAOh}{LnAOj}{IlAOj}{Bh{{AEh{c}}}Ih}{{{f{Eb}}FlFl}Eb}{{{f{Gh}}FlFl}Gh}{{{f{Db}}FlFl}Db}{{{f{En}}FlFl}En}{{{f{AK`}}FlFl}AK`}{{{f{{AEh{c}}}}FlFl}{{AEh{c}}}Ih}{{Bh{G`{c}}}{{AEh{c}}}Ih}{{Bh{G`{c}}Hf}{{AEh{c}}}Ih}{{{l{c}}}{{AMh{ec}}}CbCb}{{}AMn}{Ghc{}}{{{f{Gh}}}c{}}{{{f{Eb}}{f{Eb}}}Gh}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Dh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{En}}{f{En}}}Gh}{{{f{En}}{f{{Dn{Dl}}}}}Gh}543210{{{f{Gh}}}Fl}0{{{f{Eb}}}{{Ah{{AGf{Ln}}}}}}:{{{f{Eb}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Db}}}{{`{{Ml{}{{Bb{{B`{{f{Dh}}}}}}}}}}}}{{{f{BjEb}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Db}}}{{`{{Mn{}{{Bb{{B`{{f{Dh}}}}}}}}}}}}{{{f{Hn}}{f{Hn}}}{{B`{AOn}}}}{{{f{AN`}}{f{AN`}}}{{B`{AOn}}}}{{{f{AOh}}{f{AOh}}}{{B`{AOn}}}}{{{f{{AMh{ce}}}}}{{f{{l{e}}}}}CbCb}{{{f{Jd}}}{{B`{Fl}}}}{{{f{{AMh{AO`Jb}}}}}{{B`{Fl}}}}{{{f{AKn}}nN`}{{Ah{{B`{Ij}}}}}}{{{f{AL`}}nN`}{{Ah{{B`{n}}}}}}{{{f{AKn}}nN`}{{Ah{Kn}}}}{{{f{AL`}}nN`}{{Ah{Kn}}}}{{BhFln}{{Ah{Gh}}}}{{{f{Eb}}}Eb}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000002{{{f{Gh}}}Gh}{{{f{Db}}}Db}{{{f{En}}}En}{{{f{AK`}}}AK`}{{{f{{AEh{c}}}}}{{AEh{c}}}Ih}`{{{f{Jd}}}Fl}{{{f{{AMh{AO`Jb}}}}}Fl}{{{f{Gh}}c{B`{d}}}{{Ah{Gh}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Db}}c{B`{{f{Dh}}}}}{{Ah{Db}}}{{Hd{}{{Bb{I`}}}}}}{{{f{En}}c{B`{{f{{Dn{Dl}}}}}}}{{Ah{En}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Gh}}ce}{{Ah{Gh}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{d}}}{{Cd{{B`{d}}}}}}}}{{{f{Db}}ce}{{Ah{Db}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{{f{Dh}}}}}{{Cd{{B`{Dd}}}}}}}}{{{f{En}}ce}{{Ah{En}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{{f{{Dn{Dl}}}}}}}{{Cd{{B`{{G`{Dl}}}}}}}}}}{{{f{Gh}}{f{Gh}}{B`{d}}}{{Ah{Gh}}}}{{{f{Db}}{f{Gh}}{B`{{f{Dh}}}}}{{Ah{Db}}}}{{{f{En}}{f{Gh}}{B`{{f{{Dn{Dl}}}}}}}{{Ah{En}}}}{{{f{BjEb}}}b}{{{f{BjEb}}E`}b}{{{f{BjMj}}Bh}b}{{{f{Eb}}Ln}Eb}{{{f{Gh}}Ln}Gh}{{{f{Db}}Ln}Db}{{{f{En}}Ln}En}{{{f{AK`}}Ln}AK`}{{{f{{AEh{c}}}}Ln}{{AEh{c}}}Ih}{{{f{Eb}}Ln{B`{{f{Af}}}}}Eb}{{{f{Gh}}Ln{B`{d}}}Gh}{{{f{Db}}Ln{B`{{f{Dh}}}}}Db}{{{f{En}}Ln{B`{{f{{Dn{Dl}}}}}}}En}{{{f{AK`}}Ln{B`{{f{{Dn{Dl}}}}}}}AK`}{{{f{{AEh{c}}}}Ln{B`{{Id{c}}}}}{{l{{Id{c}}}}}Ih}{{{f{Gh}}d}Gh}{{{f{Db}}d}Db}{{{f{En}}d}{{l{Dj}}}}{{{f{AK`}}d}AK`}{{{f{Gh}}Ef}{{l{An}}}}{{{f{Db}}Ef}{{l{Df}}}}{{{f{En}}Ef}{{l{Dj}}}}{{{f{AK`}}Ef}AK`}{{{f{AKn}}Dl}Kn}{{{f{AL`}}Dl}Kn}{{{f{Hn}}}{{AKl{Dh}}}}{{{f{Hn}}{f{E`}}}{{B`{Hn}}}}`{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Gh}}}{{B`{I`}}}}{{{f{Gh}}}Kn}{{{f{En}}}Kn}{{{f{Eb}}{f{c}}}Eb{{Kh{{Dn{I`}}}}Nd}}{{{f{Eb}}{f{Eh}}}Eb}{{{f{Db}}{f{Eh}}}Db}{{{f{Db}}{f{c}}}Db{{Kh{{Dn{I`}}}}Nd}}{{{f{En}}{f{c}}}En{{Kh{{Dn{I`}}}}Nd}}{{{f{En}}{f{Eh}}}En}{{{f{E`}}AMn}ADj}{{{f{Mj}}AMn}B@l}{AN`AOl}{{{f{E`}}BhAMn}B@l}{AN`{{f{Dh}}}}{{{f{Db}}Fl}{{Ah{Af}}}}{{ADjFld}ADj}{{{f{BjEb}}E`}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{Eb}}}{{Ah{Nl}}}}{fc{}}0000000000000000000000000000000{{{f{E`}}}E`}{{{f{ADj}}}BAl}{{{f{Jd}}Fl}{{Ah{{AKl{Jd}}}}}}{{{f{{AMh{AO`Jb}}}}Fl}{{Ah{{AKl{{AMh{AO`Jb}}}}}}}}{fDd}000{{{f{En}}}Db}{{{f{Hn}}{f{Hn}}}d}{{{f{Eb}}c}{{Ah{Eb}}}{{Cl{Cj}{{Cd{{Ah{Af}}}}}}}}{{{f{Eb}}e}{{Ah{{l{g}}}}}{}{{Cl{{B`{Cj}}}{{Cd{{Ah{{B`{c}}}}}}}}Ch}Cb}{g{{Ob{ALbe}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{{ADjg}{{Ob{ALde}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{{{f{Hn}}}{{Ah{c}}}Kl}{c{{Ob{e}}}{}{}}00000000000000000000000000000000{Ln{{Ob{AOh}}}}1111{{}{{Ob{c}}}{}}000000000000000000000000000000000000{{{f{Hn}}{f{E`}}}{{Ah{Hn}}}}{{{f{E`}}AMn}{{Ah{ADj}}}}{f{{Ob{GbBAn}}}}000{{{f{Eb}}{f{{l{c}}}}e}{{Ah{Eb}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{Ah{{B`{Af}}}}}}}}}}{fOd}000000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gh}}}{{Ah{Gh}}}}{{{f{Db}}}{{Ah{Db}}}}{{{f{En}}}{{Ah{En}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}cA@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}0{{{f{E`}}Hn}d}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gA@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{AKn}}Dl}Kn}{{{f{AL`}}Dl}Kn}{{{f{Gh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{Db}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{En}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AK`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}Ih}{{{f{Gh}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{Db}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{En}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{AK`}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}Ih}{{}c{}}000000000000000000000000000000000000{Flc{}}0{Fl{{BBn{ce}}}{}{}}{{{f{{Dn{Of}}}}e}c{}{{Oh{{f{Eh}}}{{Cd{c}}}}}}{{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{B`{Hf}}}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}Hn}{{{f{Eb}}{f{{l{c}}}}e}EbCb{{Cl{{B`{Cj}}B`}{{Cd{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AMb}}}d}{{AMbd}AMb}{{{f{BjBC`}}{B`{{f{Dh}}}}}b}{{{f{BjAMb}}{f{AMb}}}{{Ah{b}}}}{{{f{BjBC`}}}b}{{{f{BjBC`}}{f{Dh}}}b}{{{f{AMb}}Ef}Eh}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMb}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AMb}}}AMb}{{f{f{Bjc}}}b{}}{fb}{{}BCb}{Fl{{f{c}}}{}}000{Fl{{f{Bjc}}}{}}000{{BC`c}AMb{{Hd{}{{Bb{{B`{{f{Dh}}}}}}}}}}{Flb}000{{{f{AMb}}}{{f{E`}}}}{{{f{AMb}}{f{Dh}}}c{}}{{{f{AMb}}{f{Db}}}c{}}{{{f{AMb}}{f{AMb}}}c{}}210{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{BC`AMb}{BCb{{Ld{BCd}}}}{cc{}}000{{B@dE`}AMb}{{B@d{Ld{BCd}}dBCf}AMb}{{B@dBCf}AMb}{{{f{Db}}{f{B@b}}BCf}{{Ah{AMb}}}}{{BhdFlBCf}AMb}{{{f{AMb}}Fl}{{Ah{Hn}}}}{{{f{AMb}}Fl}Hn}{{{f{AMb}}}{{f{{Ld{BCd}}}}}}<=><=>{{}Fl}000{{}c{}}000{{}Ej}1{AMbAf}{{{f{AMb}}}d}0{{{f{AMb}}}BCh}{{{f{AMb}}}Fl}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Db}}}c{}}{{{f{AMb}}{f{Dh}}}c{}}210{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{AMb}}}Kn}{{{f{BjBCb}}{f{{Ld{BCd}}}}}{{Ah{b}}}}1{{{f{AMb}}}{{Ah{Fl}}}}{{{f{AMb}}}{{f{Bh}}}}{{BhFlBCf}BC`}{{{Ld{BCd}}}BCb}{{{f{BjBCh}}}{{B`{c}}}{}}:9;;9:<{{{f{AMb}}}{{f{B@d}}}}{{{f{BjBC`}}{f{Dh}}}{{Hh{Lhd}}}}`{{{f{BCh}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{AMb}}d}AMb}{{{f{AMb}}Ef}AMb}`{{{f{AMb}}AMnd}Fn}{{{f{AMb}}{f{B@b}}BCj}AMb}{{{f{AMb}}}{{Ah{AMb}}}}{{{f{AMb}}}AMb}{fc{}}{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}0005{{{f{AMb}}}d}{{{f{AMb}}}{{Ah{BCl}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{B@bBCd}{{{f{BCf}}}BCf}{{{f{BCd}}}BCd}{{f{f{Bjc}}}b{}}0{fb}0{{}BCf}{{}BCd}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{Flb}0{{{f{BCf}}{f{BCf}}}d}{{{f{BCd}}{f{Dh}}}{{B`{Lh}}}}{{{f{BCf}}{f{BjGl}}}Gn}{{{f{BCd}}{f{BjGl}}}Gn}{cc{}}0{{{f{BCd}}Lh}{{f{Dh}}}}{{{f{BCd}}}{{f{B@b}}}}{{{f{BCd}}Lh}{{B`{{f{Dh}}}}}}{{}Fl}0{{}c{}}0{{{f{BCd}}}d}0{{{f{BCd}}}Fl}{{{f{BCd}}{f{BCd}}}d}{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCn}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{{}b}{{{f{BjBCn}}}b}{Flb}2{cc{}}6{{}Fl}{{}c{}}=<;{{}d}1`{{{f{BjBD`}}Lh{f{BCd}}}{{Ah{{f{BjBD`}}}}}}{{{f{BjBD`}}}{{f{BjBD`}}}}{{{f{BjBD`}}{f{Dh}}}{{Ah{{f{BjBD`}}}}}}>=;:7{BD`AMb}765{{BhFl{Ld{BCd}}BCfd}BD`}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}9```````>>8````````````````````````{{{f{BDb}}}{{f{Dh}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0`{Fl{{f{c}}}{}}0{{{f{BDb}}}f}{Fl{{f{Bjc}}}{}}0{Flb}0`{{{f{BDd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BDb}}{f{BjGl}}}{{Ob{bB@f}}}}0{cc{}}0{cBDb{{B@j{{AKl{Dh}}}}}}{{}{{Kd{{f{Dh}}BDd}{{Cd{b}}}}}}{{}Fl}0{{}c{}}0{cAKjAJf}{{{f{Dh}}}BDb}````{{{Kd{{f{Dh}}BDd}{{Cd{b}}}}}b}{cAKjBDf}{fDd}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{f{{Ob{GbBAn}}}}{fOd}099`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BDh}}}BDh}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BjGl}}MhFl}Gn}{cc{}}{{}BDj}{{}BDh}{{}{{B`{Fl}}}}{{}Dd}{{}d}{{}Fl}{{}c{}}{{{B`{BDj}}}b}{BDhb}{{{B`{Fl}}}b}2{{{B`{d}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}8```````````{{fh}b}00{{{f{BjBCl}}{G`{Ej}}{f{BDl}}}{{Ah{b}}}}{{{f{BjBCl}}{G`{Af}}{f{BDl}}}{{Ah{b}}}}{{{f{BCl}}{f{Cf}}}{{G`{Ej}}}}0{{{f{BCl}}{f{Gh}}}{{Ah{BCl}}}}{{Fl{G`{Ej}}}BCl}{{{f{BCl}}{f{{Dn{Bh}}}}}{{Ah{BCl}}}}0{{{f{BCl}}{f{{Dn{Bh}}}}{f{BDl}}d}{{Ah{BCl}}}}{{{f{BCl}}LnFl}BCl}{{{f{BCl}}}BCl}{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BjBCl}}}{{f{BjBCl}}}}0{{{f{BjBCl}}{f{Dh}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{c}}}}}}{{{f{BjBCl}}Fle}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCl}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}9{{{f{BjBCl}}}b}{{{f{BE`}}}BE`}{{{f{BEb}}}BEb}<{{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCl}}{f{Dh}}}{{Ah{{f{Ej}}}}}}{{{f{BjBCl}}c}b{{Bf{}{{Bb{Ej}}}}}}{{{f{BCl}}e}{{Ah{{G`{{f{Ej}}}}}}}{{Kh{Dh}}}{{Hd{}{{Bb{c}}}}}}{{}BEb}{{}BCl}{Fl{{f{c}}}{}}0000{Fl{{f{Bjc}}}{}}0000{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{Flb}000{{{f{BCl}}{f{Dh}}}{{Ah{BCl}}}}1{{{f{BjBCl}}{f{Dh}}}{{Ah{Ej}}}}{{{f{BCl}}e}BCl{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{f{{BEd{Bh}}}}}BCl}{{{f{BCl}}{B`{{f{{Dn{c}}}}}}}{{Ah{BCl}}}{}}{{{f{BCl}}}{{G`{E`}}}}<{{{f{BEf}}}BCl}{{{f{BDl}}}BCl}{{{f{BEb}}{f{BEb}}}d}{{{f{BCl}}{f{BCl}}}d}00{{f{f{c}}}d{}}0{{{f{BCl}}}Fl}`{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{G`{Ej}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}}{{G`{Mj}}}}{{{f{BCl}}AG`}{{Ah{BCl}}}}{{{f{BCl}}{f{Gh}}}{{Ah{BCl}}}}{{{f{BE`}}{f{BjGl}}}Gn}{{{f{BEb}}{f{BjGl}}}Gn}{{{f{BCl}}{f{BjGl}}}Gn}0{cc{}}0000{cBCl{{Hd{}{{Bb{Af}}}}}}{cBCl{{Hd{}{{Bb{Ej}}}}}}{{{f{{Dn{BEh}}}}}{{Ah{BCl}}}}{{{f{{Dn{BEh}}}}{f{BDl}}}{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{f{BEh}}}}}}}}{{{f{BCl}}Fl}{{B`{{G`{Hn}}}}}}{{{f{BCl}}{f{Dh}}}{{B`{Fl}}}}{{{f{BCl}}}{{G`{{f{Bh}}}}}}{{{f{BCl}}}{{G`{Bh}}}}{{{f{BCl}}}{{G`{{f{Dh}}}}}}{{{f{BCl}}}{{f{{Dn{Ej}}}}}}{{{f{BjBCl}}}{{f{Bj{G`{Ej}}}}}}{{{f{BCl}}Fl}{{Ah{BEh}}}}{{{f{BCl}}Fl{f{BjBEh}}}{{Ah{b}}}}{{{f{BCl}}Fl{f{BjBEh}}}b}{{{f{BCl}}}{{B`{{Ah{E`}}}}}}`{{{f{BCl}}e}{{Ah{BEj}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{{f{BCl}}{G`{Ej}}dd}{{Ah{BEj}}}}{{{f{BEb}}{f{Bjc}}}bABf}{{{f{BjBCl}}{B`{Nh}}}{{Ah{BBd}}}}{{{f{BCl}}{B`{Fl}}}BCl}{{{f{BCl}}}Fl}{{{f{BCl}}{f{{Dn{Ej}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{{Dn{Ej}}}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{{Dn{Ej}}}}}{{f{BjBCl}}}}{{{f{BCl}}{f{Dh}}}{{f{c}}}{}}{{{f{BCl}}BEl}{{f{c}}}{}}{{{f{BCl}}Fl}{{f{c}}}{}}{{{f{BCl}}{Lj{Fl}}}{{f{c}}}{}}{{{f{BCl}}{BEn{Fl}}}{{f{c}}}{}}{{{f{BCl}}{BF`{Fl}}}{{f{c}}}{}}{{{f{BCl}}{BFb{Fl}}}{{f{c}}}{}}{{{f{BCl}}{BFd{Fl}}}{{f{c}}}{}}{{}Fl}0000{{{f{BjBCl}}Flc}{{Ah{{f{BjBCl}}}}}BDn}{{}c{}}000000{{{f{BCl}}}{{Ah{Gh}}}}{{{f{BCl}}}d}1{{{f{BCl}}}{{`{{Jj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}AMnd}BFf}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{BCl}}}BFh}{{{f{BCl}}}Fl}4{{{f{BCl}}}{{Ah{{B`{Ej}}}}}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}1{{{f{BCl}}{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{BCl{f{Af}}}c{}}55{{{G`{Ej}}}{{Ah{BCl}}}}{{Fl{G`{Ej}}}BCl}{{{G`{Ej}}}BCl}22{{{G`{Ej}}Fl}{{Ah{BCl}}}}0{{{f{BjBFf}}}{{B`{c}}}{}}{{{f{BjBFh}}}{{B`{c}}}{}}{{{f{BCl}}}BCl}{{{f{BCl}}}{{`{{Ml{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}ed}{{Ah{{G`{BCl}}}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{BCle}{{Ah{c}}}{}{{Cf{BCl}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}e}{{Ah{c}}}{}{{Cf{{f{BjBCl}}}{{Cd{{Ah{c}}}}}}}}{{BClgc}{{Ah{e}}}{}{}{{Cf{BClc}{{Cd{{Ah{e}}}}}}}}{{{f{BjBCl}}}{{B`{Ej}}}}{{{f{BCl}}{f{BCl}}}d}?{{{f{BCl}}{f{Af}}}c{}}?{{{f{BjBCl}}{f{Dh}}Bh}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{Dh}}c}{{Ah{{f{BjBCl}}}}}BFj}{{{f{BjBCl}}Flc}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Bhc}{{Ah{{f{BjBCl}}}}}BFj}<`{{{f{BCl}}{f{Af}}dd{B`{Il}}}{{Ah{BCl}}}}0{{{f{BCl}}Fldd{B`{Il}}}{{Ah{BCl}}}}{{{f{BCl}}}BDl}{{{f{BCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}Fl}{{B`{{f{Ej}}}}}}{{{f{BCl}}c}{{Ah{BCl}}}{{BFl{Fl}}}}{{{f{BCl}}c}{{Ah{{G`{Ej}}}}}{{BFn{Bh}}}}3{{{f{BCl}}e{f{BG`}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}e{f{BDl}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}e}{{Ah{b}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}Fl}b}{{{f{BCl}}}{{Hh{FlFl}}}}{{{f{BCl}}Ln}BCl}{{{f{BCl}}}d}{{{f{BjBCl}}}b}{{{f{BCl}}}Fl}{{{f{BFf}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BFh}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BCl}}LnFl}BCl}00{{{f{BCl}}cEl}{{Ah{BCl}}}{{BFn{Bh}}}}{{{f{BjBCl}}cEl}{{Ah{{f{BjBCl}}}}}{{BFn{Bh}}}}{{{f{BCl}}Ln}{{Hh{BClBCl}}}}0{{{f{BjBCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{BClFld}{{G`{BCl}}}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}{{{f{BCl}}{B`{Fl}}}BCl}{{{f{BCl}}{f{Eh}}}{{Ah{BCl}}}}{BCl{{G`{Ej}}}}{{{f{BCl}}{f{Eh}}}BCl}{{{f{BCl}}{f{Eh}}d}BCl}{{{f{BCl}}BGb}{{Ah{Nl}}}}{fc{}}00{fDd}{{{f{BjBCl}}{B`{{f{Dh}}}}{B`{{O`{Dd{G`{Dd}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{B`{{f{Dh}}}}{B`{{O`{Bh{G`{Bh}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dh}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Af}}}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}Fle}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{{Ah{c}}}}}}}}{c{{Ob{e}}}{}{}}000{{{Hh{BGd{f{BEf}}}}}{{Ah{BCl}}}}1{BGf{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{Ah{{f{BEh}}}}}}}}}}{{{f{BCl}}{f{Dh}}}{{Ah{Fl}}}}{{}{{Ob{c}}}{}}0000{f{{Ob{GbBAn}}}}{fOd}0000{{{f{BCl}}{B`{{f{{Dn{Dd}}}}}}BEb{B`{{Hh{LnFl}}}}}{{Ah{BCl}}}}{{{f{BCl}}d{B`{{G`{Bh}}}}BEb{B`{{Hh{LnFl}}}}}{{Ah{BCl}}}}1{{{f{BCl}}{f{BCl}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{BCl}}}b}{{}c{}}0000{{{f{BCl}}}Fl}{{{f{BjBCl}}c}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}c{f{BDl}}}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Ej}{{f{BjBCl}}}}{{{f{BCl}}Bh{B`{I`}}}{{Ah{BCl}}}}{{{f{BjBCl}}Bh{B`{I`}}}{{f{BjBCl}}}}``````{{fh}b}0{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}c}e{AbKl}{}}{{Ejc}e{AbKl}{}}{{EjEj}c{}}{{{f{Ej}}{f{Al}}}Ej}0000000{{{f{Ej}}{f{Al}}nN`}Ej}1{{{f{Ej}}{f{Al}}Dl}Ej}{{{f{BjEj}}{f{Ej}}}{{Ah{{f{BjEj}}}}}}{{{f{Ej}}c}Ej{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{Ej}}Ef}Eh}{{{f{BGh}}}{{f{Af}}}}{{{f{Ej}}}{{f{Af}}}}{{{f{Ej}}}{{B`{{f{`}}}}}}{{{f{Ej}}}{{B`{{f{BGh}}}}}}{{{f{Ej}}}{{B`{{f{Af}}}}}}{{{f{BGh}}}Af}{{{f{Ej}}}{{Ah{{f{En}}}}}}{{{f{Ej}}}{{Ah{{f{AK`}}}}}}{{{f{Ej}}}{{B`{BGj}}}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}{f{Ej}}}{{Ah{Ej}}}}{{EjEj}c{}}0202{{{f{Ej}}}{{Ah{{f{Gh}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{BGh}}{f{E`}}}{{Ah{BGh}}}}{{{f{Ej}}{f{E`}}}{{Ah{Ej}}}}10{{{f{BGh}}{f{E`}}Ff}{{Ah{BGh}}}}{{{f{Ej}}{f{E`}}Ff}{{Ah{Ej}}}}{{{f{Ej}}}{{Ah{{f{AMb}}}}}}{{{f{Ej}}}Ej}{{{f{BGh}}}BGh}1{{f{f{Bjc}}}b{}}0{fb}0{{{f{Ej}}}{{Ah{{f{Jd}}}}}}{{}Ej}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{{{f{Ej}}{f{Ej}}}c{}}{{EjEj}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}c}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}{{Ah{Ej}}}}{Flb}0={{{f{BGh}}}{{f{E`}}}}{{{f{Ej}}}{{f{E`}}}}{{{f{Ej}}{f{Ej}}}d}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}011{{{f{Ej}}}{{Ah{Ej}}}}{{{f{BjEj}}{f{Ej}}}{{Ah{{f{BjEj}}}}}}{{{f{Ej}}HnFl}{{Ah{Ej}}}}{{{f{Ej}}}{{Ah{{f{AKn}}}}}}{{{f{Ej}}}{{Ah{{f{AL`}}}}}}{{{f{Ej}}}{{AKl{Mj}}}}{{{f{Ej}}AG`}{{Ah{Ej}}}}{{{f{Ej}}{f{{l{An}}}}}{{Ah{Ej}}}}{{{f{BGh}}{f{BjGl}}}Gn}{{{f{Ej}}{f{BjGl}}}Gn}{cc{}}0{AfEj}{BGhEj}{{AfFl}BGh}{{BhFl{f{E`}}}Ej}{{{f{Ej}}FlFl}Ej}{{{f{Ej}}Fl}{{Ah{Hn}}}}{{{f{Ej}}}Fl}{{{f{Ej}}}Ib}{{{f{Ej}}}{{B`{{Fd{Fb}}}}}}{{{f{Ej}}Fl}{{B`{{f{If}}}}}}{{{f{Ej}}Fl}Hn}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{BGh}}}d}{{{f{Ej}}}d}{{{f{Ej}}{B`{Fl}}}Ej}{{{f{Ej}}}{{Ah{{f{BBh}}}}}}{{{f{Ej}}}{{Ah{{f{BBj}}}}}}{{{f{Ej}}}{{Ah{{f{BBl}}}}}}{{{f{Ej}}}{{Ah{{f{BBf}}}}}}{{{f{Ej}}}{{Ah{{f{Eh}}}}}}{{}Fl}0{{}c{}}0{BDnEj}{BGhEj}{EjEj}{EjBCl}{{{f{BjEj}}}{{f{BjAf}}}}>={{{f{Ej}}}{{Ah{Gh}}}}000{{{f{Ej}}}Gh}0{{{f{Ej}}}Jn}{{{f{BGh}}}{{B`{{f{Af}}}}}}{{{f{BGh}}}Fl}{{{f{Ej}}}Fl}{{{f{Ej}}}{{Ah{{f{Eb}}}}}}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{Ej}}}{{Ah{Kn}}}}0{{Ejc}e{AbKl}{}}{{{f{Ej}}c}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}{{EjEj}c{}}{{{f{BGh}}}{{f{Bh}}}}{{{f{Ej}}}{{f{Bh}}}}{{BhKnFl}BGh}{{Bhc}Ej{}}{{BhE`}BGh}{{Bh{f{E`}}}Ej}{{{f{Ej}}FlFl}Ej}{{BhKnFl}Ej}0==?{{{f{Ej}}}BGl}={{{f{Ej}}}Ej}:=<;{{{f{BjBGh}}Bh}{{f{BjBGh}}}}{{{f{BjEj}}Bh}b}{{{f{Ej}}{f{{Dn{AOj}}}}}{{Ah{Ej}}}}{{{f{BGh}}Fl}BGh}4{{{f{Ej}}ndd{B`{Il}}}{{Ah{Ej}}}}{{{f{Ej}}Fldd{B`{Il}}}{{Ah{Ej}}}}{{{f{BGh}}}{{f{Kn}}}}{{{f{BjEj}}Jn}b}{{{f{Ej}}Ln}Ej}{{{f{BjEj}}}b}{{{f{Ej}}{B`{Il}}}Ej}{{{f{Ej}}LnFl}Ej}{{{f{Ej}}Ef}{{Ah{Ej}}}}{{{f{Ej}}Ln}{{Hh{EjEj}}}}{{{f{Ej}}}{{Ah{{f{Db}}}}}}{{{f{BGh}}{f{E`}}}{{Ah{BGh}}}}{{{f{Ej}}{f{E`}}}{{Ah{Ej}}}}{{EjEj}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}c}e{AbKl}{}}{{{f{Ej}}{B`{Fl}}}Ej}{{{f{Ej}}{f{Eh}}}{{Ah{Ej}}}}{BGhAf}{EjAf}{{{f{Ej}}{f{{Dn{I`}}}}}{{Ah{Ej}}}}{{{f{Ej}}{f{{Dn{I`}}}}}Ej}{{{f{Ej}}{f{Eh}}}Ej}{fc{}}0{{{f{Ej}}}Ej}{{{f{BGh}}}Af}{{{f{Ej}}c}{{Ah{Ej}}}{{Cf{{f{Af}}}{{Cd{{Ah{Af}}}}}}}}{{{f{Ej}}}{{B`{{f{En}}}}}}{{{f{Ej}}}{{B`{{f{AK`}}}}}}{{{f{Ej}}}{{B`{{f{Gh}}}}}}{{{f{Ej}}}{{B`{{f{AMb}}}}}}{{{f{Ej}}}{{B`{{f{Jd}}}}}}{{{f{Ej}}}{{B`{{f{AKn}}}}}}{{{f{Ej}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}0{{{f{Ej}}}{{B`{{f{BBh}}}}}}{{{f{Ej}}}{{B`{{f{BBj}}}}}}{{{f{Ej}}}{{B`{{f{BBl}}}}}}{{{f{Ej}}}{{B`{{f{BBf}}}}}}{{{f{Ej}}}{{B`{{f{Eh}}}}}}{{}{{Ob{c}}}{}}0{{{f{Ej}}}{{B`{{f{Eb}}}}}}{{{f{Ej}}}{{B`{{f{Db}}}}}}{{{f{Ej}}}{{B`{{f{BBb}}}}}}{{{f{Ej}}}{{B`{{f{B@d}}}}}}{{{f{Ej}}}{{B`{{f{BBd}}}}}}{{{f{Ej}}}{{B`{{f{BB`}}}}}}{fOd}0{{{f{Ej}}}{{Ah{{f{BBb}}}}}}{{{f{Ej}}}{{Ah{{f{B@d}}}}}}{{{f{Ej}}}{{Ah{{f{BBd}}}}}}{{{f{Ej}}}{{Ah{{f{BB`}}}}}}{{{f{Ej}}}{{Ah{Ej}}}}0{AfBGh}{{{f{Ej}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{Ej}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{}c{}}0{{EjBh}Ej}{{{f{Ej}}c}Ej{AbKl}}{{{f{Ej}}{f{Gh}}{f{Ej}}}{{Ah{Ej}}}}{{{f{Ej}}{f{{l{An}}}}{f{Ej}}}{{Ah{Ej}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BGn}}}BGn}{{f{f{Bjc}}}b{}}{fb}{{}BGn}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BGn}}{f{BGn}}}d}{{f{f{c}}}d{}}0{{{f{BGn}}{f{BjGl}}}Gn}{cc{}}{{{f{BGn}}{f{Bjc}}}bABf}`{{}Fl}{{}c{}}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}``4````````````````````````````````{{fh}b}000{{{f{BEj}}}{{Ah{BCl}}}}`{{{f{BH`}}}{{f{{Dn{BHb}}}}}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cl{BCl}{{Cd{{Ah{BCl}}}}}}JfJh}}{{{f{Al}}}Eb}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BH`}}}BH`}{{{f{Al}}}Al}{{{f{BEj}}}BEj}{{{f{BHd}}}BHd}{{f{f{Bjc}}}b{}}000{fb}000;{{}BH`}{{}Al}{Fl{{f{c}}}{}}00{{{f{BHf}}}{{f{c}}}{}}11111{Fl{{f{Bjc}}}{}}0000000`{{BHhe}{}{}{{BHj{c}}}}{Flb}000{{{f{BjBH`}}}b}1111{{{f{BH`}}{f{BH`}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}000`{{{f{BHl}}}I`}{{{f{BH`}}}{{f{{Dn{I`}}}}}}{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjBH`}}}{{f{Bj{G`{I`}}}}}}{{{f{BH`}}{f{BjGl}}}Gn}{{{f{Al}}{f{BjGl}}}Gn}{{{f{BEj}}{f{BjGl}}}Gn}{{{f{BHd}}{f{BjGl}}}Gn}0{{{f{Dh}}BHd}Bh}{cc{}}000{{{G`{{G`{BHn}}}}}BH`}{{{G`{BHn}}}BH`}2{BH`Al}333{cBH`{{Hd{}{{Bb{BHn}}}}}}{cBH`{{Hj{}{{Bb{BHn}}}}}}{{{f{Al}}Fl}BHl}{{{f{BEj}}}{{f{Al}}}}{{{f{BjBEj}}}{{f{BjAl}}}}{{{f{Al}}}Eh}{{{f{BI`}}dd}{{Ah{Al}}}}0{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjAl}}}{{f{BjBH`}}}}{{}Fl}0000000{{}c{}}0000000{AlBH`}1{BH`c{}}{{{f{BH`}}}c{}}301{{{f{BHl}}}d}{{{f{Al}}}d}{{{f{BH`}}}d}{{{f{BH`}}}{{BId{{BIb{{Kb{I`}}}}{Kb{BHb}}}}}}{{{f{Al}}}BIf}{{{f{BEj}}}{{G`{Ej}}}}{{{f{BEj}}{B`{{Hh{LnFl}}}}}{{G`{Ej}}}}={{{f{BHl}}}Fl}{{{f{Al}}}Fl}?????{{{G`{I`}}{G`{BHb}}d}BH`}{{{f{BCl}}{G`{Ej}}Al{B`{{G`{Bh}}}}}BEj}{{{f{BjBIf}}}{{B`{c}}}{}}{{{f{BjBIf}}Fl}{{B`{c}}}{}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cf{BCl}{{Cd{{Ah{BCl}}}}}}JfJh}}{f}{{{f{Al}}}BHh}{{{f{BEj}}nN`}{{Ah{BCl}}}}{{BEje}BEj{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{Al}}LnFl}BHf}{{{f{BjBH`}}}b}{{{f{BjAl}}}b}{{{f{BEj}}Dl}{{Ah{BCl}}}}{{{f{BEj}}}{{Ah{BCl}}}}{Al{{G`{I`}}}}0{BEjAl}{{{f{BjBEj}}}Al}{fc{}}000{fDd}{c{{Ob{e}}}{}{}}0000000{{}{{Ob{c}}}{}}0000000{f{{Ob{GbBAn}}}}{fOd}0000000{AlAl}{{{f{Al}}}{{f{BH`}}}}{{{f{Al}}}{{f{BIh}}}}={{}c{}}0000000`````{{{f{BH`}}c}Af{{Cf{{Hh{I`{f{BHb}}}}}{{Cd{B`}}}}JfJh}}{{{f{BH`}}c}Af{{Cf{{Hh{I`{f{BHb}}}}}{{Cd{}}}}JfJh}}{{{f{{Dn{{BIj{I`}}}}}}c}Af{{Cf{{BIj{I`}}}{{Cd{B`}}}}JfJh}}{{{f{{Dn{{BIj{I`}}}}}}c}Af{{Cf{{BIj{I`}}}{{Cd{}}}}JfJh}}{{{f{{Dn{c}}}}e{B`{BIl}}}{{AJj{c}}}{BInBJ`}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{Dn{c}}}}{f{Hf}}e{B`{BIl}}}{{AJj{c}}}{BInBJ`}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{l{c}}}}I`I`}{{l{c}}}Cb}{{{f{BIh}}{f{{Dn{Fn}}}}}d}{{{f{BJb}}{f{Al}}}Af}{{BJdBJd}BJd}0`{{{f{BJf}}{f{BCl}}{f{Al}}}{{Ah{Af}}}}{{{f{BJf}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJh}}Hn}{{B`{b}}}}{{{f{BjBJj}}{f{Hn}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJh}}}BJh}{{{f{BJj}}}BJj}{{{f{BEh}}}BEh}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dn{c}}}}}E`{{BAb{E`}}}}{{}BEh}{Fl{{f{c}}}{}}00{Fl{{f{Bjc}}}{}}00{Flb}00{{{f{BEh}}{f{BEh}}}d}{{f{f{c}}}d{}}0{{{f{BEh}}{f{BjGl}}}Gn}{cc{}}{{{Hh{{f{E`}}Fl}}}BJh}1{{{Hh{{f{E`}}Fl}}}BJj}2{{gFl}BDl{{B@j{Bh}}}{{B@j{E`}}}{{Bf{}{{Bb{{G`{{Hh{ce}}}}}}}}}}{{}Fl}00{{}c{}}00{BJhAf}{BJjAf}{{{f{E`}}Fl}BJh}{{{f{E`}}Fl}BJj}{{{G`{Hn}}}BEh}{{{f{BjBJh}}Fl}Af}{{{f{BjBJj}}Fl}Af}{{{f{{Dn{BEh}}}}{B`{Fl}}}{{Ah{BDl}}}}0{{{f{{Dn{BEh}}}}{B`{Fl}}}{{Ah{{G`{E`}}}}}}{fc{}}00{c{{Ob{e}}}{}{}}00{{}{{Ob{c}}}{}}00{fOd}00==={{{f{{Dn{BCl}}}}}{{Ah{BCl}}}}{{{f{{Dn{BCl}}}}d}{{Ah{BCl}}}}````{{IlIl}Il}{{{f{{Dn{BCl}}}}{B`{Nh}}}{{Ah{{Hh{{G`{BBd}}Nh}}}}}}{{{f{{AJn{Ln}}}}Nh{f{Bj{G`{Il}}}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BJl}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BJl}}}Il}{cc{}}{{}Fl}{{}c{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BJn}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}0{{{f{BJn}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}05{{{f{BjBJl}}{f{{Dn{Dl}}}}}b}{{{f{BjBJl}}Mf}b}{{{f{BjBJl}}Ln}b}{{{f{BjBJl}}Lh}b}{{{f{BjBJl}}Il}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Ld{ce}}}}}{{f{e}}}NdBK`}{{{f{{Ld{c}}}}}BKb{BKdNd}}{{{f{{Ld{ce}}}}}{}NdBK`}{{{f{{Ld{c}}}}}MfBKf}{{{f{Bh}}}{{f{{Dn{Dl}}}}}}{{{f{Bh}}}{{f{BKh}}}}{{{f{Bh}}}{{f{Dh}}}}{{{f{Bh}}}{{f{BKj}}}}{{{f{{Ld{ce}}}}}{{f{c}}}NdBK`}2{{{Ld{{BKl{c}}e}}}{{Ld{ce}}}{}BK`}{{{Ld{{Dn{{BKl{c}}}}e}}}{{Ld{{Dn{c}}e}}}{}BK`}{f{{f{c}}}{}}050003000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{{Ld{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}`{{{f{BKn}}{f{Af}}}{{Ah{Af}}}}{{{f{BKn}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Of}}}Of}{{{f{BL`}}}BL`}{{{f{{Ld{ce}}}}}{{Ld{ce}}}Nd{BK`A@n}}{{{f{Nb}}}Nb}{{{f{BGb}}}BGb}{{{f{B@l}}}B@l}{{{f{N`}}}N`}{{{f{BIl}}}BIl}{{{f{BLb}}}BLb}{{{f{BLd}}}BLd}{{{f{BLf}}}BLf}{{f{f{Bjc}}}b{}}00000000000{fb}00000000000{{{f{Bh}}{f{Bh}}}AOn}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}AOn{BLhNd}BK`}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}0{{AKjBDb}AKj}{AKjAKj}{{{f{H`}}{f{ADj}}}{{Fd{H`}}}}``{{}b}{cbBK`}{{}Bh}{{}{{Ld{c}}}BLj}{{}{{Ld{Dh}}}}{{}{{Ld{{Dn{c}}}}}{}}{{}{{Ld{BLl}}}}{{}Nb}{{}BGb}{{}B@l}{{}N`}`{Fl{{f{c}}}{}}0{{{f{Bh}}}f}111{{{f{{Ld{ce}}}}}{{f{c}}}NdBK`}222222222{Fl{{f{Bjc}}}{}}0000000000000{{{f{{Ld{c}}}}}{{f{Dh}}}{AJfNd}}`{{{Ld{ADlc}}}{{Ob{{Ld{ec}}{Ld{ADlc}}}}}BK`{ADlJfJh}}{{{Ld{ADlc}}}{{Ld{ec}}}BK`{ADlJfJh}}{{{f{{Ld{ce}}}}}{{BLn{ce}}}Nd{A@nBK`}}{Flb}0000{{{f{Bj{Ld{ce}}}}}bNdBK`}111111111{{{f{B@l}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kh{Dh}}Nd}}{{{f{Of}}{f{Of}}}d}{{{f{{Ld{H`}}}}{f{H`}}}d}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BM`Nd}BK`}{{{f{{Ld{BMb}}}}{f{BMb}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BIl}}{f{BIl}}}d}{{{f{BLb}}{f{BLb}}}d}{{{f{BLd}}{f{BLd}}}d}{{{f{BLf}}{f{BLf}}}d}{{f{f{c}}}d{}}0000000000000{BL`{{Hh{LhLh}}}}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Bj{Ld{AD`}}}}}{{Ob{bBMd}}}}{{{f{AKj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Bh}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Of}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BL`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{ADnNd}BK`}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{BDfNd}BK`}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}NdBK`}{{{f{Nb}}{f{BjGl}}}Gn}{{{f{BGb}}{f{BjGl}}}Gn}{{{f{B@l}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{N`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BIl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLb}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLf}}{f{BjGl}}}{{Ob{bB@f}}}}`{BMfAKj}{BMhAKj}{BMdAKj}{cc{}}{BMjAKj}1{GbBh}{{{f{Dh}}}Bh}{DdBh}{{{f{Dd}}}Bh}{LhOf}66{Dd{{Ld{Dh}}}}{BMl{{Ld{BKj}}}}8{BMnc{}}{{{G`{ce}}}{{Ld{{Dn{c}}e}}}{}{BK`A@n}}{Gb{{Ld{Dh}}}}{{{f{BLl}}}{{Ld{BLl}}}}{{{Ld{Dh}}}{{Ld{{Dn{Dl}}}}}}{BN`{{Ld{BKh}}}}{BNb{{Ld{BLl}}}}{{{BIj{c}}}{{Ld{{Dn{c}}}}}{}}{{{f{{Dn{c}}}}}{{Ld{{Dn{c}}}}}A@n}{{{Fd{ce}}}{{Ld{ce}}}NdBK`}{c{{Ld{c}}}{}}{{{f{Dh}}}{{Ld{Dh}}}}{{{f{BKj}}}{{Ld{BKj}}}}{{{f{BKh}}}{{Ld{BKh}}}}{{{AKl{c}}}{{Ld{c}}}{BNdNd}}{cc{}}00000000{{c{B`{Hf}}}BNf{}}{{{BNh{Ln}}{BNh{Dl}}{B`{Hf}}}BNj}{{{BNh{Ln}}{BNh{Dl}}{B`{Hf}}}BNl}{cBh{{Hd{}{{Bb{{f{Dh}}}}}}}}{cBh{{Hd{}{{Bb{{AKl{Dh}}}}}}}}{cBh{{Hd{}{{Bb{{Fd{Dh}}}}}}}}{cBh{{Hd{}{{Bb{Dd}}}}}}{cBh{{Hd{}{{Bb{{f{BDj}}}}}}}}{cBh{{Hd{}{{Bb{BDj}}}}}}{cBh{{Hd{}{{Bb{{f{Bh}}}}}}}}{cBh{{Hd{}{{Bb{Bh}}}}}}{e{{Ld{{Dn{c}}}}}{}{{Hd{}{{Bb{c}}}}}}{{gFl}{{BNn{Ln}}}Kh{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}0{e{{BNn{Ln}}}{{Hd{}{{Bb{{B`{d}}}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BNn{Ln}}}BJ`{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}2{e{{Ld{{Dn{c}}}}}Jf{{Hj{}{{Bb{c}}}}}}{{}{{Ld{c}}}Nd}{c{{Ld{ec}}}BK`Nd}{{{f{Dh}}}Bh}0{{{f{Dh}}}{{Ob{BO`}}}}{DdBh}{{Bhc}BOb{}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BOdNd}BK`}{{{f{Bj{Ld{ce}}}}}{{B`{{f{Bjc}}}}}NdBK`}{{{f{Bj{Ld{ce}}}}}{{f{Bjc}}}NdBK`}{{{f{Fn}}Fl}Hn}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Ld{ce}}}}{f{Bjg}}}b{BOfNd}BK`ABf}{{{f{BGb}}{f{Bjc}}}bABf}{{{f{B@l}}{f{Bjc}}}bABf}{{{f{N`}}{f{Bjc}}}bABf}{{{f{BLf}}{f{Bjc}}}bABf}{{{f{Of}}}Lh}{{}b}{cb{A@nBK`}}{{{f{{Dn{Lh}}}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{}Fl}0000000000000`{{{f{BjBL`}}}{{f{BjIl}}}}{{}c{}}0000000000000{{}Ej}{{{Ld{ce}}}{{B`{c}}}{}BK`}{{{Ld{ce}}}{}NdBK`}{{{Ld{ce}}}{{Hh{e}}}NdBK`}{{{Ld{BOh}}}Af}{BhDd}{{{f{BL`}}}d}{{{f{Of}}}d}`{{{f{{Ld{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BEf}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BOdNd}BK`}`0{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{Bj{Ld{ce}}}}}{{f{Bjc}}}{BOjNd}{BK`A@n}}{{{f{BOl}}}Kn}0{{{f{BOn}}}Kn}```11`{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BM`Nd}BK`}{{C@`Fl}{{B`{Fl}}}}{{Bhc}C@b{}}{c{{Ld{c}}}{}}{{BhADjd}B@l}{e{{Ld{c}}}{}{{Oh{{f{{BLn{c}}}}}{{Cd{c}}}}}}{{ge}{{Ld{ce}}}{}BK`{{Oh{{f{{BLn{ce}}}}}{{Cd{c}}}}}}{{ce}{{Ld{ce}}}{}BK`}{{}{{Ld{{BKl{c}}}}}{}}{c{{Ld{{BKl{e}}c}}}BK`{}}{Fl{{Ld{{Dn{{BKl{c}}}}}}}{}}{{Flc}{{Ld{{Dn{{BKl{e}}}}c}}}BK`{}}3210`{{}Of}{{}BL`}{{{f{Bh}}{f{Bh}}}{{B`{AOn}}}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}{{B`{AOn}}}{BOdNd}BK`}{c{{C@d{{Ld{c}}}}}{}}{{ce}{{C@d{{Ld{ce}}}}}{}BK`}`````{{{f{BOl}}}Kn}0{{{f{{Ld{c}}}}{f{BjC@f}}}b{AJfNd}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}dNdBK`}{{{f{BOn}}nN`}{{Ah{Kn}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{Dn{Dl}}}}}{{Ob{FlBMd}}}}{{{f{Bj{Ld{AD`}}}}C@h}{{Ob{bBMd}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{G`{Dl}}}}}{{Ob{FlBMd}}}}{{{f{Bj{Ld{AD`}}}}{f{BjDd}}}{{Ob{FlBMd}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{Dn{C@j}}}}}{{Ob{FlBMd}}}}`{{{f{Bj{Ld{AD`}}}}C@l}{{Ob{IlBMd}}}}`{{{f{AKd}}FlFl}AKd}0{{{f{{Ld{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}{{{f{C@n}}Dl}Kn}{{LhLh}BL`}`{{{f{{Ld{ce}}}}}FlNdBK`}>>{{{f{Of}}}{{B`{Lh}}}}{fc{}}00000000000{fDd}00{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{c{{Ob{e}}}{}{}}0000{{{Ld{{Dn{c}}e}}}{{Ob{{Ld{{BIj{c}}e}}}}}{}BK`}111111111{{}{{Ob{c}}}{}}0000000000000{{C@`Fl}{{Ob{FlAKj}}}}{c{{Ob{{Ld{c}}CA`}}}{}}{{ce}{{Ob{{Ld{ce}}CA`}}}{}BK`}{{}{{Ob{{Ld{{BKl{c}}}}CA`}}}{}}{c{{Ob{{Ld{{BKl{e}}c}}CA`}}}BK`{}}10{c{{Ob{{C@d{{Ld{c}}}}CA`}}}{}}{{ce}{{Ob{{C@d{{Ld{ce}}}}CA`}}}{}BK`}{f{{Ob{GbBAn}}}}00{{{Ld{ce}}}{{Ob{c{Ld{ce}}}}}{}BK`}{fOd}0000000000000{{{Ld{ce}}}cA@nBK`}`{{{f{C@n}}Dl}Kn}{{}c{}}0000000000000{{{f{{Ld{ce}}}}}FlNdBK`}``{{B@l{CAb{BhBh}}}B@l}{{{f{AKj}}c}AKj{{Oh{{f{Dh}}}{{Cd{Dd}}}}}}{{{f{Bj{Ld{AD`}}}}{f{{Dn{Dl}}}}}{{Ob{FlBMd}}}}{{{f{BjBh}}BDj}{{Ob{bB@f}}}}{{{f{BjBh}}CAd}{{Ob{bB@f}}}}{{{f{BjBh}}{f{Dh}}}{{Ob{bB@f}}}}{{{f{Bj{Ld{AD`}}}}{f{{Dn{CAf}}}}}{{Ob{FlBMd}}}}```````{{c{B`{Hf}}}BNf{}}{{{BNh{Ln}}{BNh{Dl}}{B`{Hf}}}BNj}{{{BNh{Ln}}{BNh{Dl}}{B`{Hf}}}BNl}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{CAh{B`{{f{ADj}}}}}{{Ob{{BNn{Ln}}AKj}}}}{cc{}}{{}Fl}{{}c{}}{{{f{CAh}}}d}{FlCAh}{{{f{CAh}}}{{f{{Dn{Ln}}}}}}{{{f{BjCAh}}{f{H`}}}b}{{{f{BjCAh}}}b}{{{f{BjCAh}}{f{{Dn{{Fd{H`}}}}}}}b}1{{{f{BjCAh}}{B`{{f{H`}}}}}b}{CAh{{CAj{Ln}}}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd};`{{fh}b}{{{f{CAl}}}{{f{ADl}}}}{{{f{BjCAl}}}{{Fd{H`}}}}{{{f{BjCAl}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CAl}}}CAl}{{f{f{Bjc}}}b{}}{fb}{{}CAl}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{CAl}}}{{f{ADj}}}}{{{f{BjCAl}}Fl}b}{{{f{CAl}}{f{BjGl}}}{{Ob{bB@f}}}}{cc{}}{{}Fl}{{}c{}}{{{f{CAl}}}Fl}{FlCAl}{{{f{BjCAl}}}b}70{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{CAl}}}{{B`{{f{CAn}}}}}}8```````{{{f{AKd}}FlFl}AKd}0`{{}b}0{{}d}``{{eFlFl}{{CB`{Ln}}}{{Kh{Dh}}}{{Bf{}{{Bb{c}}}}}}{{eFlFl}{{AJn{Ln}}}{{Kh{{Dn{Dl}}}}}{{Bf{}{{Bb{c}}}}}}{Ilb}`{{fh}b}{{{f{Kn}}}Hn}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Kn}}}Kn}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{Kn}}}{{f{E`}}}}{{{f{Kn}}{f{Kn}}}d}{{{f{Kn}}{f{BjGl}}}Gn}{IjKn}{CBbKn}{MfKn}{LnKn}{DlKn}{CBdKn}{LhKn}{IlKn}{cc{}}{CBfKn}{nKn}{{}Fl}{{}c{}}{{KnBh}Ej}{{KnBh}Af}{{{f{Kn}}}d}0{{E`Hn}Kn}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BjKn}}Hn}b}{{{f{Kn}}}{{f{Hn}}}}:{{{B`{n}}E`}Kn}``````{{{f{{CBh{c}}}}{f{{CBh{c}}}}}{{Ah{b}}}{}}{{{f{BEh}}}BDl}{{{f{BEf}}}CBj}{{{f{BEf}}}BDl}{{{f{CBj}}{f{Dh}}}{{B`{Mj}}}}{{{f{BDl}}{f{Dh}}}{{B`{Mj}}}}{{{f{CBj}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{BDl}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{{CBn{}{{CBl{c}}}}}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@nBLjBM`}}{{{f{BDl}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CBj}}}{{Ah{BDl}}}}{{{f{BDl}}}{{Ah{BDl}}}}{{{f{CBj}}AMn}BEf}{{{f{BDl}}AMn}BEf}{{{f{BjCBj}}{f{BDl}}}{{Ah{d}}}}{{{f{BjBDl}}{f{BDl}}}{{Ah{d}}}}{{{f{CBj}}{f{Dh}}}{{Ah{Mj}}}}{{{f{BDl}}{f{Dh}}}{{Ah{Mj}}}}`````````````````{{fh}b}0{{{f{BOh}}}n}0{{Bh{G`{Fn}}{f{ADj}}}{{Ah{Af}}}}{{Bh{G`{Fn}}{f{ADj}}{B`{{f{CC`}}}}}{{Ah{Af}}}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{Afc}e{AbKl}{}}{{{f{Af}}c}e{AbKl}{}}`{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOh}}Ef}Eh}0{{{f{BOh}}}{{Ah{Eh}}}}0`{{{f{Af}}Fl}{{f{Fn}}}}{{{f{BOh}}}{{f{ADl}}}}{{{f{BjBOh}}}{{f{BjADl}}}}0{{{f{Af}}}Eb}{{{f{BjBOh}}}{{f{Bj{l{c}}}}}Cb}{{{f{BOh}}}{{f{{l{c}}}}}Cb}{{{f{Af}}}{{f{BOh}}}}{{{f{BjBOh}}}{{Ah{Fl}}}}0{{{f{BjAf}}}{{Ah{Fl}}}}{{{f{Af}}}{{Ah{{f{En}}}}}}{{{f{Af}}}{{Ah{{f{AK`}}}}}}{{{f{BOh}}{f{Af}}}{{Ah{Af}}}}00000{{{f{Af}}}{{Ah{{f{Gh}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOh}}}{{B`{{Fd{Fb}}}}}}0{{{f{BOh}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Af}}{f{E`}}}{{Ah{Af}}}}0{{{f{Af}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AMb}}}}}}88{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOh}}}Fj}{{{f{Af}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{{f{BOh}}}{{f{{G`{Fn}}}}}}{{{f{BjBOh}}}{{f{Bj{G`{Fn}}}}}}{{{f{BjAf}}}{{f{Bj{G`{Fn}}}}}}{{{f{Af}}}Af}{{{f{Jn}}}Jn}1{{{f{BOh}}}{{Ld{BOh}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{Jd}}}}}}{{}Af}{Fl{{f{c}}}{}}00{{{f{Af}}}{{f{c}}}{}}1{Fl{{f{Bjc}}}{}}000{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Flb}000{{{f{BOh}}}Af}0{{{f{BOh}}}{{f{E`}}}}0{{{f{Jn}}{f{Jn}}}d}{{{f{Af}}{f{Af}}}d}{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Dh}}}{{Ah{Gh}}}}:{{{f{Af}}{f{Dh}}}c{}};233{{f{f{c}}}d{}}0{{{f{Af}}}Fl}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HnFl}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{Af}}}{{Ah{{f{AL`}}}}}}{{{f{BOh}}}{{AKl{Mj}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOh}}{f{Gh}}}{{Ah{Af}}}}{{{f{BOh}}}Kn}0{{{f{Jn}}{f{BjGl}}}Gn}{{{f{Af}}{f{BjGl}}}Gn}0{{{f{Af}}}Dd}{cc{}}00{{{l{c}}}AfCb}1{{Bh{f{{Dn{Hn}}}}d}{{Ah{Af}}}}{{Bh{f{{Dn{Hn}}}}{f{E`}}d}{{Ah{Af}}}}{{BhFn}{{Ah{Af}}}}{{Bh{G`{Fn}}}{{Ah{Af}}}}{{Bh{G`{Fn}}{f{E`}}}Af}{cAf{{Hd{}{{Bb{Ln}}}}}}{cAf{{Hd{}{{Bb{{f{Il}}}}}}}}{cAf{{Hd{}{{Bb{{B`{{f{Dh}}}}}}}}}}{cAf{{Hd{}{{Bb{{f{Dh}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Dd}}}}}}}}{cAf{{Hd{}{{Bb{{f{d}}}}}}}}{cAf{{Hd{}{{Bb{Dd}}}}}}{cAf{{Hd{}{{Bb{d}}}}}}{cAf{{Hd{}{{Bb{{B`{d}}}}}}}}{cAf{{Hd{}{{Bb{{f{n}}}}}}}}{cAf{{Hd{}{{Bb{n}}}}}}{cAf{{Hd{}{{Bb{{B`{n}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Lh}}}}}}}}{cAf{{Hd{}{{Bb{Il}}}}}}{cAf{{Hd{}{{Bb{Ij}}}}}}{cAf{{Hd{}{{Bb{Lh}}}}}}{cAf{{Hd{}{{Bb{{B`{Ij}}}}}}}}{cAf{{Hd{}{{Bb{{f{Lh}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Il}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ln}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Ln}}}}}}}}{cAf{{Hd{}{{Bb{{f{Mf}}}}}}}}{cAf{{Hd{}{{Bb{Mf}}}}}}{cAf{{Hd{}{{Bb{{B`{Mf}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ij}}}}}}}}{{Bh{G`{Mh}}}Af}{{Bh{G`{Lh}}}Af}{{Bh{G`{Ln}}}Af}{{Bh{G`{n}}}Af}{{Bh{G`{Il}}}Af}{{Bh{G`{Mf}}}Af}{{Bh{G`{Ij}}}Af}{{BhFl{f{E`}}}Af}{{{f{Af}}FlFl}Af}{{{f{BOh}}Fl}{{Ah{Hn}}}}{{{f{Af}}}Fl}{{{f{Af}}}Ib}{{{f{Af}}}Af}{{{f{BOh}}}{{B`{{Lf{Fb}}}}}}0{{{f{BOh}}Fl}{{B`{{f{If}}}}}}0{{{f{BOh}}FlFl}{{B`{{f{If}}}}}}0{{{f{BOh}}Fl}Hn}0{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dh}}}c{}}012{{{f{BOh}}}d}{{{f{Jn}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Fl}}}Af}{{{f{Af}}}{{Ah{{f{BBh}}}}}}{{{f{Af}}}{{Ah{{f{BBj}}}}}}{{{f{Af}}}{{Ah{{f{BBl}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{Eh}}}}}}`{{{f{Af}}}{{Ah{Eb}}}}{{}Fl}000{{}c{}}000{Af{{G`{Fn}}}}{{}Ej}{AfBCl}3{BFjAf}{AfAf}??{{{f{Af}}}{{Ah{Gh}}}}000{{{f{BOh}}}Gh}0{{}d}00{{{f{Af}}}Jn}{{{f{Af}}}CCb}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOh}}}Kn}0{{{f{BOh}}}Fl}{{{f{Af}}}Fl}{{{f{BOh}}Fl}Af}0{{{f{Af}}}{{Ah{{f{Eb}}}}}}{{{f{Af}}}{{Hh{{G`{{AGf{Ln}}}}{G`{{B`{Hf}}}}}}}}{{{f{Af}}}Af}{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dh}}}c{}}120{{{f{Af}}}{{Ah{{B`{c}}}}}Kl}{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{BOh}}}{{B`{n}}}}0{{{f{Af}}}Kn}1122322{{AfAf}c{}}6{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}??>{{{f{BOh}}}{{Ah{Fl}}}}0{{{f{BOh}}}{{f{Bh}}}}{{Bhc}Af{{Kh{{Dn{Hn}}}}}}{{Bhc}Af{{Kh{{Dn{{AKl{{Dn{Dl}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{Mf}}}}}}{{Bhc}Af{{Kh{{Dn{Lh}}}}}}{{Bhc}Af{{Kh{{Dn{Ln}}}}}}{{Bhc}Af{{Kh{{Dn{d}}}}}}{{Bhc}Af{{Kh{{Dn{Mh}}}}}}{{Bhc}Af{{Kh{{Dn{Ij}}}}}}{{Bhc}Af{{Kh{{Dn{n}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Dd}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{{G`{Dl}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{d}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Lh}}}}}}}}{{Bhc}Af{{Kh{{Dn{Il}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Il}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Mf}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Ln}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Mh}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Ij}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{n}}}}}}}}{{Bh{Lj{Ln}}}Af}{{Bh{Lj{Mf}}}Af}{{Bh{Lj{Il}}}Af}{{Bh{Lj{Lh}}}Af}{{Bhc}Af{{Kh{{Dn{Af}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Af}}}}}}}}{{Bhc}Af{{Kh{{Dn{{f{Dh}}}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kh{{Dn{{B`{{f{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{{AKl{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{f{{Dn{Dl}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{Dd}}}}}}{{Bhc}Af{{Kh{{Dn{{G`{Dl}}}}}}}}{{Bhc}AfBFj}{{Bhc}Af{{Kh{{Dn{{B`{{f{{Dn{Dl}}}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{{AKl{{Dn{Dl}}}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{AKl{Dh}}}}}}}}{{Bh{f{E`}}}Af}{{{f{BOh}}FlFl}Af}{{BhFl}Af}{{{f{BjCCb}}}{{B`{c}}}{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dh}}}{{Ah{Gh}}}}{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Dh}}}c{}}31{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOh}}}Fl}`{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{Af}}}BGl}{{{f{Af}}}{{Ah{Kn}}}}{{{f{BOh}}nN`}{{Ah{Kn}}}}0{{{f{BOh}}}Af}{{{f{BOh}}}{{B`{Hf}}}}0;{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}{{{f{BjBOh}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dn{AOj}}}}}{{Ah{Af}}}}6{JnJn}{{{f{BOh}}{f{Cf}}Nb}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fldd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fl}Af}{{{f{BjAf}}Jn}b}{{{f{BOh}}Ln}Af}{{{f{BjBOh}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Il}}}Af}{{{f{CCb}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BOh}}LnFl}Af}{{{f{Af}}LnFl}Af}{{{f{Af}}Ef}{{Ah{Af}}}}{{{f{BOh}}Ef}{{Ah{Af}}}}0{{{f{BOh}}Ln}{{Hh{AfAf}}}}{{{f{Af}}Ln}{{Hh{AfAf}}}}{{{f{BOh}}Dl}{{B`{n}}}}0{{{f{BOh}}Dl}{{Ah{Kn}}}}0{{{f{Af}}}{{Ah{{f{Db}}}}}}{{{f{Af}}Fl}{{Ah{{AKl{Dh}}}}}}{{{f{Af}}{f{E`}}}{{Ah{Af}}}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}{{AfAf}c{}}{{{f{Af}}}{{Ah{c}}}Kl}{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{Af}}}{{Ah{Kn}}}}{{{f{Af}}{B`{Fl}}}Af}{{{f{BOh}}{f{Eh}}}{{Ah{Af}}}}{{{f{BOh}}{f{{Dn{I`}}}}}{{Ah{Af}}}}{{{f{BOh}}{f{{Dn{I`}}}}}Af}{{{f{BOh}}{f{Eh}}}Af}{{{f{Af}}{f{{Dn{I`}}}}}Af}{{{f{Af}}FlAMn}Fn}{{{f{Af}}}{{Ah{Af}}}}?{fc{}}0{{{f{Af}}}{{AKl{Af}}}}{fDd}{{AfAf}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{En}}}}}}{{{f{Af}}}{{B`{{f{AK`}}}}}}{{{f{Af}}}{{B`{{f{Gh}}}}}}{{{f{Af}}}{{B`{{f{AMb}}}}}}{{{f{Af}}}{{B`{{f{Jd}}}}}}{{{f{Af}}}{{B`{{f{AKn}}}}}}{{{f{Af}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}000{{{Hh{Bh{G`{Fn}}}}}{{Ah{Af}}}}{{{Hh{{f{B@l}}Fn}}}{{Ah{Af}}}}{{{Hh{{f{B@l}}{G`{Fn}}}}}{{Ah{Af}}}}{{{Hh{BhFn}}}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{BBh}}}}}}{{{f{Af}}}{{B`{{f{BBj}}}}}}{{{f{Af}}}{{B`{{f{BBl}}}}}}{{{f{Af}}}{{B`{{f{BBf}}}}}}{{{f{Af}}}{{B`{{f{Eh}}}}}}{{}{{Ob{c}}}{}}000{{{f{Af}}}{{B`{{f{Eb}}}}}}{{AfAf}{{Ah{Af}}}}{{Bhc}{{Ob{Af}}}{}}{{{f{Af}}}{{B`{{f{`}}}}}}{{{f{BjAf}}{In{c}}}dCb}{{{f{Af}}}{{B`{{f{Db}}}}}}4{f{{Ob{GbBAn}}}}{{{f{Af}}}{{B`{{f{BBb}}}}}}{{{f{Af}}}{{B`{{f{B@d}}}}}}{{{f{Af}}}{{B`{{f{BBd}}}}}}{{{f{Af}}}{{B`{{f{BB`}}}}}}{fOd}000{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{B@d}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{BOh}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOh}}}{{Ah{{f{{l{c}}}}}}}Cb}{{{f{BOh}}Dl}{{B`{n}}}}0{{{f{BOh}}Dl}{{Ah{Kn}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKl}}{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{Af}}{f{Gh}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Cj}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Cj}}}Cj}{{f{f{Bjc}}}b{}}{fb}{{{f{Cj}}}Af}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{cc{}}{{}Fl}{{}c{}}{{{CCd{Af}}}Cj}{{{f{BjCj}}{f{BjFn}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6{{{f{BjCj}}{f{BjFn}}e}c{}{{Cf{{f{Cj}}}{{Cd{c}}}}}}```````````{{fh}b}{{{CCf{}{{Cd{c}}}}{f{Af}}}c{}}{{{f{CCh}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{CCj}}}CCj}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}9877{Flb}{{{f{CCj}}{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{CCj}}{f{BjGl}}}Gn}{cc{}}{{}Fl}{{}c{}}?>==?>==?>=={fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4``{{{f{BKn}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Fh}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BKn}}c}{{Ah{Af}}}Ad}{{{f{{l{Fh}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CCl}}}CCl}{{f{f{Bjc}}}b{}}{fb}{{}CCl}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{CCl}}{f{CCl}}}d}{{f{f{c}}}d{}}0{{{f{CCl}}{f{BjGl}}}Gn}{cc{}}{{{f{CCl}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4````````````{{fh}b}006{{{G`{BCl}}}{{Ah{BCl}}}}{c{{Ah{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{cBCl{{Hd{}{{Bb{BCl}}}}}}{c{{B`{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}}}}CbCb}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}{AKl{{l{g}}}}}}}CbCbCb}{{}CCn}{{{f{CD`}}}d}0{c{{Ah{E`}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}{c{{Ah{{Hh{E`Fl}}}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hf}}}CbCb}{{CCnCCn}CCn}{{{f{BjCCn}}CCn}b}10{{{f{CCn}}}Dl}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CDb}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{{CDd{ec}}}}}{{CDd{ec}}}A@n{A@n{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{c}}}}}}}Cb}{{{f{Ej}}{f{Ej}}}{{Hh{EjEj}}}}{CDfe{}{{CDh{c}}}}{CDfe{}{{CDj{c}}}}{CCnCCn}{c{{Ah{BCl}}}{{Hd{}{{Bb{{f{BCl}}}}}}}}{cBCl{{Hd{}{{Bb{{f{BCl}}}}}}}}{{{f{CCn}}CCn}d}{{}CCn}{{}CD`}{Fl{{f{c}}}{}}{{{f{{CDl{c}}}}}{{f{e}}}{}{}}1{{{f{{AKf{c}}}}}{{f{e}}}{}{}}222{Fl{{f{Bjc}}}{}}{{{f{Bj{AKf{c}}}}}{{f{Bje}}}{}{}}1111{{CCnCCn}CCn}{Flb}0000{cBDl{{Hd{}{{Bb{E`}}}}}}{c{{Ah{E`}}}{{Hd{}{{Bb{{f{E`}}}}}}}}:{{{f{{CDl{Af}}}}{f{{CDl{Af}}}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{f{f{c}}}d{}}00000{{{f{BjCCn}}c}b{{Hd{}{{Bb{CCn}}}}}}``{{{f{CCn}}{f{BjGl}}}Gn}0000{{{f{CD`}}{f{BjGl}}}Gn}{cc{}}00{CCnCD`}11{Dl{{B`{CCn}}}}{DlCCn}00{c{{AKf{Gh}}}{{Hd{}{{Bb{d}}}}}}{c{{AKf{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{cCCn{{Hd{}{{Bb{CCn}}}}}}{eCDj{}{{Hd{}{{Bb{c}}}}}}23{{{f{Dh}}}{{B`{CCn}}}}{c{{AKf{{l{e}}}}}{{Hj{}{{Bb{}}}}}A`}{c{{AKf{Gh}}}{{Hl{}{{Bb{d}}}}}}{c{{AKf{{l{e}}}}}{{Hl{}{{Bb{}}}}}A`}{{{f{E`}}{f{E`}}}{{B`{E`}}}}{{{f{E`}}{f{E`}}CD`}{{B`{E`}}}}{{{f{AN`}}{f{AN`}}}AN`}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CDl{Af}}}}{f{Bjc}}}bABf}{{{f{CCn}}{f{Bjc}}}bABf}{{{f{CD`}}{f{Bjc}}}bABf}{{}Fl}0000{{{f{BjCCn}}CCn}b}{{CCnCCn}CCn}{{{f{CCn}}CCn}d}{{}c{}}0000{{{AKf{c}}}c{}}{CCnc{}}2{BFn{{G`{c}}}{}}{{}{{G`{Bh}}}}{{{f{CCn}}}d}0{{{f{CCn}}}{{ACl{CCn}}}}{{{f{CDb}}}{{`{{Bf{}{{Bb{CDb}}}}}}}}{{{f{CCn}}}{{ACn{CCn}}}}{{{f{CDb}}}Fl}{MhHn}{e{{Ah{E`}}}{{Kh{E`}}}{{Hd{}{{Bb{c}}}}A@n}}2{c{{AKf{c}}}{}}{{eFl}{{CDd{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFl}{{CDd{{CE`{{CDn{c}}}}c}}}A@n}{{{f{Bj{CDd{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CDd{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gf}}{CCnCCn}{{{f{Dh}}}Dd}`{{{f{BjCCn}}CCn}b}{{{f{BjCCn}}CCnd}b}{{{f{{CDd{ec}}}}}{{Hh{Fl{B`{Fl}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CDb}}LnFl}CDb}{{{f{{Dn{c}}}}LnFl}{{f{{Dn{c}}}}}{}}{{{f{c}}Fl}{{G`{c}}}CDb}0{{{f{CDb}}Ln}{{Hh{CDbCDb}}}}{{{f{BCl}}Fld}{{G`{BCl}}}}{{CCnCCn}CCn}80{fc{}}009{{CDfFl}{{CDd{CDfc}}}{}}{c{{Ob{e}}}{}{}}0000{{{f{E`}}{f{E`}}}{{Ah{E`}}}}{{}{{Ob{c}}}{}}0000{fOd}00006{{}c{}}0000{{{f{E`}}e}c{}{{Cf{{f{BjCj}}}{{Cd{c}}}}}}{{{f{{Dn{{G`{c}}}}}}}{{Hh{Fl{G`{Fl}}}}}{}}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{{Dn{c}}}}}{{AJj{I`}}}{{Kh{{Dn{Of}}}}JfJh}}{{{f{{Dn{e}}}}}{{G`{c}}}{JfJhCh}{{Kh{{Dn{c}}}}}}{{{f{Af}}}{{G`{Af}}}}","D":"KAh","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5912],[5,"ListType",1543],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1543],[10,"Num",5913],[10,"ToPrimitive",5914],[5,"Series",5134],[8,"PolarsResult",4356,5915],[10,"NumOpsDispatchInner",5613,5916],[6,"GroupsProxy",3973,5917],[5,"BooleanType",1543],[6,"Option",5918],[17,"Item"],[8,"ArrayBox",5589],[10,"Iterator",5919],[5,"PlSmallStr",4356,5920],[0,"mut"],[17,"IsNested"],[5,"FalseT",1543],[17,"IsObject"],[10,"PolarsDataType",1543],[17,"Output"],[10,"Fn",5921],[10,"Copy",5922],[5,"AmortSeries",5589],[10,"FnMut",5921],[5,"Float64Type",1543],[5,"Float32Type",1543],[8,"StringChunked",1543],[5,"String",5923],[5,"StringType",1543],[1,"str"],[5,"BinaryType",1543],[1,"u8"],[1,"slice"],[6,"DataType",1543,5924],[8,"ListChunked",1543],[5,"View",5925],[5,"SortOptions",1460],[8,"IdxCa",1543,5926],[6,"Column",3708],[5,"SortMultipleOptions",1460],[8,"BinaryChunked",1543],[10,"PolarsIntegerType",1543],[10,"MetadataTrait",827,5927],[5,"Box",5928],[6,"CastOptions",740],[10,"NumOpsDispatchCheckedInner",5664,5929],[8,"ChunkLenIter",40],[1,"usize"],[8,"ArrayRef",4356,5930],[5,"Vec",5931],[5,"CompactString",5932],[5,"MetadataProperties",827],[10,"DoubleEndedIterator",5933],[8,"BooleanChunked",1543],[17,"HasViews"],[5,"Formatter",5934],[8,"Result",5934],[10,"Array",5930],[17,"Array"],[10,"IntoIterator",5935],[5,"Bitmap",5936],[1,"tuple"],[10,"IntoParallelIterator",5937],[10,"TrustedLen",5938],[6,"AnyValue",1543,5939],[8,"IdxSize",4356,5940],[5,"MetadataFlags",827],[5,"ObjectType",1543],[10,"PolarsObjectSafe",1113],[10,"PolarsObject",1113],[1,"f32"],[1,"u64"],[5,"Metadata",827],[5,"RwLockWriteGuard",5941],[5,"Int128Type",1543],[8,"DecimalChunked",1543,5942],[10,"Send",5922],[10,"Sync",5922],[10,"ExactSizeIterator",5943],[10,"PolarsFloatType",1543],[6,"IsSorted",5134,5944],[10,"PolarsIterator",788],[5,"Iter",5945],[1,"fn"],[5,"Map",5946],[10,"AsRef",5947],[6,"ChunkedArrayLayout",40],[10,"NumCast",5914],[5,"Scalar",5069],[6,"MetadataReadGuard",827,5948],[5,"IMMetadata",827,5949],[5,"Arc",4356,5950],[5,"RwLockReadGuard",5941],[1,"u32"],[5,"Range",5951],[5,"UInt32Type",1543],[1,"i64"],[5,"Int64Type",1543],[5,"UInt64Type",1543],[5,"Int32Type",1543],[1,"i32"],[1,"i128"],[5,"Field",1543,5952],[10,"ParallelIterator",5937],[10,"IndexedParallelIterator",5937],[6,"QuantileMethod",4356,5953],[5,"RollingOptionsFixedWindow",4356,5954],[10,"Sized",5922],[17,"IsStruct"],[8,"PlRandomState",1543,5955],[5,"BytesHash",5956],[8,"Array2",5957],[8,"ArrayView1",5957],[6,"Either",5958],[6,"Result",5959],[5,"TypeId",5960],[5,"NullableIdxSize",4356,5940],[10,"FnOnce",5921],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",450,5961],[10,"ChunkedBuilder",478],[5,"BinViewChunkedBuilder",478,5962],[10,"ViewType",5963],[5,"BooleanChunkedBuilder",478,5964],[5,"NullChunkedBuilder",478,5965],[5,"PrimitiveChunkedBuilder",478,5966],[10,"Clone",5967],[8,"StringChunkedBuilder",478,5962],[8,"BinaryChunkedBuilder",478,5962],[10,"NewChunkedArray",478],[5,"AnonymousListBuilder",586,5968],[5,"AnonymousOwnedListBuilder",586,5968],[5,"ListBooleanChunkedBuilder",586,5969],[5,"ListPrimitiveChunkedBuilder",586,5970],[10,"ListBuilderTrait",586],[5,"ListStringChunkedBuilder",586,5971],[5,"ListBinaryChunkedBuilder",586,5971],[5,"ListNullChunkedBuilder",586,5972],[10,"Hasher",5973],[10,"ChunkedCollectInferIterExt",768],[10,"ChunkedCollectIterExt",768],[10,"Canonical",782],[10,"ChunkedCollectParIterExt",784],[10,"FromParIterWithDtype",784],[5,"BooleanArray",5974],[5,"BoolIterNoNull",788],[5,"SomeIterator",788],[5,"MetadataEnv",827,5975],[10,"MetadataCollectable",827,5976],[5,"Iter",5977],[5,"IterNames",5977],[5,"File",5978],[5,"Mutex",5979],[6,"MetadataMerge",827],[5,"RwLock",5941],[5,"ObjectArray",1113],[6,"ArrowDataType",1543,5980],[10,"Any",5960],[10,"Debug",5934],[5,"BitmapIter",5981],[6,"ZipValidity",5982],[8,"ObjectValueIter",1113],[5,"ObjectChunkedBuilder",1190],[8,"ObjectChunked",1543],[10,"AnonymousObjectBuilder",1214],[5,"ObjectRegistry",1214],[8,"ObjectConverter",1214],[8,"BuilderConstructor",1214],[10,"ChunkAgg",1243],[17,"FuncRet"],[10,"ChunkApply",1243],[10,"ChunkApplyKernel",1243],[10,"ChunkSort",1243],[10,"ChunkUnique",1243],[10,"ChunkCast",1243],[6,"FillNullStrategy",1243],[10,"ChunkCompareEq",1243],[10,"ChunkExplode",1243],[5,"OffsetsBuffer",5983],[10,"ChunkFillNullValue",1243],[10,"ChunkFilter",1243],[10,"ChunkFull",1243],[10,"ChunkFullNull",1243],[10,"ChunkAnyValue",1243],[10,"ChunkCompareIneq",1243],[10,"IsFirstDistinct",1243],[10,"IsLastDistinct",1243],[10,"ChunkQuantile",1243],[10,"ChunkExpandAtIndex",1243],[10,"ChunkReverse",1243],[10,"ChunkRollApply",1243],[10,"ChunkSet",1243],[10,"ChunkShift",1243],[10,"ChunkShiftFill",1243],[10,"ChunkVar",1243],[10,"ChunkTake",1243],[10,"ChunkTakeUnchecked",1243],[10,"ChunkBytes",1243],[10,"ChunkZip",1243],[10,"BinaryFnMut",1373],[10,"StaticArray",1543,5984],[10,"TernaryFnMut",1373],[10,"Error",5985],[10,"UnaryFnMut",1373],[5,"PrimitiveArray",5986],[5,"RowsEncoded",5987],[5,"BinaryArray",5988],[8,"BinaryOffsetChunked",1543],[6,"SearchSortedSide",1423],[10,"SlicedArray",4356,5989],[5,"NoNull",5698],[5,"NaiveDateTime",5990],[6,"PolarsError",4356,5915],[6,"Cow",5991],[8,"Float32Chunked",1543],[8,"Float64Chunked",1543],[10,"ArrayFromIter",1543,5992],[10,"ArrayFromIterDtype",1543,5992],[10,"AsRefDataType",1543,5924],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5993],[10,"From",5947],[5,"CategoricalChunked",3063,5994],[10,"CategoricalMergeOperation",3063,5995],[10,"LogicalType",1543,5996],[5,"Logical",1543,5996],[5,"OwnedObject",1543,5939],[6,"UnknownKind",1543,5924],[5,"CompatLevel",1543,5924],[6,"TimeUnit",1543,5997],[5,"UInt8Type",1543],[5,"UInt16Type",1543],[5,"Int8Type",1543],[5,"Int16Type",1543],[5,"DateType",1543],[5,"TimeType",1543],[5,"BinaryOffsetType",1543],[5,"DecimalType",1543],[5,"DatetimeType",1543],[5,"DurationType",1543],[5,"CategoricalType",1543],[5,"Dimension",1543,5998],[6,"ReshapeDimension",1543,5998],[6,"ArrowTimeUnit",1543],[6,"Ordering",5999],[10,"ArrayCollectIterExt",4356,5992],[8,"Utf8ViewArray",5963],[8,"UInt32Chunked",1543],[5,"Error",5934],[10,"NumericNative",1543],[10,"Into",5947],[5,"ArrowField",4356],[6,"PrimitiveType",6000],[6,"IntegerType",6001],[10,"Borrow",6002],[10,"NoOption",6003],[10,"GetAnyValue",1543,5939],[8,"Int128Chunked",1543],[10,"IntoScalar",1543,6004],[6,"PhysicalType",6001],[6,"ToCompactStringError",5932],[8,"UInt8Chunked",1543],[8,"UInt16Chunked",1543],[8,"UInt64Chunked",1543],[8,"Int8Chunked",1543],[8,"Int16Chunked",1543],[8,"Int32Chunked",1543],[8,"Int64Chunked",1543],[8,"PlIdHashMap",1543,5926],[5,"CategoricalChunkedBuilder",3063,6005],[5,"GlobalRevMapMerger",3063,5995],[6,"RevMapping",3206,6006],[6,"CategoricalOrdering",3206,6006],[5,"CatIter",3063,5994],[1,"u128"],[5,"DataFrame",3419],[5,"StringCacheHolder",3260,6007],[5,"EnumChunkedBuilder",3279,6008],[5,"ErrString",3307,5915],[6,"PolarsWarning",3307,6009],[10,"Display",5934],[6,"FloatFmt",3388],[1,"char"],[8,"Schema",5110],[10,"IntoColumn",3708],[6,"NullStrategy",3419],[6,"UniqueKeepStrategy",3419],[8,"PlHashSet",1543,5955],[8,"ArrowSchema",4356,6010],[5,"Row",4228],[5,"GroupBy",3973],[5,"RangeFull",5951],[5,"RangeInclusive",5951],[5,"RangeFrom",5951],[5,"RangeTo",5951],[5,"RangeToInclusive",5951],[5,"RecordBatchIter",3419],[5,"PhysRecordBatchIter",3419],[10,"IntoSeries",5134,6011],[10,"RangeBounds",5951],[10,"IntoVec",5698],[8,"SchemaRef",5110],[6,"IndexOrder",4356,6012],[8,"RecordBatch",6013],[5,"StructArray",6014],[5,"ScalarColumn",3708,6015],[6,"BitRepr",5134,5944],[8,"SeriesPhysIter",5134,6016],[5,"UnpivotArgsIR",3945],[5,"GroupsIdx",3973,5917],[8,"IdxVec",6017],[6,"GroupByMethod",3973],[5,"SlicedGroups",3973,5917],[5,"GroupsProxyParIter",3973,5917],[10,"UnindexedConsumer",6018],[6,"GroupsIndicator",3973,5917],[8,"IdxItem",3973,5917],[10,"IntoGroupsProxy",3973,6019],[5,"Copied",6020],[5,"Zip",6021],[5,"GroupsProxyIter",3973,5917],[8,"GroupsSlice",3973,5917],[1,"array"],[6,"RollingFnParams",4356,6022],[10,"IsFloat",6023],[10,"NativeType",6024],[10,"AggList",4212,6025],[10,"TakeExtremum",4212],[10,"PhysicalAggExpr",4225],[6,"AnyValueBuffer",4228,6026],[6,"AnyValueBufferTrusted",4228,6026],[5,"IdHasher",4326,6027],[10,"VecHash",4326,6028],[10,"Allocator",6029],[5,"BorrowedFd",6030],[10,"AsFd",6030],[10,"AsRawFd",6031],[5,"OsStr",6032],[5,"Path",6033],[20,"MaybeUninit",6034],[10,"NumOpsDispatchChecked",4356,5929],[5,"ChunkId",4356,5940],[5,"RollingVarParams",4356,6022],[5,"RollingQuantileParams",4356,6022],[6,"NonExistent",4356,6035],[10,"Ord",5999],[10,"Default",6036],[5,"CStr",6037],[5,"Weak",5950],[10,"PartialEq",5999],[10,"Scalar",6038],[5,"Error",6039],[6,"Error",6040],[5,"TryReserveError",6041],[5,"Utf8Error",6042],[5,"PathBuf",6033],[1,"never"],[5,"OsString",6032],[5,"CString",6043],[10,"ToOwned",5991],[10,"FromData",4991,6044],[5,"Buffer",6045],[10,"FromDataUtf8",4991,6044],[10,"FromDataBinary",4991,6044],[5,"ListArray",6046],[6,"Ambiguous",4356,6035],[10,"NamedFromOwned",4356,6047],[10,"PartialOrd",5999],[10,"Hash",5973],[10,"SeriesTrait",5134,5944],[10,"CloneToUninit",5967],[10,"ChunkAggSeries",4356,6048],[10,"QuantileAggSeries",4356,6049],[10,"IndexToUsize",4356,6050],[10,"NamedFrom",4356,6047],[5,"Pin",6051],[5,"Request",5985],[5,"BorrowedCursor",6052],[5,"IoSliceMut",6053],[6,"SeekFrom",6053],[10,"VarAggSeries",4356,6054],[5,"AllocError",6029],[5,"BTreeMap",6055],[5,"Arguments",5934],[5,"IoSlice",6053],[5,"AnonymousBuilder",4997,6056],[5,"Offsets",5983],[5,"MutableNullArray",5020,6057],[5,"MutableBitmap",6058],[5,"Utf8Array",6059],[1,"i8"],[1,"u16"],[1,"i16"],[5,"Schema",6060],[10,"SchemaExt",5110],[17,"DataType"],[10,"SchemaNamesAndDtypes",5110],[8,"Metadata",5980],[5,"SeriesIter",5134,6016],[5,"Rc",6061],[10,"LhsNumOps",5613,5916],[10,"NumOpsDispatch",5613,5916],[6,"NumericListOp",5613,6062],[6,"NullBehavior",5672],[5,"SuperTypeFlags",5698,6063],[5,"SuperTypeOptions",5698,6063],[10,"Container",5698],[5,"TrustMyLength",5698,5938],[10,"CustomIterTools",5698,6064],[10,"FromIteratorReversed",6065],[10,"FromTrustedLenIterator",5698,6064],[5,"Wrap",5698],[5,"Repeat",6066],[5,"Take",6067],[8,"FillNullLimit",1243],[10,"InitHashMaps",1543],[10,"InitHashMaps2",1543],[5,"TrueT",1543],[15,"IO",3374],[15,"Context",3374],[15,"Count",4209],[15,"Slice",4210],[8,"QuantileInterpolOptions",4356],[10,"ListFromIter",4356],[10,"Utf8FromIter",5064],[10,"BinaryFromIter",5064]],"r":[[0,6027],[4,6007],[13,6007],[16,6007],[32,6007],[450,5961],[478,5962],[479,5962],[480,5964],[483,5965],[484,5966],[485,5962],[586,5968],[587,5968],[588,5971],[589,5969],[591,5972],[592,5970],[593,5971],[832,5949],[838,5976],[839,5975],[843,5948],[844,5927],[1160,6068],[1452,5989],[1460,5989],[1544,5939],[1546,5992],[1547,5992],[1548,5992],[1549,5980],[1551,5924],[1567,5994],[1570,5994],[1571,6005],[1572,5995],[1573,6006],[1576,5924],[1577,5924],[1578,5924],[1579,5924],[1590,5942],[1593,5998],[1602,5952],[1603,5952],[1618,5939],[1620,5995],[1624,5926],[1625,6050],[1626,5926],[1627,5926],[1629,5955],[1630,5926],[1655,6004],[1669,5996],[1670,5996],[1688,5939],[1692,5955],[1693,5955],[1694,5926],[1695,5955],[1696,5955],[1697,5955],[1698,5920],[1704,5998],[1705,6006],[1708,5984],[1720,5997],[1721,5924],[1748,5924],[1953,5995],[1971,5996],[2085,5924],[2217,5996],[2625,5995],[2626,5995],[2640,5924],[2736,5994],[2775,5994],[3063,5994],[3064,5994],[3065,6005],[3066,5995],[3067,6006],[3069,5995],[3073,6006],[3090,5995],[3158,5995],[3159,5995],[3177,5994],[3181,5994],[3206,6006],[3211,6006],[3260,6007],[3266,6007],[3269,6007],[3277,6007],[3279,6008],[3297,6006],[3302,6006],[3303,6007],[3304,6007],[3305,6007],[3306,6007],[3313,5915],[3320,5915],[3321,5915],[3322,6009],[3336,5915],[3344,5915],[3351,6009],[3356,5915],[3358,5915],[3359,5915],[3360,5915],[3361,5915],[3362,6009],[3363,5915],[3378,6069],[3379,6069],[3380,6069],[3381,4326],[3712,6015],[3973,5917],[3979,5917],[3980,5917],[3981,5917],[3982,5917],[3983,5917],[3984,5917],[3987,5917],[3989,6019],[4001,5917],[4212,6025],[4230,6026],[4231,6026],[4325,6070],[4326,6027],[4327,6027],[4328,6028],[4331,6028],[4332,6028],[4356,6035],[4357,5950],[4358,5961],[4359,5992],[4360,5930],[4362,6010],[4363,5962],[4364,5964],[4366,5994],[4367,5994],[4368,6005],[4369,5995],[4370,6006],[4371,6048],[4372,5940],[4373,40],[4374,478],[4375,768],[4376,768],[4377,3708],[4381,3419],[4390,6044],[4391,6044],[4392,6044],[4394,5995],[4398,6050],[4399,5940],[4400,6012],[4401,6050],[4402,3708],[4403,6011],[4404,5698],[4406,6071],[4407,6071],[4408,6071],[4411,5916],[4414,5971],[4415,5969],[4416,586],[4417,6072],[4418,5970],[4419,5971],[4425,6047],[4426,6047],[4429,478],[4431,6035],[4434,5940],[4435,5940],[4436,5916],[4437,5929],[4441,5920],[4442,5915],[4443,788],[4444,1113],[4445,5915],[4446,5966],[4448,6049],[4449,5953],[4450,5953],[4453,6006],[4454,6022],[4455,5954],[4456,6022],[4457,6022],[4460,5069],[4463,5134],[4464,5944],[4466,5989],[4467,6007],[4469,5962],[4471,3419],[4472,3945],[4474,6054],[4475,6028],[4530,5995],[4581,6072],[4582,0],[4595,6072],[4627,0],[4775,6050],[4820,6072],[4822,5995],[4823,5995],[4850,6072],[4857,5915],[4858,5915],[4859,5915],[4860,5915],[4872,5994],[4874,6072],[4880,5994],[4961,6072],[4991,6044],[4992,6044],[4993,6044],[4997,6056],[5020,6057],[5051,6006],[5056,6006],[5057,5989],[5060,6007],[5061,6007],[5062,6007],[5063,6007],[5064,6073],[5065,6073],[5136,5944],[5137,1243],[5140,6011],[5141,5944],[5142,5944],[5147,6016],[5148,6016],[5149,5944],[5616,5916],[5618,5916],[5619,5916],[5620,6062],[5631,5916],[5664,5929],[5665,5929],[5701,6064],[5702,6064],[5703,6064],[5706,6063],[5707,6063],[5708,5938],[5723,6074],[5724,6074],[5784,6075],[5785,6063],[5825,6063],[5826,6063],[5828,6076],[5856,6063],[5857,6063],[5889,6063],[5906,6076]],"b":[[50,"impl-Add-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[53,"impl-Add-for-ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[67,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CT%3E"],[73,"impl-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkedArray%3CBinaryType%3E"],[103,"impl-ChunkedArray%3CT%3E"],[104,"impl-Container-for-ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[125,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[126,"impl-Div-for-%26ChunkedArray%3CT%3E"],[127,"impl-Div-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[137,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[144,"impl-Debug-for-ChunkedArray%3CT%3E"],[145,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[159,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[160,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[230,"impl-Container-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkedArray%3CBooleanType%3E"],[241,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[244,"impl-ChunkedArray%3CBooleanType%3E"],[245,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[260,"impl-ChunkedArray%3CBooleanType%3E"],[261,"impl-ChunkedArray%3CT%3E"],[262,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[263,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[264,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[265,"impl-Mul-for-ChunkedArray%3CT%3E"],[270,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[271,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[272,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[273,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[274,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[277,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[278,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[279,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[280,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[281,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[282,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[283,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[284,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[287,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[288,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[289,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[290,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[291,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[292,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[293,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[310,"impl-ChunkedArray%3CListType%3E"],[311,"impl-ChunkedArray%3CStringType%3E"],[312,"impl-ChunkedArray%3CStringType%3E"],[313,"impl-ChunkedArray%3CListType%3E"],[326,"impl-Rem-for-ChunkedArray%3CT%3E"],[327,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[328,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[329,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[348,"impl-ChunkedArray%3CT%3E"],[349,"impl-Container-for-ChunkedArray%3CT%3E"],[352,"impl-ChunkedArray%3CT%3E"],[353,"impl-Container-for-ChunkedArray%3CT%3E"],[356,"impl-Sub-for-ChunkedArray%3CT%3E"],[357,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[358,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[359,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[361,"impl-ChunkedArray%3CBooleanType%3E"],[362,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[366,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[367,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[374,"impl-ChunkedArray%3CListType%3E"],[375,"impl-ChunkedArray%3CT%3E"],[380,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[381,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[382,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[383,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[384,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[385,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[534,"impl-BinViewChunkedBuilder%3Cstr%3E"],[535,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[865,"impl-MetadataProperties"],[866,"impl-Flags-for-MetadataProperties"],[867,"impl-MetadataFlags"],[868,"impl-Flags-for-MetadataFlags"],[932,"impl-MetadataTrait-for-Metadata%3CT%3E"],[933,"impl-Metadata%3CT%3E"],[958,"impl-Debug-for-MetadataProperties"],[959,"impl-UpperHex-for-MetadataProperties"],[960,"impl-Binary-for-MetadataProperties"],[961,"impl-Octal-for-MetadataProperties"],[962,"impl-LowerHex-for-MetadataProperties"],[963,"impl-Debug-for-MetadataFlags"],[964,"impl-UpperHex-for-MetadataFlags"],[965,"impl-LowerHex-for-MetadataFlags"],[966,"impl-Octal-for-MetadataFlags"],[967,"impl-Binary-for-MetadataFlags"],[977,"impl-Flags-for-MetadataProperties"],[978,"impl-MetadataProperties"],[979,"impl-MetadataFlags"],[980,"impl-Flags-for-MetadataFlags"],[991,"impl-MetadataTrait-for-Metadata%3CT%3E"],[992,"impl-Metadata%3CT%3E"],[1035,"impl-Metadata%3CT%3E"],[1036,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1040,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1041,"impl-Metadata%3CT%3E"],[1119,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1120,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1155,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1156,"impl-ObjectArray%3CT%3E"],[1171,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1172,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1182,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1183,"impl-ObjectArray%3CT%3E"],[1184,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1185,"impl-ObjectArray%3CT%3E"],[1187,"impl-Array-for-ObjectArray%3CT%3E"],[1188,"impl-ObjectArray%3CT%3E"],[1191,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1192,"impl-ObjectChunkedBuilder%3CT%3E"],[1194,"impl-ObjectChunkedBuilder%3CT%3E"],[1195,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1789,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1790,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1791,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1792,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1793,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1794,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1795,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1796,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1872,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1873,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1874,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1875,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1876,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1877,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2220,"impl-PartialEq-for-DataType"],[2221,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2232,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2233,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2234,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2235,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2238,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2239,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2240,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2241,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2275,"impl-Display-for-AnyValue%3C\'_%3E"],[2276,"impl-Debug-for-AnyValue%3C\'a%3E"],[2278,"impl-Debug-for-DataType"],[2279,"impl-Display-for-DataType"],[2282,"impl-Display-for-TimeUnit"],[2283,"impl-Debug-for-TimeUnit"],[2285,"impl-Debug-for-ReshapeDimension"],[2286,"impl-Display-for-ReshapeDimension"],[2297,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2298,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2299,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2300,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2302,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2304,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2305,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2307,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2309,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2311,"impl-From%3C%26Field%3E-for-Field"],[2337,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2338,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2341,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2342,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2343,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2345,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2346,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2347,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2348,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2354,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2355,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2357,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2358,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2359,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2360,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2361,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2362,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2369,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2370,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2371,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2372,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2373,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2374,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2466,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2467,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2468,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2469,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2471,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2472,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2473,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2474,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2616,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2617,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2618,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2619,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2621,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2622,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2623,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2624,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2663,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2664,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2665,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2666,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2667,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2668,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2669,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2670,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2671,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2672,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2688,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2689,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2692,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2693,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2694,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2695,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2698,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2699,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2700,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2701,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2788,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[2789,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[2790,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2791,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2792,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2793,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[3110,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3114,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3115,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3131,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3132,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3133,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3134,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3135,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3136,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3152,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3153,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3154,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3155,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3156,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3157,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3168,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3169,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3170,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3171,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3172,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3173,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3346,"impl-Display-for-ErrString"],[3347,"impl-Debug-for-ErrString"],[3444,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3445,"impl-Add%3C%26Series%3E-for-DataFrame"],[3446,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3491,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3492,"impl-Div%3C%26Series%3E-for-DataFrame"],[3493,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3524,"impl-Display-for-DataFrame"],[3525,"impl-Debug-for-DataFrame"],[3531,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3532,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3558,"impl-Index%3C%26str%3E-for-DataFrame"],[3559,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3560,"impl-Index%3Cusize%3E-for-DataFrame"],[3561,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3562,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3563,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3564,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3565,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3583,"impl-DataFrame"],[3584,"impl-Container-for-DataFrame"],[3591,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3592,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3593,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3594,"impl-DataFrame"],[3595,"impl-Container-for-DataFrame"],[3614,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3615,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3616,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3644,"impl-Container-for-DataFrame"],[3645,"impl-DataFrame"],[3649,"impl-Container-for-DataFrame"],[3650,"impl-DataFrame"],[3653,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3654,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3655,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3675,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3677,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3716,"impl-Add-for-%26Column"],[3717,"impl-Add%3CT%3E-for-%26Column"],[3718,"impl-Add%3CT%3E-for-Column"],[3719,"impl-Add-for-Column"],[3743,"impl-BitAnd-for-%26Column"],[3744,"impl-Column"],[3745,"impl-BitAnd-for-Column"],[3746,"impl-BitOr-for-Column"],[3747,"impl-BitOr-for-%26Column"],[3748,"impl-BitXor-for-Column"],[3749,"impl-BitXor-for-%26Column"],[3775,"impl-Div-for-%26Column"],[3776,"impl-Div-for-Column"],[3777,"impl-Div%3CT%3E-for-Column"],[3778,"impl-Div%3CT%3E-for-%26Column"],[3802,"impl-From%3CSeries%3E-for-Column"],[3803,"impl-From%3CScalarColumn%3E-for-Column"],[3849,"impl-Mul%3CT%3E-for-Column"],[3850,"impl-Mul%3CT%3E-for-%26Column"],[3851,"impl-Mul-for-%26Column"],[3852,"impl-Mul-for-Column"],[3868,"impl-Rem-for-Column"],[3869,"impl-Rem%3CT%3E-for-Column"],[3870,"impl-Rem%3CT%3E-for-%26Column"],[3871,"impl-Rem-for-%26Column"],[3890,"impl-Sub-for-Column"],[3891,"impl-Sub%3CT%3E-for-Column"],[3892,"impl-Sub-for-%26Column"],[3893,"impl-Sub%3CT%3E-for-%26Column"],[4087,"impl-Display-for-GroupByMethod"],[4088,"impl-Debug-for-GroupByMethod"],[4094,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4095,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4129,"impl-IntoIterator-for-GroupsIdx"],[4130,"impl-IntoIterator-for-%26GroupsIdx"],[4132,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4133,"impl-IntoParallelIterator-for-GroupsIdx"],[4492,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4493,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4494,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4495,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4498,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4499,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4587,"impl-Default-for-Arc%3CT%3E"],[4588,"impl-Default-for-Arc%3Cstr%3E"],[4589,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4590,"impl-Default-for-Arc%3CCStr%3E"],[4650,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4651,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4652,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4678,"impl-Display-for-PolarsError"],[4679,"impl-Debug-for-PolarsError"],[4680,"impl-Display-for-PlSmallStr"],[4681,"impl-Debug-for-PlSmallStr"],[4684,"impl-Debug-for-Arc%3CT,+A%3E"],[4685,"impl-Display-for-Arc%3CT,+A%3E"],[4686,"impl-Pointer-for-Arc%3CT,+A%3E"],[4696,"impl-From%3CError%3E-for-PolarsError"],[4697,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4698,"impl-From%3CError%3E-for-PolarsError"],[4700,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4702,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4703,"impl-From%3C%26str%3E-for-PlSmallStr"],[4704,"impl-From%3CString%3E-for-PlSmallStr"],[4705,"impl-From%3C%26String%3E-for-PlSmallStr"],[4709,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4710,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4713,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4714,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4715,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4716,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4717,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4718,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4719,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4720,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4721,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4722,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4723,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4724,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4725,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4726,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4739,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4740,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4741,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4742,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4743,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4744,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4745,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4746,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[5083,"impl-From%3Cf32%3E-for-Scalar"],[5084,"impl-From%3Ci8%3E-for-Scalar"],[5085,"impl-From%3Ci32%3E-for-Scalar"],[5086,"impl-From%3Ci64%3E-for-Scalar"],[5087,"impl-From%3Cu8%3E-for-Scalar"],[5088,"impl-From%3Cu16%3E-for-Scalar"],[5089,"impl-From%3Cu32%3E-for-Scalar"],[5090,"impl-From%3Cu64%3E-for-Scalar"],[5092,"impl-From%3Ci16%3E-for-Scalar"],[5093,"impl-From%3Cf64%3E-for-Scalar"],[5157,"impl-Add-for-%26Series"],[5158,"impl-Add-for-Series"],[5159,"impl-Add%3CT%3E-for-Series"],[5160,"impl-Add%3CT%3E-for-%26Series"],[5234,"impl-Div-for-Series"],[5235,"impl-Div-for-%26Series"],[5236,"impl-Div%3CT%3E-for-%26Series"],[5237,"impl-Div%3CT%3E-for-Series"],[5249,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5250,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5251,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5252,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5253,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5254,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5272,"impl-Debug-for-Series"],[5273,"impl-Display-for-Series"],[5285,"impl-FromIterator%3Ci64%3E-for-Series"],[5286,"impl-FromIterator%3C%26u64%3E-for-Series"],[5287,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5288,"impl-FromIterator%3C%26str%3E-for-Series"],[5289,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5290,"impl-FromIterator%3C%26bool%3E-for-Series"],[5291,"impl-FromIterator%3CString%3E-for-Series"],[5292,"impl-FromIterator%3Cbool%3E-for-Series"],[5293,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5294,"impl-FromIterator%3C%26f64%3E-for-Series"],[5295,"impl-FromIterator%3Cf64%3E-for-Series"],[5296,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5297,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5298,"impl-FromIterator%3Cu64%3E-for-Series"],[5299,"impl-FromIterator%3Cf32%3E-for-Series"],[5300,"impl-FromIterator%3Cu32%3E-for-Series"],[5301,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5302,"impl-FromIterator%3C%26u32%3E-for-Series"],[5303,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5304,"impl-FromIterator%3C%26i64%3E-for-Series"],[5305,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5306,"impl-FromIterator%3C%26i32%3E-for-Series"],[5307,"impl-FromIterator%3Ci32%3E-for-Series"],[5308,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5309,"impl-FromIterator%3C%26f32%3E-for-Series"],[5310,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5311,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5312,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5313,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5314,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5315,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5316,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5331,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5332,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5333,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5334,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5335,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5336,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5384,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5385,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5386,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5387,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5388,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5389,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5403,"impl-Mul-for-Series"],[5404,"impl-Mul-for-%26Series"],[5405,"impl-Mul%3CT%3E-for-%26Series"],[5406,"impl-Mul%3CT%3E-for-Series"],[5413,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5414,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5415,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5416,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5417,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5418,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5419,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5420,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5421,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5422,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5423,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5424,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5425,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5426,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5427,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5428,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5429,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5430,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5431,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5432,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5433,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5434,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5435,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5436,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5437,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5438,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5439,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5440,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5441,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5442,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5443,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5444,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5445,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5446,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5447,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5448,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5449,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5454,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5455,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5456,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5457,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5458,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5459,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5472,"impl-Rem-for-%26Series"],[5473,"impl-Rem%3CT%3E-for-%26Series"],[5474,"impl-Rem%3CT%3E-for-Series"],[5506,"impl-Sub-for-%26Series"],[5507,"impl-Sub%3CT%3E-for-%26Series"],[5508,"impl-Sub%3CT%3E-for-Series"],[5509,"impl-Sub-for-Series"],[5539,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5540,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5541,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5542,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5731,"impl-SuperTypeFlags"],[5732,"impl-Flags-for-SuperTypeFlags"],[5799,"impl-LowerHex-for-SuperTypeFlags"],[5800,"impl-UpperHex-for-SuperTypeFlags"],[5801,"impl-Debug-for-SuperTypeFlags"],[5802,"impl-Binary-for-SuperTypeFlags"],[5803,"impl-Octal-for-SuperTypeFlags"],[5812,"impl-SuperTypeFlags"],[5813,"impl-Flags-for-SuperTypeFlags"],[5815,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5816,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5819,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5820,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5823,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5824,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAA0AEAAAAKoP8w8uEDEQMhAzEDQQNRA6ED0QQhBDEGkQYhE=","e":"OzAAAAEAAIwRRQIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAoAYQAAAGQAAwBpAAAAbAADAHEAAgB4AA0AhwADAIwAAgCQAAUAmAABAJwABQCkAAMAqgADAK8ABQC2AAEAuwAAAL0AAwDDAAIAygAFANEAAwDYAAIA3AACAOAABwDtAA0AAAEEAAcBBgAPARsALgEDADMBAgA3AQQAPQEBAEMBAgBHAQQATQEAAFIBBQBaAQEAXgECAGIBCgBzAQEAeQEAAH0BCACHAQgAkQEAAJMBBQCbAQAAnQEjAMIBKQDwAQIA9gEnACQCBQAuAgAAMAImAFkCTACtAgwAwQIkAOkCDQD4AgEA+wIZABgDCQAkAwEAKAMBACsDFQBCAwkATQMKAGMDAABlAwAAagMNAHkDEACOAxIAowMAAKUDCQCxAwMAtwMBALsDDQDSAwAA1QMAANwDBwDlAwcA+gMBAP4DAAABBAMACQQFABAEBAAcBAsALwQEADYEDQBGBAYAUAQIAFoEAQBeBBcAdwQHAIAEAACCBAAAhAQAAIYEAQCLBBAAnQQAAJ8EAAChBAMApgQCAKoEAACsBAgAtgQBALkEBQDBBAEAxAQAAMYEAQDJBAMAzgQEANQEAgDYBAMA3gQAAOEEAADqBAAA7wQAAPIEAQD3BAEA+gQAAP0EAQAIBQEAEgUCABgFBgAhBQIAJgUBACkFAAArBQEAMQUBADQFAgA8BQEAQgUAAEUFAQBJBQAASwUAAE0FAABPBQAAVAUEAFsFAQBeBQcAZwUBAGoFAABuBQAAcAUDAHUFAQB4BQUAhAUeAKQFAQCoBQQArgUDALgFEQDMBQoA2QUEAOoFCQAABg0AEAYCABQGBQAcBgAAHgYOADAGAAAyBgAANwYBADoGAQA9BgMAQgYAAEQGAABHBgAASgYAAEwGAQBPBgAAUQYCAFUGDQBkBgAAZgYBAGkGAABrBgEAbgYAAHAGAQBzBgAAdQYBAHgGAwB/BgAAgwYBAIcGAACKBgAAjAYAAI4GAwCTBgAAlgYIAKAGAgClBgMAqgYAAKwGAgCxBgAAswYAALgGAgC8BgEAvwYAAMEGAQDEBgAAxgYBAMkGAADLBgEAzgYAANAGAQDTBgAA1QYAANgGPgAdBwQAJAcJAC8HBAA1BwMAOgcEAEAHAABCB2AApAcCAKgHdAAeCIYApggAAKkISQD6CAMA/wgAAAEJAQAECQAABgkAAAgJAAAKCQAAIgkBACUJFwBBCSUAaQkGAHIJHgCUCQEAmQlCAN4JAAAECgsAEgoAABQKAgAYCgEAGwoAACAKBwApCgEALQoCADIKBAA4Cg0ARwoPAFgKCgBkCg0AcwojAJgKCACiChwAwAoWANgKDwDtCgAA7woAAPEKAAD1Ch8AFwsFAB4LVgB2CzAAqAtOAPgLBAD+CwEAAQwCAAUMBAALDCQAOAwCADwMCQBKDAQAUAwXAGoMAQBtDAQAcwwNAIIMBQCJDAAAiwwXAKQMAQCqDAIArwwBALMMCQC+DAQAxAwBAMkMAADLDAIAzwwKANsMAADdDAUA5AwAAOYMAQDsDAQA8gwEAPgMEAAKDQoAFw0DAB0NBQAkDSUASw0FAFINCQBfDQAAYg0LAHANAwB1DQMAfg0LAIsNCQCYDRIArA0AALUNAQC5DQEAvA0AAL4NAADDDQMA1Q0AANwNAADfDQEA5w0MAPoNAQABDgAAAw4BAAgOAgAMDgAAFA4BABcOAAAfDgIAJw4AACoOAAAxDgAAOw4CAD8OAABCDgAARA4EAFAOBABYDgYAYQ4KAG0OAAByDgQAfw4BAIIOBgCUDgIAmQ4CAJ0OEACwDhoAzQ4LANsOAQDeDgYA6A4JAPQOAwD5DggAAw8CAAgPDgAZDwoAJQ8TADsPAAA+DwIAQg8eAGIPBwBrDw0Aeg8CAH4PCgCKDwEAjQ8DAJIPAwCXDwkAog8HAKsPAQCuDxwAzA8mAPQPBgD/DwEAAhAAAAYQAgALEAAAEBAHACAQDQAvEAEANhADADsQAQA/EAIARBAAAEYQIABqEAwAeRAFAIAQBwCJEBYAohAOALIQDQDBEAAAwxAAAMUQAwDMEAUA1hAOAOcQDQD2EAAA+BACAP0QCAAHEQIADBEHABURDwAmEQMAKxEZAEYREABYEQEAWxEXAHUREwCKEQAAjBEGAJURHwC3EQMAvBEgAN4RBwDnEQEA6xEAAPARJAAYEgQAHhIIACkSAgAtEioAWRICAF0SAABfEgQAaRIAAGsSAACBEgAAhBIHAJISAACVEgMAnRIAAJ8SBgCoEhAAxxIAAMsSAwDQEgMA1RIAANcSAQDeEgAA8xIDAPoSBAABEwAABBMHAA4TAAAQEwEAFRMxAE8TAgBTEw0AYhMAAGQTDQB2Ew0AhhMGAI4TAACQEx0ArxMAALETCwC+EwAAwBMBAMkTGgDlEwIA6hMXAAMUAAAFFAIACRQAAAsUAAANFAAADxQFABYUBAAcFAUAJhQEADIUAAA4FAIAQBQFAEcUCwBWFAMAWxQAAF8UAgBjFAMAaRQSAIAUAwCFFAAAhxQAAIoUAQCYFAMAnxQAAKMUAQCmFCAAyhQAAMwUAQDUFAAA1hQBANkUAADbFAAA4RQBAOQUAwDsFAUA+hQDAP8UAAADFQAACRUAAAsVAAANFQEAFBUAABwVAwAiFQAAJxUjAE0VAQBQFQIAVBUAAFcVAABaFQAAXxUEAGYVAABoFQAAbBUCAHMVAQB2FQAAeBUBAHsVAACBFQAAgxUDAJQVAQCXFQEAoBUHAKwVBACyFQEAtxUBAL0VAwDIFQAAzRUDANIVAADXFQsA5BUAAOYVAADoFQQA7hUeAA4WAAAQFhIAJhYCACsWDgA7FgEAPhYEAEUWAwBLFggAVhYAAFoWAQBeFgEAZRYAAGgWEwB9FgIAhBYOAJQWBACcFggAphYHALEWAAC2FgAAuBYBALsWAgC/FgMAxBYJANYWBADeFgAA4BYEAOcWAQDqFgEA7hYCAPMWAAD4FgIA/RYEAAMXCQAOFwQAFBcEAA=="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNCNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPFPGPFPPFKPGGPPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNONNNNNNNNNNNNNNNNNNHNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNHNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","credential_provider","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","Aws","AwsCredential","Azure","AzureCredential","BearerToken","CredentialProviderFunction","Function","Gcp","GcpCredential","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","Python","SASToken","__clone_box","","bearer","borrow","","","","","","borrow_mut","","","","","","clone","","clone_into","","clone_to_uninit","","deref","","","","","","deref_mut","","","","","","deserialize","drop","","","","","","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","from","","","","","","","","from_func","from_python_func","from_python_func_object","hash","","init","","","","","","into","","","","","","into_aws_provider","","","into_azure_provider","","","into_gcp_provider","","","key_id","secret_key","serialize","to_owned","","token","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_credential_provider","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","to_bytes","to_file","to_memslice","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","create_sorting_map","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","try_set_sorted_flag","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[228,"polars_io::cloud::credential_provider"],[373,"polars_io::cloud::options"],[561,"polars_io::csv"],[563,"polars_io::csv::read"],[822,"polars_io::csv::read::buffer"],[896,"polars_io::csv::read::buffer::Buffer"],[899,"polars_io::csv::read::schema_inference"],[926,"polars_io::csv::write"],[1071,"polars_io::file_cache"],[1092,"polars_io::ipc"],[1329,"polars_io::json"],[1427,"polars_io::mmap"],[1448,"polars_io::ndjson"],[1450,"polars_io::ndjson::core"],[1553,"polars_io::parquet"],[1556,"polars_io::parquet::metadata"],[1609,"polars_io::parquet::read"],[1755,"polars_io::parquet::read::_internal"],[1777,"polars_io::parquet::write"],[2001,"polars_io::partition"],[2002,"polars_io::path_utils"],[2009,"polars_io::pl_async"],[2031,"polars_io::predicates"],[2099,"polars_io::prelude"],[2110,"polars_io::utils"],[2121,"polars_io::utils::byte_source"],[2202,"polars_io::utils::compression"],[2220,"polars_io::utils::slice"],[2239,"dyn_clone::sealed"],[2240,"polars_io::options"],[2241,"core::result"],[2242,"serde::de"],[2243,"polars_io::shared"],[2244,"polars_core::frame"],[2245,"polars_error"],[2246,"core::fmt"],[2247,"core::hash"],[2248,"std::io"],[2249,"polars_arrow::record_batch"],[2250,"core::option"],[2251,"serde::ser"],[2252,"core::any"],[2253,"polars_io::avro::read"],[2254,"polars_arrow::datatypes::schema"],[2255,"polars_io::avro::write"],[2256,"polars_core::schema"],[2257,"alloc::string"],[2258,"alloc::vec"],[2259,"polars_io::cloud::glob"],[2260,"object_store"],[2261,"alloc::sync"],[2262,"polars_io::cloud::polars_object_store"],[2263,"object_store::path"],[2264,"tokio::io::async_write"],[2265,"core::marker"],[2266,"polars_io::cloud::adaptors"],[2267,"std::io::error"],[2268,"crossterm::command"],[2269,"url"],[2270,"bytes::bytes"],[2271,"core::ops::range"],[2272,"core::ops::function"],[2273,"polars_parquet_format::thrift::varint::decode"],[2274,"object_store::aws::credential"],[2275,"object_store::azure::credential"],[2276,"object_store::gcp::credential"],[2277,"core::future::future"],[2278,"alloc::boxed"],[2279,"core::pin"],[2280,"polars_utils::python_function"],[2281,"pyo3::instance"],[2282,"object_store::aws"],[2283,"object_store::azure"],[2284,"object_store::gcp"],[2285,"object_store::aws::builder"],[2286,"object_store::azure::builder"],[2287,"object_store::gcp::builder"],[2288,"core::convert"],[2289,"core::iter::traits::collect"],[2290,"polars_io::csv::read::reader"],[2291,"polars_io::csv::read::read_impl::batched"],[2292,"polars_io::csv::read::options"],[2293,"std::path"],[2294,"polars_utils::pl_str"],[2295,"std::fs"],[2296,"polars_core::datatypes::dtype"],[2297,"polars_core::series"],[2298,"polars_utils::aliases"],[2299,"polars_io::csv::write::writer"],[2300,"polars_io::csv::write::options"],[2301,"core::num::nonzero"],[2302,"polars_io::file_cache::entry"],[2303,"polars_io::ipc::ipc_stream"],[2304,"polars_io::ipc::write"],[2305,"polars_io::ipc::ipc_file"],[2306,"polars_io::ipc::ipc_reader_async"],[2307,"polars_arrow::io::ipc::read::file"],[2308,"polars_utils::mmap::private"],[2309,"polars_arrow::array::struct_"],[2310,"polars_arrow::array"],[2311,"polars_arrow::datatypes"],[2312,"polars_arrow::datatypes::field"],[2313,"polars_arrow::array::growable::structure"],[2314,"polars_arrow::bitmap::immutable"],[2315,"polars_arrow::scalar"],[2316,"polars_arrow::array::struct_::iterator"],[2317,"polars_arrow::bitmap::utils::iterator"],[2318,"polars_arrow::bitmap::utils::zip_validity"],[2319,"polars_parquet::parquet::metadata::file_metadata"],[2320,"polars_parquet::parquet::metadata::column_order"],[2321,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2322,"core::iter::traits::exact_size"],[2323,"polars_parquet::arrow::read::statistics"],[2324,"polars_parquet_format::parquet_format"],[2325,"polars_parquet::parquet::metadata::schema_descriptor"],[2326,"polars_parquet::parquet::error"],[2327,"polars_io::parquet::read::reader"],[2328,"polars_io::parquet::read::read_impl"],[2329,"polars_io::parquet::read::options"],[2330,"polars_parquet::parquet::metadata::row_metadata"],[2331,"polars_core::series::series_trait"],[2332,"polars_parquet::arrow::read::deserialize::utils::filter"],[2333,"polars_io::parquet::write::writer"],[2334,"polars_io::parquet::write::batched_writer"],[2335,"polars_parquet::arrow::write"],[2336,"polars_io::parquet::write::options"],[2337,"polars_parquet::parquet::write"],[2338,"core::iter::traits::iterator"],[2339,"polars_parquet::arrow::write::file"],[2340,"std::sync::mutex"],[2341,"tokio::runtime::task::join"],[2342,"polars_core::datatypes::field"],[2343,"avro_schema::file"],[2344,"polars_io::cloud::object_store_setup"],[2345,"polars_io::csv::read::parser"],[2346,"polars_io::file_cache::cache"],[2347,"polars_io::file_cache::utils"],[2348,"polars_io::parquet::read::utils"],[2349,"polars_io::parquet::read::predicates"],[2350,"polars_io::parquet::read::mmap"],[2351,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`222`0102102211020101021020222`21021021021``0101210210210210211GjAI``0`1`Gd1``1``020GfGl321Gh51432051323232432051432051343205132051333222000555111320514320005133332432051432051Ib43043043114431543162543162543162543162IlIj1`In2J`0`21223133``2232223223300`00223332232112323233322Dh42342301423014200003042304230420301423014230423014230142333000444222030423014231420304230142301420304230423014230142301423014200000``Kn0``````KjKl2``01KfKh324Jj00KdKb24365710243657`443657436574365743``34361024365710243657436571024365743343657444333666555777424365710243655744436574`41024365710243657444344255510344434444`4343657444365731024365710243657431024365741024365744334334444344344434444434433Ll`0`00`0000000000000`00AIbAIdAIf32103210321032103321032103`210332103210321032103AIh00`Lh000000000`0000``000000000Ml```000``MhMj21Md0Mf324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```Nb00000`0`000000000```````````O`0NjNlNn3NdNfOjOb3OlOh4Nh987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:743462154697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`A@j`0```A@b1A@dA@hA@f342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001Mb`0`0000000000Jn011111````AA`00000000AAh1011111100101011111010110110010111110011111111111111111111111111010110111110100000000000111``````ABjABn1011111110101`0010010010101111000111110110101101ADf`00````00ADd1`ACnADbAD`213402134343434`402134021343402134343334442103402134121340213402134003`020213210213342221340213402134`0213421302134212212121212121AEb00`00`000`0000`0`0000`AEn`0`00````0`00`AEjAEl2AF`AFbAFdAEfAEh16574320165743265743265743265743255657016574320165743265743260165743260657432666555777444333222016574320165743260657432016574320165743266566165657432156574325016574320165743243201657432016574321111050``````````AGb0000000`00AGd1111`11`````AGjAGl`Jl21212121211212121212022121222221212102121121AGh233332323232322```AfAl10111`````````````AHd``0`AHb0`0AHhAHf321032222310321032103221033332AHj21402140214214321433321432143214342143AHl`00000000000`0000AHn00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}`{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}````````````````{{bd}f}0`{b{{b{c}}}{}}00000{{{b{h}}}{{b{hc}}}{}}00000{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{b{b{hc}}}f{}}0{bf}0{n{{b{c}}}{}}00000{n{{b{hc}}}{}}00000{c{{A`{Gd}}}Ab}{nf}00000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gl}}{b{Gl}}}Ad}{{b{b{c}}}Ad{}}00000000000000{{{b{Gd}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}B`}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gj}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gl}}{b{hAn}}}{{A`{fCn}}}}{cc{}}000{GnGh}{H`Gh}22{cGd{{Hh{}{{Fl{{Hf{{Hd{Hb}}}}}}}}HjHl}}{HnGd}{I`Gd}{{{b{Gd}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{}n}00000{{}c{}}00000{IbId}{GdId}{GfId}{IbIf}{GdIf}{GfIf}{IbIh}{GdIh}{GfIh}``{{{b{Gd}}c}A`Bn}{bc{}}0`{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{bC`}00000>>>>>>```````````````````````````````````````````````````````{{bd}f}000{{{b{Ij}}}{{b{Df}}}}{{{b{Il}}}{{b{Df}}}}{{{b{In}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Ij}}}Ij}{{{b{Dh}}}Dh}{{{b{Il}}}Il}{{{b{In}}}In}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Ij}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Il}}}Ab}{c{{A`{In}}}Ab}{nf}0000{{{b{Ij}}{b{Ij}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{J`}}{b{J`}}}Ad}{{{b{Il}}{b{Il}}}Ad}{{{b{In}}{b{In}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Ij}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Il}}{b{hAn}}}{{A`{fCn}}}}{{{b{In}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Ij}}}}{{{b{Df}}}{{A`{J`c}}}{}}{{{b{Df}}}{{A`{Il}}}}{{{b{Df}}}{{A`{In}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Jb{Df}}}{{Jd{Db}}}{{Jh{}{{Jf{{E`{ce}}}}}}}}{{{b{Ij}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Il}}{b{hc}}}fBb}{{{b{In}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Ij}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Il}}c}A`Bn}{{{b{In}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Jd{Db}}}{{Jh{}{{Jf{{E`{Ijc}}}}}}}}{{Dhe}Dh{{Jd{Db}}}{{Jh{}{{Jf{{E`{Ilc}}}}}}}}{{Dh{Bl{Gd}}}Dh}{{Dhe}Dh{{Jd{Db}}}{{Jh{}{{Jf{{E`{Inc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Jj{c}}{Bl{{Dn{Jl}}}}}{{Jj{c}}}Jn}{{{Jj{{Hd{Jn}}}}{Bl{K`}}}{{Aj{Kb}}}}{{{b{h{Jj{c}}}}}{{Aj{Kd}}}Jn}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{L`}}G`{Bl{G`}}{Bl{{b{Kl}}}}G`Ad}{{Aj{n}}}}{{{b{{Fh{G`}}}}G`{Bl{G`}}{Bl{{b{Kl}}}}G`Ad}{{Aj{n}}}}`{{}Kf}{{}Kh}{{}Kj}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{c{{A`{Kj}}}Ab}{c{{A`{Kl}}}Ab}{c{{A`{Kn}}}Ab}{nf}0000000```{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{{b{Kj}}{b{Kj}}}Ad}{{{b{Kl}}{b{Kl}}}Ad}{{{b{Kn}}{b{Kn}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Jj{c}}}{{Aj{Ah}}}Jn}{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{{{b{Kj}}{b{hAn}}}B`}{{{b{Kl}}{b{hAn}}}B`}{{{b{Kn}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Kl}1{{{b{Kf}}}{{Dn{Kh}}}}`{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{b{Kj}}{b{hc}}}fBb}{{{b{Kl}}{b{hc}}}fBb}{{{b{Kn}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Kfc}{{Jj{c}}}Jn}`{{Kfc}Kf{{Hh{Kh}{{Fl{Kh}}}}}}```{c{{Jj{c}}}Jn};{LbKl}{G`Kl}{{{b{hKd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hKb}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}````````````{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}{{{b{Kj}}c}A`Bn}{{{b{Kl}}c}A`Bn}{{{b{Kn}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Kf{Bl{Ld}}}{{Aj{{Jj{Lf}}}}}}`{bC`}0000000{{{b{hKf}}{b{Lh}}}f}{{}c{}}0000000{{Kfn}Kf}{{Kf{Bl{{Dn{{Fh{Lb}}}}}}}Kf}{{Kh{Bl{c}}}Kh{{Jd{Kl}}}}{{KhAd}Kh}{{Kf{Bl{{Dn{{Dd{Lj}}}}}}}Kf}{{KhKj}Kh}{{KhG`}Kh}{{KfAd}Kf}0{{Kf{Bl{n}}}Kf}1500{{Kh{Bl{Kn}}}Kh}{{KfKh}Kf}{{Kf{Bl{c}}}Kf{{Jd{Ld}}}}{{Kf{Bl{{Dn{{Dd{n}}}}}}}Kf}{{Kh{Bl{G`}}}Kh}66{{Kf{Bl{j}}}Kf}{{Kf{Bl{K`}}}Kf}09??<<`````````````````````{{{b{hLl}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hLl}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Ll}}}Lj}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}KjAd}{{Aj{{Dd{Ll}}}}}}{{}c{}}000{Ll{{Aj{Ln}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Lh}}}Lh}{{b{b{hc}}}f{}}{bf}{{}Lh}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{M`{Lj}}}}}Lj}{{{b{Lh}}{b{hAn}}}B`}{cc{}}{{{b{Lh}}}n}{{{b{Lh}}}K`}{{{b{Df}}AdAd}Lj}{{{b{Mb}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Kl}}}}{Bl{G`}}G`{Bl{{b{Kn}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{Mb}}{b{Kf}}}{{Aj{Lh}}}}{{}{{A`{c}}}{}}{bC`}5{{LhK`}Lh}`````````{{bd}f}00`{{{Md{c}}{b{D`}}}{{Aj{{Mf{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Mh}}}Mh}{{{b{Mj}}}Mj}{{{b{Ml}}}Ml}{{b{b{hc}}}f{}}00{bf}00``{{}Mh}{{}Mj}{{}Ml}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Mh}}}Ab}{c{{A`{Mj}}}Ab}{c{{A`{Ml}}}Ab}{nf}0000{{{b{Mh}}{b{Mh}}}Ad}{{{b{Mj}}{b{Mj}}}Ad}{{{b{Ml}}{b{Ml}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Md{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Mf{c}}}}}{{Aj{f}}}Bf}``{{{b{Mh}}{b{hAn}}}B`}{{{b{Mj}}{b{hAn}}}B`}{{{b{Ml}}{b{hAn}}}B`}{cc{}}0000{{{b{Mh}}{b{hc}}}fBb}{{{b{Mj}}{b{hc}}}fBb}{{{b{Ml}}{b{hc}}}fBb}{{{Md{c}}Ad}{{Md{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Md{c}}n}{{Md{c}}}Bf}{c{{Md{c}}}Bf}````{{{b{Mh}}c}A`Bn}{{{b{Mj}}c}A`Bn}{{{b{Ml}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Md{c}}Mn}{{Md{c}}}Bf}{{{Md{c}}{Bl{Db}}}{{Md{c}}}Bf}0{{{Md{c}}{Bl{n}}}{{Md{c}}}Bf}{{{Md{c}}{Bl{Ad}}}{{Md{c}}}Bf}{{{Md{c}}Db}{{Md{c}}}Bf}0{{{Md{c}}G`}{{Md{c}}}Bf}{{{Md{c}}Ml}{{Md{c}}}Bf}15{{{b{h{Mf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}N`}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Nb}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{Nb}}}{{Aj{Lf}}}}0{bC`}{{{b{Nb}}N`}f}{{{b{Nb}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Nd{c}}}}}{{Aj{Cf}}}Bd}{{{Nf{c}}{b{D`}}}{{Aj{{Nh{c}}}}}Bf}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Nj}}}Nj}{{{b{Nl}}}Nl}{{{b{Nn}}}Nn}{{{b{O`}}}O`}{{b{b{hc}}}f{}}000{bf}000`{{{b{Ob}}{Bl{{b{Od}}}}}{{Aj{Of}}}}{{{b{Ob}}{Bl{{b{Od}}}}NlAd}{{Aj{Ah}}}}{{}Oh}{{}Nl}{{}Nn}{{}O`}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Nj}}}Ab}{c{{A`{Nn}}}Ab}{c{{A`{O`}}}Ab}{nf}0000000000{{{b{Nj}}{b{Nj}}}Ad}{{{b{Nn}}{b{Nn}}}Ad}{{{b{O`}}{b{O`}}}Ad}{{b{b{c}}}Ad{}}00000{{{Oj{c}}}{{Aj{Ah}}}Jn}{{{Nd{c}}}{{Aj{Ah}}}Bd}{{{b{h{Ol{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Nh{c}}}}}{{Aj{f}}}Bf}{{{Oj{c}}{Bl{{Dn{Jl}}}}Ad}{{Aj{Ah}}}Jn}{{{b{Nj}}{b{hAn}}}B`}{{{b{Nn}}{b{hAn}}}B`}{{{b{O`}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ob}}}}{{{b{Nj}}{b{hc}}}fBb}{{{b{Nn}}{b{hc}}}fBb}{{{b{O`}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{Oj{c}}{Bl{Ld}}}{{Oj{c}}}Jn}{{{b{Ob}}}{{Aj{Od}}}}{c{{Oj{c}}}Jn}{c{{Nd{c}}}Bd}{c{{Ol{c}}}Bf}{{}Oh}{c{{Nf{c}}}Bf}{{{b{h{Oj{c}}}}}{{Aj{On}}}Jn}{{{b{h{Nd{c}}}}}{{Aj{D`}}}Bd}{{{b{Nj}}c}A`Bn}{{{b{Nn}}c}A`Bn}{{{b{O`}}c}A`Bn}{{{Oj{c}}Ad}{{Oj{c}}}Jn}{{{Nd{c}}Ad}{{Nd{c}}}Bd}{bc{}}000{{{b{Nn}}c}{{Nf{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Oj{c}}{Bl{{Dd{Db}}}}}{{Oj{c}}}Jn}{{{Nd{c}}{Bl{{Dd{Db}}}}}{{Nd{c}}}Bd}{{{Ol{c}}A@`}{{Ol{c}}}{}}{{{Nf{c}}A@`}{{Nf{c}}}Bf}{{{Ol{c}}{Bl{O`}}}{{Ol{c}}}{}}{{Oh{Bl{O`}}}Oh}{{{Nf{c}}{Bl{O`}}}{{Nf{c}}}Bf}{{OhLd}Oh}{{{Oj{c}}{Bl{{Dd{Ln}}}}}{{Oj{c}}}Jn}{{{Oj{c}}{Bl{{E`{Lb{Dn{Df}}}}}}}{{Oj{c}}}Jn}{{{Oj{c}}{Bl{n}}}{{Oj{c}}}Jn}{{{Nd{c}}{Bl{n}}}{{Nd{c}}}Bd}{{Nlc}Nl{{Jd{{Bl{{Dn{Jl}}}}}}}}{{{Oj{c}}{Bl{{Dd{n}}}}}{{Oj{c}}}Jn}{{{Nd{c}}{Bl{{Dd{n}}}}}{{Nd{c}}}Bd}{{Nl{Bl{{Dn{{Fh{Lb}}}}}}}Nl}{{{Oj{c}}{Bl{j}}}{{Oj{c}}}Jn}{{{Nd{c}}{Bl{j}}}{{Nd{c}}}Bd}{{Nlc}Nl{{Jd{{Bl{j}}}}}}{{Nlc}Nl{{Jd{{Bl{n}}}}}}{{{b{h{Nh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{Nn}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{A@b}}}A@b}{{b{b{hc}}}f{}}{bf}{{}A@b}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{A@b}}}Ab}{nf}0000{{{b{A@b}}{b{A@b}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{A@d{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{A@f{c}}}{{Aj{Ah}}}Jn}{{{b{A@b}}{b{hAn}}}B`}{cc{}}0000{{{b{A@b}}{b{hc}}}fBb}{{{A@f{c}}{Bl{Mn}}}{{A@f{c}}}Jn}{{}n}0000{{}c{}}0000`{c{{A@d{c}}}Bf}{c{{A@h{c}}}Bf}{c{{A@f{c}}}Jn}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{A@b}}c}A`Bn}{{{A@f{c}}Ad}{{A@f{c}}}Jn}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{A@f{c}}Mn}{{A@f{c}}}Jn}5{{{A@d{c}}A@j}{{A@d{c}}}Bf}{{{A@f{c}}A@j}{{A@f{c}}}Jn}{{{A@f{c}}{Bl{{Dd{Lb}}}}}{{A@f{c}}}Jn}{{{A@f{c}}K`}{{A@f{c}}}Jn}{{{A@f{c}}{b{D`}}}{{A@f{c}}}Jn}{{{b{h{A@h{c}}}}{b{Ah}}}{{Aj{f}}}Bf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{{{b{Mb}}}{{b{{Fh{G`}}}}}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}MbJn}{{}n}{{}c{}}{{{b{Jn}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Jn}}}{{Bl{{b{Lf}}}}}}{{{b{Mb}}}A@l}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Mn}}}{{Aj{D`}}}A@n}``{{bd}f}{{{b{AA`}}n}{{E`{AA`AA`}}}}{AA`{{Dn{AAb}}}}{cAA`{{Jh{}{{Jf{f}}}}}}{cAA`{{Jh{}{{Jf{{Bl{f}}}}}}}}{{AAdc}AA`{{Jh{}{{Jf{{Bl{f}}}}}}}}{{AAdc}AA`{{Jh{}{{Jf{f}}}}}}{{{b{AA`}}}{{b{AAf}}}}{{{b{hAA`}}}{{b{hAAf}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{AA`{{Hd{AAb}}}}{{{b{AA`}}n}Ad}{{{b{AA`}}}AA`}{{b{b{hc}}}f{}}{bf}{{{AAh{c}}}{{Aj{n}}}Jn}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{AA`}}}{{b{AAd}}}}{{{b{AA`}}{b{AA`}}}Ad}{{{b{AA`}}{b{{b{AAb}}}}}Ad}{{{b{AA`}}}{{b{{Fh{AAj}}}}}}{{{AAh{c}}}{{Aj{Ah}}}Jn}{{{b{AA`}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AAlAA`}1{c{{Aj{{AAh{Lf}}}}}{{Jd{Ld}}}}{{nAAd}AA`}{{{b{AAd}}}{{b{{Fh{AAj}}}}}}{{{AAh{c}}{Bl{Mn}}}{{AAh{c}}}Jn}{{}n}0{{}c{}}0{AA`{{E`{{Dd{AAj}}n{Dd{{Hd{AAb}}}}{Bl{AAn}}}}}}{{{b{AA`}}}}{{{b{AA`}}}{{ABf{{Dd{{Hd{AB`}}}}ABbABd}}}}{{{b{AA`}}}n}{{{AAh{c}}Ad}{{AAh{c}}}Jn}{c{{AAh{c}}}Jn}{{AAdn{Dd{{Hd{AAb}}}}{Bl{AAn}}}AA`}{AAdAA`}{{AAdn}AA`}{{{b{AA`}}}AA`}{{{b{hAA`}}{Bl{AAn}}}f}{{{b{hAA`}}nn}f}0{{bnn}c{}}011{{AA`nn}AA`}0{{{b{AA`}}n}{{E`{{Hd{AAb}}{Hd{AAb}}}}}}0{{{b{hAA`}}}{{Bl{AAn}}}}{{{b{AA`}}}{{Hd{AAb}}}}{bc{}}{{{b{AA`}}{b{AA`}}}AAn}{{{b{AA`}}b}AAn}10{e{{A`{AA`c}}}{}{{Jh{}{{Jf{{A`{fc}}}}}}}}{e{{A`{AA`c}}}{}{{Jh{}{{Jf{{A`{{Bl{f}}c}}}}}}}}{{AAde}{{A`{AA`c}}}{}{{Jh{}{{Jf{{A`{fc}}}}}}}}{{AAde}{{A`{AA`c}}}{}{{Jh{}{{Jf{{A`{{Bl{f}}c}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{AAdn{Dd{{Hd{AAb}}}}{Bl{AAn}}}{{A`{AA`ABh}}}}{bC`}0{{{b{AA`}}}{{Bl{{b{AAn}}}}}}0{{{b{AA`}}}{{b{{Fh{{Hd{AAb}}}}}}}}{{{b{AA`}}}ABb}{{}c{}}0{{{AAh{c}}{Bl{Mn}}}{{AAh{c}}}Jn}{{{AAh{c}}Ad}{{AAh{c}}}Jn}{{{AAh{c}}{Bl{n}}}{{AAh{c}}}Jn}0{{{AAh{c}}{Bl{e}}}{{AAh{c}}}Jn{{Jd{Ld}}}}{{{AAh{c}}{Bl{{Dn{Jl}}}}}{{AAh{c}}}Jn}{{{AAh{c}}{Bl{{Dn{{Fh{Lb}}}}}}}{{AAh{c}}}Jn}4{{{AAh{c}}{Bl{{b{hj}}}}}{{AAh{c}}}Jn}{{{AAh{c}}K`}{{AAh{c}}}Jn}{{{AAh{c}}{b{D`}}}{{AAh{c}}}Jn}{{AA`{Bl{AAn}}}AA`}{{{b{AA`}}{Bl{AAn}}}{{Hd{AAb}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{ABj}}}ABj}{{b{b{hc}}}f{}}{bf}{{{b{ABj}}n}ABl}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{AAj}}c}{{A`{ABnABh}}}{{ACb{}{{Jf{{b{AC`}}}}}}}}`{nf}0{{{b{ABn}}{b{ABn}}}Ad}{{{b{ABn}}{b{hAn}}}{{A`{fCn}}}}{{{b{ABj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{ACdABn}1{{}n}0{{}c{}}0{{{b{ABj}}}{{b{{Bl{{Dd{ACf}}}}}}}}```````{{{b{ABj}}}{{b{ACh}}}}`{bc{}}{c{{A`{e}}}{}{}}0{ACj{{A`{ABjACl}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{ACn{c}}n}{{Aj{AD`}}}Jn}{{ADbn}{{Aj{AD`}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{ADd}}}ADd}{{{b{ADf}}}ADf}{{b{b{hc}}}f{}}0{bf}0{{{b{ADh}}}{{ADl{nADj}}}}{{}ADf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ADd}}}Ab}{c{{A`{ADf}}}Ab}{nf}0000{{{b{ADd}}{b{ADd}}}Ad}{{{b{ADf}}{b{ADf}}}Ad}{{b{b{c}}}Ad{}}00000{{{ACn{c}}}{{Aj{Ah}}}Jn}{ADb{{Aj{Ah}}}}{{{b{AD`}}n}Ad}{{{b{ADd}}{b{hAn}}}B`}{{{b{ADf}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ADn}}}{{Aj{ADb}}}}{{{b{h{ACn{c}}}}}{{Aj{{b{ADn}}}}}Jn}{{{b{hADb}}}{{Aj{{b{ADn}}}}}}{{{b{ADd}}{b{hc}}}fBb}{{{b{ADf}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{AD`}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Ln}}}}}}{Bl{{b{j}}}}}Ah}`{c{{ACn{c}}}Jn}{{{b{hAD`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{ACn{c}}}}}{{Aj{n}}}Jn}{{{b{hADb}}}{{Aj{n}}}}`{{{ACn{c}}ADf}{{ACn{c}}}Jn}{{ADbADf}ADb}{{{b{AD`}}}{{b{On}}}}{{{b{h{ACn{c}}}}}{{Aj{On}}}Jn}{{{b{hADb}}}{{Aj{On}}}}`{{{b{ADd}}c}A`Bn}{{{b{ADf}}c}A`Bn}{{{ACn{c}}Ad}{{ACn{c}}}Jn}{{{b{h{ACn{c}}}}ADn}fJn}1{{ADbAd}ADb}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{{{b{hLn}}n{b{{ADl{nADj}}}}}f}{bC`}000075`{{}c{}}0000{{{ACn{c}}{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{{ACn{c}}}}}Jn}{{ADb{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{ADb}}}}{{{ACn{c}}{Bl{{Dd{Db}}}}}{{ACn{c}}}Jn}{{{ACn{c}}{Bl{{Dd{Ln}}}}}{{ACn{c}}}Jn}{{ADb{Bl{{Dd{Ln}}}}}ADb}{{{ACn{c}}{Bl{{E`{Lb{Dn{Df}}}}}}}{{ACn{c}}}Jn}{{ADb{Bl{{E`{Lb{Dn{Df}}}}}}}ADb}{{{ACn{c}}{Bl{{Dn{Jl}}}}}{{ACn{c}}}Jn}{{ADb{Bl{{Dn{Jl}}}}}ADb}{{{ACn{c}}{Bl{{Dd{n}}}}}{{ACn{c}}}Jn}{{ADb{Bl{{Dd{n}}}}}ADb}{{{ACn{c}}{Bl{j}}}{{ACn{c}}}Jn}{{ADb{Bl{j}}}ADb}{{{ACn{c}}{Bl{{E`{nn}}}}}{{ACn{c}}}Jn}{{ADb{Bl{{E`{nn}}}}}ADb}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{AAn}}}AE`}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{Cf}}{b{Cf}}}{{Aj{f}}}}{cc{}}{{}n}{{}AEb}{{}c{}}{{{Bl{{b{Jl}}}}{b{ADh}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AEb}}AE`{b{AAd}}}Ad}{{{Dd{{E`{{b{AC`}}A@l}}}}AAj{Bl{AEd}}}{{Aj{{Hd{AAb}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{AEf{c}}{b{D`}}}{{Aj{{AEh{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{AFb}}}AFb}{{{b{AFd}}}AFd}{{b{b{hc}}}f{}}00000{bf}00000``{{}AEj}{{}AEl}{{}AEn}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{AEj}}}Ab}{c{{A`{AEl}}}Ab}{c{{A`{AEn}}}Ab}{c{{A`{AF`}}}Ab}{c{{A`{AFb}}}Ab}{c{{A`{AFd}}}Ab}`{nf}0000000;{{{b{{AEh{c}}}}{b{Ah}}}{{`{{AFh{}{{Jf{{Aj{{AFf{ABh}}}}}}}}}}}Bf}{{{b{AEj}}{b{AEj}}}Ad}{{{b{AEl}}{b{AEl}}}Ad}{{{b{AEn}}{b{AEn}}}Ad}{{{b{AF`}}{b{AF`}}}Ad}{{{b{AFb}}{b{AFb}}}Ad}{{{b{AFd}}{b{AFd}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{AEh{c}}}}}{{Aj{N`}}}Bf}{{{AEf{c}}{b{hAh}}}{{Aj{N`}}}Bf}{{{b{AEj}}{b{hAn}}}{{A`{fCn}}}}{{{b{AEl}}{b{hAn}}}B`}{{{b{AEn}}{b{hAn}}}B`}{{{b{AF`}}{b{hAn}}}B`}{{{b{AFb}}{b{hAn}}}B`}{{{b{AFd}}{b{hAn}}}B`}{cc{}}0000000{{}AEj}{{{b{{AEh{c}}}}}{{b{{AFl{{AFj{c}}}}}}}Bf}{{{b{AEj}}{b{hc}}}fBb}{{{b{AEl}}{b{hc}}}fBb}{{{b{AEn}}{b{hc}}}fBb}{{{b{AF`}}{b{hc}}}fBb}{{{b{AFb}}{b{hc}}}fBb}{{{b{AFd}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{AEj}}}Ad}0```{c{{AEf{c}}}{BfBf}}``{{{b{AEj}}c}A`Bn}{{{b{AEl}}c}A`Bn}{{{b{AEn}}c}A`Bn}{{{b{AF`}}c}A`Bn}{{{b{AFb}}c}A`Bn}{{{b{AFd}}c}A`Bn}{{{AEf{c}}Ad}{{AEf{c}}}Bf}`{bc{}}00000{{{b{AEl}}c}{{AEf{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{AF`}}}}{AFn{{Aj{AFb}}}}{AG`{{Aj{AFd}}}}{bC`}0000000{{}c{}}0000000{{{AEf{c}}AEn}{{AEf{c}}}Bf}{{{AEf{c}}{Bl{n}}}{{AEf{c}}}Bf}0{{{AEf{c}}AEj}{{AEf{c}}}Bf}{{{b{h{AEh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{AEl}}Ahc}{{Aj{f}}}Bf}{{{b{{AEh{c}}}}{Dd{{AFf{ABh}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{L`}}e{b{g}}n}{{Aj{f}}}{{Jd{Lb}}}{{Jh{}{{Jf{c}}}}}{CbHjHl}}`{{{b{{Fh{Ld}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Ld}}}}}}}}{{{b{{Fh{Ld}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Ld}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Jb{L`}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Jb{L`}}}}{{{b{L`}}}Ld}``{{{b{AGb}}c}{}Hb}{{{b{AGb}}c}{}{HbHj}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AGb}}}}{{}n}{{}c{}}{{{b{AGd}}}N`}{{{b{AGb}}c}AGf{HbHj}}{{{b{AGb}}e}{{AGf{c}}}Hj{{Fn{}{{Fl{c}}}}Hj}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{AFne}{}Hb{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Jl}}}}Ad}{{Aj{f}}}}{{{b{Jl}}}{{Bl{{b{AGh}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AGj}}}AGj}{{{b{AGl}}}AGl}{{b{b{hc}}}f{}}0{bf}0{{{b{AGl}}}{{b{{Fh{AGj}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AGj}}}Ab}{c{{A`{AGl}}}Ab}{nf}0{{{b{AGj}}}{{b{Lj}}}}{{{b{Jl}}{b{Ah}}}{{Aj{Ln}}}}{{{b{AGj}}}{{b{Lb}}}}{{{b{AGj}}{b{hAn}}}B`}{{{b{AGl}}{b{hAn}}}B`}{cc{}}0{LnAGj}{AGnAGj}{{{b{AGj}}}{{Bl{{b{Ln}}}}}}00{{{b{AGl}}{b{Df}}}{{Aj{{b{AGj}}}}}}{{}n}0{{}c{}}0{{{b{Jl}}}{{Bl{{Dd{Lb}}}}}}{{AGn{Bl{Ln}}{Bl{Ln}}{Bl{Ln}}}AGj}{{K`{Dd{AGj}}{Bl{n}}}AGl}{{{b{AGj}}}{{Bl{n}}}}{{{b{AGl}}}{{Bl{n}}}}{{{b{AGl}}}{{b{K`}}}}{{{b{AGj}}c}A`Bn}{{{b{AGl}}c}A`Bn}{{{b{AGh}}{b{AGl}}}{{Aj{Ad}}}}{{{b{hAGl}}{b{{Fh{n}}}}}f}=={{{b{AGj}}}{{Bl{Ln}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAGl}}K`}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{Mb}}}{BdJnAH`}}{{{Bl{{b{{Fh{Lb}}}}}}{b{D`}}{Bl{{b{{Fh{Ln}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AHb}}}AHb}{{b{b{hc}}}f{}}{bf}{{}AHd}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AHb}}{b{hAn}}}B`}{cc{}}00{AHfAHd}{AHhAHd}{A@lAHd}3{{{b{AHj}}{Ff{n}}}{{Aj{A@l}}}}{{{b{AHh}}{Ff{n}}}{{Aj{A@l}}}}{{{b{AHf}}{Ff{n}}}{{Aj{A@l}}}}{{{b{AHd}}{Ff{n}}}{{Aj{A@l}}}}{{{b{AHj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{A@l}}}}}}{{{b{AHh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{A@l}}}}}}{{{b{AHf}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{A@l}}}}}}{{{b{AHd}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{A@l}}}}}}{{{b{AHj}}}{{Aj{n}}}}{{{b{AHh}}}{{Aj{n}}}}{{{b{AHf}}}{{Aj{n}}}}{{{b{AHd}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AHb}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AHd}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AHd}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Fh{G`}}}}}{{Bl{AHl}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}};:9>````76432{{{b{AHn}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AHn}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"DCd","p":[[1,"reference"],[5,"Private",2239],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2240],[5,"HiveOptions",0,2240],[1,"usize"],[6,"Result",2241],[10,"Deserializer",2242],[1,"bool"],[10,"SerReader",2099,2243],[5,"DataFrame",2244],[8,"PolarsResult",2245],[10,"SerWriter",2099,2243],[5,"Formatter",2246],[8,"Result",2246],[10,"Hasher",2247],[10,"Read",2248],[10,"Write",2248],[10,"ArrowReader",0,2243],[8,"RecordBatch",2249],[6,"Option",2250],[10,"Serializer",2251],[5,"TypeId",2252],[10,"WriteDataFrameToFile",0,2243],[5,"AvroReader",86,2253],[8,"ArrowSchema",2254],[10,"Seek",2248],[6,"AvroCompression",86],[5,"AvroWriter",86,2255],[5,"Error",2246],[8,"Schema",2256],[5,"String",2257],[5,"Vec",2258],[1,"str"],[5,"CloudOptions",373],[5,"CloudLocation",153,2259],[10,"ObjectStore",2260],[5,"Arc",2261],[1,"tuple"],[5,"PolarsObjectStore",153,2262],[5,"Path",2263],[10,"AsyncWrite",2264],[10,"Unpin",2265],[5,"CloudWriter",153,2266],[5,"Error",2267],[10,"Command",2268],[8,"Result",2267],[5,"Url",2269],[5,"Bytes",2270],[5,"Range",2271],[1,"slice"],[5,"ObjectMeta",2260],[17,"Output"],[10,"FnOnce",2272],[1,"u8"],[10,"VarInt",2273],[6,"PlCredentialProvider",228],[5,"CredentialProviderFunction",228],[5,"AwsCredential",228,2274],[6,"AzureCredential",228,2275],[5,"GcpCredential",228,2276],[5,"InstanceCredentials",2274],[5,"SessionCredentials",2274],[10,"Future",2277],[5,"Box",2278],[5,"Pin",2279],[10,"Fn",2272],[10,"Send",2265],[10,"Sync",2265],[5,"PythonFunction",2280],[8,"PyObject",2281],[10,"IntoCredentialProvider",228],[8,"AwsCredentialProvider",2282],[8,"AzureCredentialProvider",2283],[8,"GcpCredentialProvider",2284],[6,"AmazonS3ConfigKey",373,2285],[6,"AzureConfigKey",373,2286],[6,"GoogleConfigKey",373,2287],[6,"CloudType",373],[10,"AsRef",2288],[10,"Into",2288],[17,"Item"],[10,"IntoIterator",2289],[5,"CsvReader",563,2290],[10,"PhysicalIoExpr",2031],[10,"MmapBytesReader",1427],[8,"SchemaRef",2256],[5,"OwnedBatchedCsvReader",563,2291],[5,"BatchedCsvReader",563,2291],[5,"CsvReadOptions",563,2292],[5,"CsvParseOptions",563,2292],[6,"CsvEncoding",563,2292],[6,"CommentPrefix",563,2292],[6,"NullValues",563,2292],[5,"Path",2293],[5,"PlSmallStr",2294],[5,"PathBuf",2293],[5,"File",2295],[5,"SchemaInferenceResult",899],[6,"DataType",2296],[6,"Buffer",822],[5,"Series",2297],[8,"PlHashSet",2298],[6,"ReaderBytes",1427],[5,"CsvWriter",926,2299],[5,"BatchedWriter",926,2299],[5,"CsvWriterOptions",926,2300],[5,"SerializeOptions",926,2300],[6,"QuoteStyle",926,2300],[8,"NonZeroUsize",2301],[1,"u64"],[5,"FileCacheEntry",1071,2302],[5,"IpcStreamReader",1092,2303],[5,"IpcWriter",1092,2304],[5,"BatchedWriter",1092,2304],[5,"IpcScanOptions",1092,2305],[5,"IpcReadOptions",1092,2306],[5,"IpcWriterOptions",1092,2304],[6,"IpcCompression",1092,2304],[5,"IpcReaderAsync",1092,2306],[5,"FileMetadata",2307],[1,"i64"],[5,"IpcStreamWriterOption",1092,2303],[5,"IpcReader",1092,2305],[5,"IpcStreamWriter",1092,2303],[8,"ArrowSchemaRef",2254],[5,"CompatLevel",2296],[5,"JsonWriterOptions",1329],[5,"JsonWriter",1329],[5,"JsonReader",1329],[5,"BatchedWriter",1329],[6,"JsonFormat",1329],[5,"MemSlice",2308],[10,"BufRead",2248],[5,"StructArray",1450,2309],[10,"Array",2310],[6,"ArrowDataType",2311],[10,"Any",2252],[5,"JsonLineReader",1450],[5,"Field",2312],[5,"GrowableStruct",2313],[5,"Bitmap",2314],[10,"Scalar",2315],[5,"StructValueIter",2316],[5,"BitmapIter",2317],[6,"ZipValidity",2318],[6,"PolarsError",2245],[5,"FileMetadata",1556,2319],[6,"ColumnOrder",2320],[5,"ParquetStatistics",1556],[5,"ColumnChunkMetadata",2321],[10,"ExactSizeIterator",2322],[5,"MutableStatistics",2323],[5,"KeyValue",2324],[5,"SchemaDescriptor",2325],[5,"FileMetaData",2324],[6,"ParquetError",2326],[5,"ParquetReader",1609,2327],[5,"BatchedParquetReader",1609,2328],[5,"ParquetAsyncReader",1609,2327],[5,"ParquetOptions",1609,2329],[6,"ParallelStrategy",1609,2329],[5,"RowGroupMetadata",2330],[6,"IsSorted",2331],[8,"PlHashMap",2298],[8,"FileMetadataRef",1556],[1,"f64"],[6,"PrefilterMaskSetting",1755,2328],[6,"Filter",2332],[5,"ParquetWriter",1777,2333],[5,"BatchedWriter",1777,2334],[5,"StatisticsOptions",1777,2335],[5,"ParquetWriteOptions",1777,2336],[6,"ParquetCompression",1777,2336],[5,"GzipLevel",1777,2336],[5,"BrotliLevel",1777,2336],[5,"ZstdLevel",1777,2336],[8,"RowGroupIterColumns",1777,2337],[10,"Iterator",2338],[5,"FileWriter",2339],[5,"Mutex",2340],[1,"u32"],[1,"i32"],[5,"RuntimeManager",2009],[10,"GetSize",2009],[5,"JoinHandle",2341],[10,"StatsEvaluator",2031],[5,"ColumnStats",2031],[5,"BatchStats",2031],[5,"Field",2342],[10,"Sized",2265],[6,"DynByteSourceBuilder",2121],[6,"DynByteSource",2121],[5,"ObjectStoreByteSource",2121],[5,"MemSliceByteSource",2121],[10,"ByteSource",2121],[6,"SupportedCompression",2202],[6,"SplitSlicePosition",2220],[6,"ObjectStoreCredential",228],[5,"Utf8Field",822],[5,"CategoricalField",822],[5,"DatetimeField",822],[15,"Datetime",896]],"r":[[0,2243],[1,2240],[2,2240],[3,2243],[4,2243],[5,2243],[87,2253],[88,2255],[89,2343],[153,2259],[154,2266],[155,2262],[156,2262],[165,2344],[195,2259],[207,2344],[230,2274],[232,2275],[237,2276],[376,2285],[381,2286],[405,2287],[565,2291],[566,2292],[567,2292],[568,2292],[569,2292],[570,2290],[574,2292],[575,2291],[621,2345],[622,2345],[703,899],[927,2299],[928,2299],[929,2300],[933,2300],[934,2300],[1071,2346],[1072,2347],[1073,2302],[1080,2346],[1082,2347],[1092,2304],[1093,2304],[1094,2306],[1095,2305],[1096,2306],[1097,2305],[1098,2303],[1099,2303],[1100,2303],[1101,2304],[1102,2304],[1451,2309],[1556,2319],[1574,2323],[1610,2328],[1613,2329],[1614,2327],[1615,2329],[1616,2327],[1640,2328],[1695,2348],[1726,2328],[1758,2328],[1761,2328],[1765,2348],[1770,2349],[1772,2350],[1777,2334],[1779,2336],[1781,2336],[1784,2336],[1785,2336],[1786,2333],[1787,2337],[1789,2335],[1792,2336],[2099,2243],[2100,2243],[2101,0],[2109,2001],[2110,2351],[2111,2351],[2112,2351],[2113,2351],[2117,2351],[2118,2351],[2119,2351]],"b":[[313,"impl-From%3CInstanceCredentials%3E-for-AwsCredential"],[314,"impl-From%3CSessionCredentials%3E-for-AwsCredential"],[1455,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1456,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1457,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1458,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1478,"impl-PartialEq-for-StructArray"],[1479,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1505,"impl-Array-for-StructArray"],[1506,"impl-StructArray"],[1509,"impl-StructArray"],[1510,"impl-Array-for-StructArray"],[1522,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1523,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1524,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1525,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1533,"impl-Array-for-StructArray"],[1534,"impl-StructArray"],[1550,"impl-StructArray"],[1551,"impl-Array-for-StructArray"],[2159,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[2160,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2161,"impl-From%3CMemSlice%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKUGyAAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnABAAugACAMAAAwDGAAIAzgAAANEAAADWAA4A5gAAAOgAAADtAAAA7wAAAPEAAgD1AAEA+AA9ADoBAQA/AQkATwEIAFoBAgBeARcAfAEBAIgBAACUAQEAlwEBAK0BEADBATYA/QEDAAICCAAQAhwALwIAADYCBAA/AgEAQwIqAHACOACqAgQAtgIAALgCEQDTAgAA1QICANwCKgAIAwgAEgMHACoDAAA3AxIASwMXAGcDBABwAyAAkgMBAJYDAACYAwYAoAMAAKgDFwDCAyEA5QMAAOcDAgDvAwIA8wMAAPUDBQABBAIACAQDAA0EFgAwBAcAOQQCAD0EAQBBBAQARwQAAEoEAABNBAAATwQAAFIEAwBXBCIAewQ2ALMEAwDCBA4A3gQFAOYENQAeBQEAJAUBACgFAAArBQAALgUBADEFAQA4BSQAXgUAAGQFAABmBQQAcgUZAI4FAQCUBQAAlgUHAJ8FAQCiBQEApQUGAK0FAQCwBQkAuwUNAMoFAQDNBQAA0AUAANIFAgDYBQAA2gUAAOIFAADkBQEA5wUAAOoFAQDtBQ0A/AUCAAIGAQAGBggAEAYBABYGAAAYBgcAIwYDACkGBAAvBgAAMQYBAD8GAgBDBgMASAYBAEsGAABOBgAAUAYAAFQGNACOBgkAnQYAAJ8GAgCjBgAApQYBAKgGAQCrBgMAsAYUAMcGBQDOBgAA0AYFANcGAADZBgEA3AYJAOgGAQDrBggA9QYAAPcGAQD6BgAA/AYBAP8GAQACBygALQc7AGsHBQB5Bw8AkQcBAJQHAQCXBwAAmQcFAKEHKQDQBwEA0wcAANoHAgDeBwQA5AcBAOcHAADpBwYA8gcEAPgHCQADCAcADQgCABgIAQAiCAMAKQgNADgIAAA6CAAAPggNAE0IAQBQCAAAUggaAHAIAgB1CA4AiAgTAJ0IAwCiCAIApggAAKkIDQC4CAAAuwgEAA=="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPPFPPPPPPPPKPPGGPGPPPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPFPPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPGPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPIGPPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPGGPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJJSFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNOONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Bitwise","","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","Bytes","","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Deserialized","","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","Intersect","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","LazySerde","LeadingOnes","LeadingZeros","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","OpaqueColumnUdf","Operator","Or","","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitwise_and","bitwise_count_ones","bitwise_count_zeros","bitwise_leading_ones","bitwise_leading_zeros","bitwise_or","bitwise_trailing_ones","bitwise_trailing_zeros","bitwise_xor","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_serialize","","","try_to_compact_string","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","And","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Bitwise","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LeadingOnes","LeadingZeros","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","Or","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Xor","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","CorrCov","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","corr_cov_options","is_corr","rolling_options","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","init","","","into","","","new","","serialize","to_owned","try_deserialize_bytes","try_from","","","try_into","","","try_serialize","","try_serialize_to_bytes","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","escape_regex","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_missing_columns","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","try_new_streaming_if_requested","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_cross","is_full_days","is_ie","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_parse","try_parse_interval","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1727,"polars_lazy::dsl::AggExpr"],[1734,"polars_lazy::dsl::BooleanFunction"],[1737,"polars_lazy::dsl::Expr"],[1772,"polars_lazy::dsl::FunctionExpr"],[1817,"polars_lazy::dsl::StringFunction"],[1837,"polars_lazy::dsl::TemporalFunction"],[1839,"polars_lazy::dsl::binary"],[1860,"polars_lazy::dsl::cat"],[1861,"polars_lazy::dsl::dt"],[1917,"polars_lazy::dsl::function_expr"],[2148,"polars_lazy::dsl::function_expr::BooleanFunction"],[2151,"polars_lazy::dsl::function_expr::FunctionExpr"],[2196,"polars_lazy::dsl::function_expr::StringFunction"],[2216,"polars_lazy::dsl::function_expr::TemporalFunction"],[2218,"polars_lazy::dsl::function_expr::cat"],[2220,"polars_lazy::dsl::function_expr::pow"],[2224,"polars_lazy::dsl::function_expr::rolling"],[2259,"polars_lazy::dsl::function_expr::rolling::RollingFunction"],[2262,"polars_lazy::dsl::function_expr::rolling_by"],[2295,"polars_lazy::dsl::function_expr::trigonometry"],[2339,"polars_lazy::dsl::functions"],[2414,"polars_lazy::dsl::python_udf"],[2479,"polars_lazy::dsl::string"],[2541,"polars_lazy::dsl::udf"],[2547,"polars_lazy::frame"],[3036,"polars_lazy::frame::pivot"],[3038,"polars_lazy::prelude"],[3665,"polars_lazy::prelude::DslPlan"],[3717,"polars_lazy::prelude::LiteralValue"],[3720,"dyn_clone::sealed"],[3721,"polars_plan::dsl::meta"],[3722,"polars_plan::dsl::expr"],[3723,"polars_plan::dsl::struct_"],[3724,"polars_utils::pl_str"],[3725,"alloc::sync"],[3726,"polars_error"],[3727,"core::result"],[3728,"polars_plan::dsl::selector"],[3729,"core::convert"],[3730,"polars_plan::dsl::array"],[3731,"polars_plan::dsl::list"],[3732,"polars_plan::dsl::expr_dyn_fn"],[3733,"polars_core::frame::column"],[3734,"core::option"],[3735,"core::ops::function"],[3736,"core::marker"],[3737,"polars_plan::plans::visitor"],[3738,"polars_plan::dsl::function_expr"],[3739,"polars_core::datatypes::dtype"],[3740,"polars_core::chunked_array::ops::sort::options"],[3741,"polars_plan::dsl::function_expr::schema"],[3742,"polars_core::datatypes::field"],[3743,"core::any"],[3744,"alloc::vec"],[3745,"polars_plan::dsl::binary"],[3746,"core::clone"],[3747,"polars_plan::dsl::udf"],[3748,"polars_core::chunked_array::cast"],[3749,"polars_plan::dsl::cat"],[3750,"polars_plan::dsl::arity"],[3751,"polars_plan::dsl::function_expr::bitwise"],[3752,"polars_plan::dsl::function_expr::boolean"],[3753,"polars_plan::dsl::function_expr::cat"],[3754,"polars_plan::dsl::function_expr::datetime"],[3755,"polars_plan::dsl::function_expr::pow"],[3756,"polars_plan::dsl::function_expr::strings"],[3757,"polars_plan::dsl::function_expr::struct_"],[3758,"polars_plan::dsl::functions::temporal"],[3759,"polars_plan::dsl::options"],[3760,"core::iter::traits::collect"],[3761,"polars_lazy::dsl::eval"],[3762,"polars_core::utils"],[3763,"polars_time::windows::duration"],[3764,"polars_time::windows::group_by"],[3765,"polars_core::datatypes::time_unit"],[3766,"serde::de"],[3767,"polars_core::series"],[3768,"polars_plan::plans"],[3769,"polars_core::series::ops"],[3770,"polars_plan::dsl::dt"],[3771,"core::cmp"],[3772,"polars_lazy::dsl::list"],[3773,"polars_arrow::legacy::kernels::ewm"],[3774,"polars_core::chunked_array::ops"],[3775,"core::fmt"],[3776,"polars_plan::plans::apply"],[3777,"polars_ops::frame::join::iejoin"],[3778,"polars_plan::dsl::function_expr::range"],[3779,"polars_plan::dsl::function_expr::list"],[3780,"polars_plan::dsl::function_expr::array"],[3781,"polars_plan::dsl::function_expr::binary"],[3782,"polars_plan::dsl::function_expr::business"],[3783,"alloc::string"],[3784,"polars_plan::plans::options"],[3785,"polars_schema::schema"],[3786,"core::hash"],[3787,"polars_ops::series::ops::interpolation::interpolate"],[3788,"polars_ops::series::ops::is_between"],[3789,"polars_plan::dsl::name"],[3790,"polars_plan::plans::lit"],[3791,"polars_core::utils::supertype"],[3792,"polars_plan::dsl::python_udf"],[3793,"polars_utils::idx_vec"],[3794,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3795,"polars_ops::series::ops::rank"],[3796,"polars_time::group_by::dynamic"],[3797,"polars_core::chunked_array::ops::rolling_window"],[3798,"polars_core::datatypes"],[3799,"polars_core::chunked_array"],[3800,"polars_time::chunkedarray::rolling_window"],[3801,"polars_core::chunked_array::ops::search_sorted"],[3802,"serde::ser"],[3803,"polars_core::series::series_trait"],[3804,"polars_plan::dsl::string"],[3805,"polars_ops::chunked_array::list::to_struct"],[3806,"compact_str"],[3807,"polars_ops::series::ops::business"],[3808,"polars_arrow::legacy::kernels::time"],[3809,"polars_plan::dsl::function_expr::rolling"],[3810,"polars_plan::dsl::function_expr::rolling_by"],[3811,"polars_plan::dsl::function_expr::trigonometry"],[3812,"polars_core::frame"],[3813,"rayon::iter"],[3814,"polars_utils::python_function"],[3815,"pyo3::types::any"],[3816,"pyo3::instance"],[3817,"polars_utils::arena"],[3818,"polars_plan::plans::ir"],[3819,"polars_plan::plans::aexpr"],[3820,"polars_plan::frame::opt_state"],[3821,"polars_plan::plans::anonymous_scan"],[3822,"polars_lazy::scan::anonymous_scan"],[3823,"polars_core::schema"],[3824,"polars_utils::index"],[3825,"polars_lazy::frame::exitable"],[3826,"polars_utils::aliases"],[3827,"polars_lazy::scan::csv"],[3828,"polars_lazy::scan::ipc"],[3829,"polars_lazy::scan::ndjson"],[3830,"polars_lazy::scan::parquet"],[3831,"polars_lazy::scan::file_list_reader"],[3832,"polars_io::cloud::options"],[3833,"polars_ops::frame::join::args"],[3834,"bitflags::iter"],[3835,"std::path"],[3836,"polars_plan::plans::ir::scan_sources"],[3837,"polars_io::options"],[3838,"polars_io::csv::write::options"],[3839,"polars_io::ipc::write"],[3840,"polars_io::json"],[3841,"polars_io::parquet::write::options"],[3842,"core::num::nonzero"],[3843,"polars_io::csv::read::options"],[3844,"chrono_tz::timezones"],[3845,"polars_core::datatypes::any_value"],[3846,"polars_core::frame::group_by::proxy"],[3847,"std::io"],[3848,"polars_io::parquet::write::writer"],[3849,"chrono::naive::datetime"],[3850,"polars_plan::dsl::functions::selectors"],[3851,"polars_plan::dsl::functions::horizontal"],[3852,"polars_plan::dsl::functions::arity"],[3853,"polars_plan::dsl"],[3854,"polars_plan::dsl::functions::range"],[3855,"polars_plan::dsl::functions::index"],[3856,"polars_plan::dsl::functions::coerce"],[3857,"polars_plan::dsl::functions::syntactic_sugar"],[3858,"polars_plan::dsl::functions::business"],[3859,"polars_plan::dsl::functions::concat"],[3860,"polars_plan::dsl::functions::correlation"],[3861,"polars_plan::dsl::functions::repeat"],[3862,"polars_utils::python_function::serde_wrap"],[3863,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gh0EfGf422666Ib7`777H`0Gl79`69``9`9AKbG`92;``Gn<3``<<:`:`3<4443<94Gd0======444`4432=8==Gb<5`6>996>>>><`=><I````?777=Hb0``Cj0?9>0<0?``0?05Gj`3==1:::19?j22Ah`Gh000000<00000<6`=5=24Dl`993>>5``355Ef06?0016161`>>>160>60>>>7019>6`20046>``0Gf?HnH`099939`:94Gl::::::8`;::1::0:1:2`::70:::0`8::::::8188`111?15:`111111`:``78;5:1:`8`00111:0::0000000>>:40`::`:1`:500`88``;04301FhFjFlFn9<G`Gb:BfGd;>Gj9Gn;HbCjHdHfHhHjHlHnI`IbIdAhF`hl1111j0400`AlAn2`;?2102`22`222`2`22222221021022`2`Dd<3DhDl``5`5`95555555559Ff5348O`8FhFjFlFn6;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF```````AlAnj00021`0`000`0Il01````>=<1Bf00?><;:972Ff5Dd5hO`lFhFjFlFnDl<G`GbEf==GdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`DljG`GbEfBf0000GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj00FfAlDd4hO`lFhFjFlFnDl;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jAn1`1```1Dl22G`GbEfBf0GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhj000Gb00Ef00Gd00Gf00Gh00Gj00Gl00Gn00H`00Hb00Hh00Hj00Hl00Hn00I`00Ib00Id00Ah00Kl0j0008000Al11l002222`An33Bf44DhFbEnLf88G`GbEf07Gd0GfGh0Gj0Gl0Gn0H`0Hb0Cj0HdHfHhHjHlHnI`IbIdAhF``67`jFfAlDdAnhO`lFhFjFlFnDl<<<<<<<<<<<<<<G`GbEf0Bf000000000000GdGfGhGjGlGnH`HbCj0000HdHfHhHjHlHn0I`IbIdAh0000F`Bf1`j`An101Al12FfJjBdDdLf77hDl99GbEfGdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj0HdHf25`FfAlDd6hO`lFhFjFlFnDl=G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`0``j0FfAlDdAnhO`lFhFjFlFnDl<G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jNjAnhEf411044444444`4`4114Al3lO`7`57`577`777777707`7Dd0Bf090209`99`191111G``58:``8:``58::HdHf0`7:<`Hh21=2=8;==>==1===55421?>==`=`=Id?>FjFn=j0000`0>0::0`00`000`00;`00900F`=An2222``2222222222222222222h33Hl0<42244:9Dl5<GbEf?????GdGfGhGjGlGnH`HbCjHhHj>HnI`IbIdAhAn0j1Al211111111210211`1021181`113O`0`132`BfEf5444`FhFl`HdHf198763Fj3FnDl;G`Gb9:GdGfGhGjGlGnH`HbCj?>HhHjHlHnI`IbIdAhF`jDd1EfGdGhGjGlGnH`HbCjAlAnO`==Ff3=2h2lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`Dd0j11DhEnBd3EfGdGhGjGlGnH`HbCjFfAl?AnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF``hAnAl1j01200061206Ff2Dd45O`lFhFjFlFnDl9G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AKdAKfAKh2102AKjAKlAKnAL`ALbALd0ALfALh4ALjALlALnAM`3AMb528AMd1AMf11098432323570;5AMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`Ed0000000000000000000``Kf000000000000000000000000000000000000000000000000000000CjGh0Gf112222222H`0Gl44``4`404`Gn515515222152Gd0666666222226662363666666333Hb077477`772Gj855584887777777477777451582255888858844484844414878464558888`184888888188588485888488848888885555358`5555558`1858`44555848844444442284888584414645`````AKjAKlAKnAMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`GjGn0`0ABd0000`00000000000000000000000000000BBd00ABf000`0000000000000000000000000000ABh00000000000000`0000000000000000000000000000````Hd``````````````````````````0Hf`````10`````````100`1010```````10````10101```````ACdOhACj2102122221021022102222221022010210210222102102102102102`AAf000000000000000000000000000000000000000000000000000000000000`F`0000`ADh000000````````0`000000```0AEdABnADfADnAEhAEjAElAEn866580ADj77699999999087654321908765432197731877876543219876543219876543219AF`053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AG`99299843999999916475372646464;9293`9916453;9929164753999999973;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;92:9876543;;9999993292:9876543;246649999999696666666464646616644969119966164919664464646966916496699`````AFh0AIhAIj0Kb3`011120``1`00111300030311111`0````3``AHn0133``20032``12``4`114211122222221`AFfA@bJdAFn84AH`AHbAHd:A@`AHf;AIlACb<888ADl0007;:9AJh9AFh>AJf:98AIh87AIj76KbAFfA@bJd8AFn8AHn8AH`AHbAHd:A@`AHf;AIlACb<;:98AFh8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJd7AFn9AHn8AH`AHbAHd:A@`AHf;AIlACb<3<<;:98AFh8765?43>21=1=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJdAFn9AHnAH`AHbAHd:A@`AHf;AIlACb;;;:::999888AFh00888777666555333222111<<;::ADl:1199876AIh65AIj545?>=AJh==4<AJf<;:3982276Kb73AJbAFfA@bJdAFn;AHnAH`AHbAHd=A@`AHf>AIlACb86;6;:;:9?8AFh8?765AIh54AIj43Kb?>=AJh=4<AJf<;:498376225?5?53=?>AFfObJd36?>=;6<00040AHn111AFnADl5A@b8=444608`=AJbAHf33:8264>5AH`AHbAHdAIhA@`5AIjAIlACbKb8=2=AFf:>>140<Jd?AFhAHn<;:98=76542105;=22223?2AJhAFn32AJf?>=<;AHf;:987A@b743652AH`AHbAHdAIhA@`6AIjAIlACbKbJd00AFhAHnAFf=3AJhAFn43AJf?>=<;AHf;:9824A@b843762AH`AHbAHdAIhA@`6AIjAIlACbKbJd0=>=8;BBf0BBhBBjBBlBBnBC`BCbBCdBCf55BChBCjBCl14;3BCn:BD`49BDbBDd0>BDfBBf240;4BDh;13:624733?=BBj0BBl>BDj00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}?????????0{b{{b{c}}}{}}000000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{{G`{c}}}}}{{G`{c}}}{EhEh}}{{{b{Gb}}}Gb}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Cj}}}Cj}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000000{bf}00000000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjIj}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}2{{IljInB`}j}0{{j{Dn{J`}}{Bl{c}}B`B`}j{{Jb{n}}}}{{jjJdJf}j}{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Jj}}}}}}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Hd}{{}Hf}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Id}{jj}{In{{b{c}}}{}}000000000000000{{{b{{Bf{c}}}}}b{}}111111111111111111111{In{{b{Cdc}}}{}}000000000000000000000000000000000000{c{{Af{Dl}}}Jl}{c{{Af{j}}}Jl}{c{{Af{{G`{e}}}}}Jl{JnEh}}{c{{Af{Gb}}}Jl}{c{{Af{Ef}}}Jl}{c{{Af{{Bf{{Ab{En}}}}}}}Jl}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jl}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jl}{c{{Af{{Bf{K`}}}}}Jl}{c{{Af{{Bf{{Ab{Kb}}}}}}}Jl}{c{{Af{Gd}}}Jl}{c{{Af{Gf}}}Jl}{c{{Af{Gh}}}Jl}{c{{Af{Gj}}}Jl}{c{{Af{Gl}}}Jl}{c{{Af{Gn}}}Jl}{c{{Af{H`}}}Jl}{c{{Af{Hb}}}Jl}{c{{Af{Cj}}}Jl}{c{{Af{Hh}}}Jl}{c{{Af{Hj}}}Jl}{c{{Af{Hl}}}Jl}{c{{Af{Hn}}}Jl}{c{{Af{I`}}}Jl}{c{{Af{Ib}}}Jl}{c{{Af{Id}}}Jl}{c{{Af{Ah}}}Jl}{{AnClKd}j}{{jClKd}j}{{jj}}{{jc}j{{Aj{j}}}}{Inf}000000000000000000000000000000000000{jj}{Anj}1`{jKf}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jJ`B`}j}{{{b{Dl}}{b{Dl}}}B`}9{{{b{j}}{b{j}}}B`}{{{b{{G`{c}}}}{b{{G`{c}}}}}B`{KhEh}}{{{b{Gb}}{b{Gb}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{K`}}}}{b{{Bf{K`}}}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Kj}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Gn}}{b{Gn}}}B`}{{{b{H`}}{b{H`}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{I`}}{b{I`}}}B`}{{{b{Ib}}{b{Ib}}}B`}{{{b{Id}}{b{Id}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000000000{{KljB`}j}0{{jKn}j}{{jjJd}j}11`{{jc}j{{Jb{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}{Alj}1{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}<<{{jL`}j}={{}j}{Anj}88{{}{{Bf{{Ab{Bd}}}}}}9{{jj}j}{{{b{Dh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Fb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{En}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Lf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{j}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{G`{c}}}}{b{CdLb}}}{{Af{fLd}}}Eh}{{{b{Gb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ef}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{Bf{c}}}}{b{CdLb}}}{{Af{fLd}}}{}}{{{b{Gd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Gh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{H`}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hb}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Cj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{I`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ib}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Id}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ah}}{b{CdLb}}}{{Af{fLd}}}}{{{b{F`}}{b{CdLb}}}{{Af{fLd}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Lhj}1{Ljj}{Elj}{Clj}{Ijj}{Llj}{Lnj}{Ebj}{J`j}{B`j}{M`j}{Dlj}{{{b{E`}}}j}==={MbEf}{Md{{Bf{{Ab{Dh}}}}}}{Mf{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{Mh{{Bf{{Ab{Dh}}}}}}{cc{}}{Gl{{Bf{{Ab{Dh}}}}}}{Hb{{Bf{{Ab{Dh}}}}}}{H`{{Bf{{Ab{Dh}}}}}}{Gh{{Bf{{Ab{Dh}}}}}}{Mj{{Bf{{Ab{Dh}}}}}}{Ml{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}88888888{GhCj}9{MjCj}{H`Cj}{GjCj}<<<<<{I`Hn}===={{{b{E`}}}Ah}>{nAh}{jAh}{MnAh}{cc{}}{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}N`}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jInIn}j}{{AljB`}j}43{Ffj}{{{b{Jj}}{b{{Nb{Cn}}}}Nd{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}In}{{{b{Lf}}{b{{Nb{Cn}}}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}88{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fNf}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fNf}{{{b{Gb}}{b{Cdc}}}fNf}{{{b{Ef}}{b{Cdc}}}fNf}{{{b{Gd}}{b{Cdc}}}fNf}{{{b{Gf}}{b{Cdc}}}fNf}{{{b{Gh}}{b{Cdc}}}fNf}{{{b{Gj}}{b{Cdc}}}fNf}{{{b{Gl}}{b{Cdc}}}fNf}{{{b{Gn}}{b{Cdc}}}fNf}{{{b{H`}}{b{Cdc}}}fNf}{{{b{Hb}}{b{Cdc}}}fNf}{{{b{Cj}}{b{Cdc}}}fNf}{{{b{Hh}}{b{Cdc}}}fNf}{{{b{Hj}}{b{Cdc}}}fNf}{{{b{Hl}}{b{Cdc}}}fNf}{{{b{Hn}}{b{Cdc}}}fNf}{{{b{I`}}{b{Cdc}}}fNf}{{{b{Ib}}{b{Cdc}}}fNf}{{{b{Id}}{b{Cdc}}}fNf}{{{b{Ah}}{b{Cdc}}}fNf}{{Anj}j}{{j{Bl{In}}}j}{{j{Bl{j}}{Bl{In}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}In}000000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jNh}j}{{jj}j}{{}c{}}000000000000000000000000000000000000{{{b{j}}}}{NjAn}{AnAn}{h{{Af{{`{Nl}}Ad}}}}{{{b{Ef}}}B`}{{jccNn}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{O`j}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjOb}{{jJ`}j}:;;:;;{{O`c}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{O`{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Of}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jOhB`}j}1111{{{G`{{Bf{{Ab{Dh}}}}}}}{{Af{{Bf{{Ab{Dh}}}}Ad}}}}{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jO`}`44`{j}{{jc}j{{Aj{j}}}}0<{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Hd}{{}Hf}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Oj{{b{j}}}}}}}f}{{j{b{Cd{Oj{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ol{eD`}}}}I`}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjIj}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{O`{b{E`}}}j}05`{{j{Dn{J`}}{Bl{c}}B`B`B`}j{{Jb{n}}}}{{jIn{Bl{c}}B`B`B`}j{{Jb{n}}}}{{{b{E`}}jOn}j}{{jjOn}j}9{{jA@`{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}}j}`{Alj}{Anj}{jj}00{{jA@b}j}{{jjHh}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}A@d}j}{{jInc}j{{Ch{{b{Cd{A@h{A@f}}}}}{{Bj{{Bl{J`}}}}}}C`CbA@j}}{{jA@d}j}{{jjA@l}j}101010{{jOnJ`A@d}j}{{jjOnJ`A@l}j}{{jInB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLn}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@n}j{{Aj{j}}}}``{{{b{Dl}}c}AfAA`}{{{b{j}}c}AfAA`}{{{b{{G`{c}}}}e}Af{AAbEh}AA`}{{{b{Gb}}c}AfAA`}{{{b{Ef}}c}AfAA`}{{{b{{Bf{K`}}}}c}AfAA`}{{{b{{Bf{{Ab{Bd}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Kb}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Dh}}}}}}c}AfAA`}{{{b{{Bf{{Ab{En}}}}}}c}AfAA`}{{{b{Gd}}c}AfAA`}{{{b{Gf}}c}AfAA`}{{{b{Gh}}c}AfAA`}{{{b{Gj}}c}AfAA`}{{{b{Gl}}c}AfAA`}{{{b{Gn}}c}AfAA`}{{{b{H`}}c}AfAA`}{{{b{Hb}}c}AfAA`}{{{b{Cj}}c}AfAA`}{{{b{Hh}}c}AfAA`}{{{b{Hj}}c}AfAA`}{{{b{Hl}}c}AfAA`}{{{b{Hn}}c}AfAA`}{{{b{I`}}c}AfAA`}{{{b{Ib}}c}AfAA`}{{{b{Id}}c}AfAA`}{{{b{Ah}}c}AfAA`}{{Anc}j{{Aj{j}}}}0{{jAAd}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIjB`}j}8{{AlIj}j}{{AnIj}j}{{jIj}j}{jAAf}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{O`{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{In}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjJdJf}j}```{{AnIn}j}{{{b{j}}{b{{Nb{Cn}}}}Nd}{{Af{DfAd}}}}={O`j}{bc{}}00000000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMn}000000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnAAh}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}};{{{b{Dh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{b{{Af{AAjAAl}}}}000000000{bAAn}000000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlIj}j}{{AnIj}j}{{jIj}j}`{{}c{}}000000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Hdj}Hd}0{{Hfj}Hf}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{Hfjjj}Hf}{{Hdjjj}Hd}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{HdJh}Hd}{{Hd{Bl{n}}}Hd}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}3{cc{}}87{{}In}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}3``{{Kfj{Ej{B`}}{Dn{El}}AB`}j}{Kfj}=<{{KfJh}j}1{{KfjJh}j}{{Kfn}j}333=<;3:3983333333333{{Kfj}j}44{{Kf{Bl{n}}jABb}j}15{{Kf{b{E`}}}j}65066666662:98;6656`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABd}}}ABd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABd}}}Jl}{Inf}{{{b{ABd}}{b{ABd}}}B`}{{{b{ABd}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABd}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABd}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7```````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABf}}}ABf}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABf}}}Jl}{Inf}{{{b{ABf}}{b{ABf}}}B`}{{{b{ABf}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABf}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABf}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABh}}}Jl}{Inf}{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABh}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABh}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{ABl{{Dn{ABj}}}}}{{AC`{}{{If{ABn}}}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cACb}{{ABl{ABn}}}{{Bb{{A`{ABn}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjIj}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jjJdJf}j}0{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjIj}j}{{{b{E`}}jOn}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHh}j}0``{{jjIjB`}j}6{{jjJdJf}j}0````````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Oh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ACd}}ABj}{{Af{ABjAd}}}}{{{b{ACd}}}ACd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}00{In{{b{Cdc}}}{}}00{c{{Af{ACd}}}Jl}{Inf}00{{{b{ACd}}{b{ACd}}}B`}{{b{b{c}}}B`{}}00{{{b{ACd}}{b{CdLb}}}{{Af{fLd}}}}{cc{}}00{{{ACh{ACf}}}ACd}{{{b{ACj}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{}In}00{{}c{}}00{{{ACh{ACf}}{Bl{Cn}}B`B`}Oh}{{{Bl{Cn}}}ACj}{{{b{ACd}}c}AfAA`}{bc{}}{{{b{{A`{Ij}}}}}{{Af{ACdAd}}}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Oh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACj}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACd}}}{{Af{{Dn{Ij}}Ad}}}}{bAAn}00;;;`{{AAfB`}j}{AAfj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{AAfjB`}j}{{AAfj}j}1{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}37{{AAfjIn}j}4{{AAf{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}In}{{}c{}}{{AAf{b{E`}}B`}j}{{AAf{Bl{Cn}}{Bl{In}}}j}:>>{{AAfInACl}j}0{{AAfjjB`}j}0{{AAfjjB`Cl}j}{AAfj}{{AAfjj}j}?;;?;??????{{AAfCnHjj}j}{{AAfj}j}{{AAfHj}j}{{AAf{Bl{Jh}}{Bl{n}}Hjj}j}{{AAfIn}j}{{AAfjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABnc}{{ABl{ABj}}}{{Bn{ACn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{Bj{{ABl{f}}}}}}}}{{ABnB`}ABn}{{ADfc}ABn{{Bb{{A`{j}}}}}}{{}ADh}`{{ADjB`}ADj}{{{Ab{ADl}}ADn}{{ABl{ABn}}}}{{ABnABncc}ABn{{Aj{j}}}}{{ADfcAE`}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}10{{{b{ADh}}}Ln}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{ABnABn}``{{{b{AEd}}}f}{{ABn{AEf{{b{E`}}Cn}}B`}ABn}{{ABnCnB`}ABn}{{{b{AEd}}}AEd}{{{b{ABn}}}ABn}{{{b{ADf}}}ADf}{{{b{ADn}}}ADn}{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{ADh}}}ADh}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AF`}}}{{Bl{{b{AFb}}}}}}0{{{b{AEh}}}{{Bl{{b{AFb}}}}}}{{{b{AEl}}}{{Bl{{b{AFb}}}}}}``{{ADjAFd}ADj}{ABn{{ABl{ABj}}}}{ABn{{ABl{AEd}}}}{{{b{CdABn}}}{{ABl{AE`}}}}{ADhADh}{{{b{AF`}}{Dn{ABn}}}{{ABl{ABn}}}}0{{{b{AEh}}{Dn{ABn}}}{{ABl{ABn}}}}{{{b{ADh}}ADh}B`}{ABnABn}{{ABnABn{Bl{n}}}ABn}{{}ABn}{{}ADn}{{}AEj}{{}AEn}{{}ADh}{In{{b{c}}}{}}000000000{In{{b{Cdc}}}{}}000000000{{{b{ABn}}}{{ABl{Mn}}}}000{{ADhADh}ADh}{Inf}0{{{b{CdAEd}}}f}{{ABne}ABn{{Aj{Ah}}}{{Ih{}{{If{c}}}}}}222222220{{ABn{Bl{{Dn{j}}}}}ABn}8{{{b{ABn}}B`}{{ABl{Mn}}}}{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdADh}}c}f{{Ih{}{{If{ADh}}}}}}{{{b{AEd}}}{{Bl{{ABl{ABj}}}}}}{{ABnIn}{{ABl{ABj}}}}{{{b{AEd}}}{{ABl{ABj}}}}{{ABnc}ABn{{Aj{j}}}}0{{ABnj}ABn}{ADjABn}{AF`{{ABl{ABn}}}}0{AEh{{ABl{ABn}}}}{AEl{{ABl{ABn}}}}210{ABnABn}{{{b{ADh}}{b{CdLb}}}{{Af{fLd}}}}0000{{ADjB`}ADj}{cc{}}00{KbABn}{ADfABn}2222222{Ln{{Bl{ADh}}}}{LnADh}00{cADh{{Ih{}{{If{ADh}}}}}}{{{b{E`}}}{{Bl{ADh}}}}{{ABnABncc}ABn{{Aj{j}}}}{{{b{ABn}}}ADh}{{{b{AF`}}}B`}0{{{b{AEh}}}B`}`{{ABne}ADf{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABnjcAFf}ADf{{Bb{{A`{j}}}}}}1{{ADf{Bl{In}}}ABn}``{{ADjAFh}ADj}```{{}In}0000000008{{{b{CdADh}}ADh}f}{{ADhADh}ADh}{{{b{ADh}}ADh}B`}{{}c{}}000000000{ADh}{{{b{ADh}}}B`}0{{{b{ADh}}}{{AFj{ADh}}}}{{{b{ADh}}}{{AFl{ADh}}}}{{ABnABnccAFn}ABn{{Bb{{A`{j}}}}}}{ABnADj}{{ADjB`}ADj}{{ADj{Dn{j}}}ABn}{ABnABn}{AG`ABn}1{{ABnABncc}ABn{{Aj{j}}}}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABnAEb}ABn}``{{AElB`}AEl}`{{ABncAGb{Bl{{Ab{Lf}}}}{Bl{{b{E`}}}}}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ABnACdAGb{Bl{AE`}}B`}ABn}777{{ABnABnc}{{ABl{ABn}}}{{Aj{n}}}}8{{{b{AF`}}}{{Bl{In}}}}{{{b{AEh}}}{{Bl{In}}}}{{{b{AEl}}}{{Bl{In}}}}````>{cAEh{{Bb{AGd}}}}{cAEl{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}}AEh}{{{Ab{{A`{AGf}}}}}AEl}{AGhAEh}{AGhAEl}{ADhADh}{ABnABn}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{ACn}}}}``{ABn{{ABl{{Ol{ABjABj}}}}}}{{ABnjOn}ABn}{{{b{AF`}}}B`}{{{b{AEh}}}B`}{{{b{AEl}}}B`}``{{{b{CdADh}}ADh}f}{{ABneiB`}ABn{{Bb{E`}}}{{Ih{}{{If{c}}}}}{{Bb{E`}}}{{Ih{}{{If{g}}}}}}98{{ABnjcA@b}ADf{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{Bl{{b{AGj}}}}}}{{{b{AEh}}}{{Bl{{b{AGj}}}}}}{{{b{AEl}}}{{Bl{{b{AGj}}}}}}```{{AGlAGnB`}ABn}{{cAEj}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEj}{{ABl{ABn}}}}{{AGhAEj}{{ABl{ABn}}}}{{cAEn}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEn}{{ABl{ABn}}}}{{AGhAEn}{{ABl{ABn}}}}``{{}ADh}{{{b{CdABn}}{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{AE`}}}}{{ABnc}ABn{{Bb{{A`{j}}}}}}0{{ABnABncc}ABn{{Aj{j}}}}{{{b{CdADh}}ADhB`}f}{{{b{ABn}}{ADb{AD`}}{ADb{ADd}}}f}{{ABnc}ABn{{Aj{j}}}}{{ABnce}ABn{{Aj{j}}}{{Aj{j}}}}{{ABncAH`}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHb}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHb}{{ABl{f}}}}{{ABncAHd}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHf}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHf}{{ABl{f}}}}`{{ABnClAEb}ABn}{{ABncDb}ABn{{Jb{n}}}}{{ABncDb}ABn{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{b{AGh}}}}{{{b{AEh}}}{{b{AGh}}}}{{{b{AEl}}}{{b{AGh}}}}{{ABnIj}ABn}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}{{ADjc}ADj{{Aj{n}}}}{ABnABn}3{{ABnAEb}ABn}{{ADf{Bl{In}}}ABn}{ABn{{ABl{AHh}}}}0{{{b{ABn}}B`}{{ABl{Mn}}}}{bc{}}000000007{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{{{b{CdABn}}AHj}{{Bl{{ABl{{Bl{ABj}}}}}}}}{bAAn}000000000={{ABn{Bl{{Dn{Mn}}}}AHl}ABn}{{ABn{Bl{e}}AHl}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABn{Bl{{Dn{n}}}}AHl}ABn}1{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABnId}ABn}`{{ADjAHn}ADj}{{ABnIj}ABn}{{}c{}}000000000{{ADjABn}ADj}{{AEl{Bl{AI`}}}AEl}{{AEhB`}AEh}{{AEh{Bl{AFb}}}AEh}{{AEl{Bl{AFb}}}AEl}{{ABnB`}ABn}0{{ABnj}ABn}{{ABnc}ABn{{Bb{{A`{j}}}}}}022{{AEh{Bl{n}}}AEh}{{ABnc}ABn{{Bb{{A`{ABn}}}}}}7{{AEh{Bl{AE`}}}AEh}{{AEhAIb}AEh}{{AEhIj}AEh}:::{{AElB`}AEl}5{{AEl{Bl{n}}}AEl}{{AEh{Bl{In}}}AEh}>=={{AF`c}AF`{{Aj{{Bl{In}}}}}}{{AEhc}AEh{{Aj{{Bl{In}}}}}}2{{AElc}AEl{{Aj{{Bl{In}}}}}}{{AEl{Bl{In}}}AEl}>{{AEh{Bl{AId}}}AEh}{{ABnADh}ABn}{{AF`{Ab{{A`{AGf}}}}}AF`}0{{ABnB`}ABn}0{{AEh{Bl{Ij}}}AEh}{{AEhB`}AEh}{{AF`B`}AF`}1=3{{AF`c}AF`{{Aj{{Bl{AGj}}}}}}{{ABnc{Bl{AEb}}}ABn{{Aj{n}}}}{{AEh{Bl{AGj}}}AEh}{{AEhc}AEh{{Aj{{Bl{AGj}}}}}}{{AEl{Bl{AGj}}}AEl}{{AElc}AEl{{Aj{{Bl{AGj}}}}}}{{AEh{Bl{AE`}}}AEh}{{AEl{Bl{AE`}}}AEl}{{AEhc}{{ABl{AEh}}}{{Bn{AGl}{{Bj{{ABl{AGl}}}}}}}}1{{AEhIj}AEh}={{AEhIn}AEh}0>{{AF`AGh}AF`}{{AEhAGh}AEh}{{AElAGh}AEl}{{ABnB`}ABn}{{AEhB`}AEh}01{ABnABn}{{{b{ABj}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{ABl{ABj}}}{{Aj{n}}}{{Ih{}{{If{c}}}}}{{Aj{n}}}{{Ih{}{{If{g}}}}}{{Aj{n}}}{{Ih{}{{If{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{{{b{ADl}}}B`}00{{{b{ADl}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AFf}}}AFf}{{{b{A@b}}}A@b}{{{b{Jd}}}Jd}{{{b{AFn}}}AFn}{{{b{AFh}}}AFh}{{{b{AHn}}}AHn}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AIh}}}AIh}{{{b{A@`}}}A@`}{{{b{AHf}}}AHf}{{{b{AIj}}}AIj}{{{b{AIl}}}AIl}{{{b{ACb}}}ACb}{{{b{Kb}}}Kb}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{Jd}}{b{Jd}}}AIn}`{{b{b{c}}}AIn{}}``{{{b{Kb}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{}AFf}{{}A@b}{{}AFn}{{}AHn}{{}AH`}{{}AHb}{{}AHd}{{}A@`}{{}AHf}{{}AIl}{{}ACb}{{}Kb}{In{{b{c}}}{}}00000000000000000{In{{b{Cdc}}}{}}00000000000000000`{{{b{Kb}}}{{Af{MnAd}}}}0{c{{Af{AFf}}}Jl}{c{{Af{A@b}}}Jl}{c{{Af{Jd}}}Jl}{c{{Af{AFn}}}Jl}{c{{Af{AFh}}}Jl}{c{{Af{AHn}}}Jl}{c{{Af{AH`}}}Jl}{c{{Af{AHb}}}Jl}{c{{Af{AHd}}}Jl}{c{{Af{AIh}}}Jl}{c{{Af{A@`}}}Jl}{c{{Af{AHf}}}Jl}{c{{Af{AIj}}}Jl}{c{{Af{AIl}}}Jl}{c{{Af{ACb}}}Jl}{c{{Af{Kb}}}Jl}`{{{b{Kb}}}{{Af{{`{Nl}}Ad}}}}{Inf}00000000000000000{{{b{AFf}}{b{AFf}}}B`}{{{b{A@b}}{b{A@b}}}B`}{{{b{Jd}}{b{Jd}}}B`}{{{b{AFn}}{b{AFn}}}B`}{{{b{AFh}}{b{AFh}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AHb}}{b{AHb}}}B`}{{{b{AHd}}{b{AHd}}}B`}{{{b{AIh}}{b{AIh}}}B`}{{{b{A@`}}{b{A@`}}}B`}{{{b{AHf}}{b{AHf}}}B`}{{{b{AIj}}{b{AIj}}}B`}{{{b{AIl}}{b{AIl}}}B`}{{{b{ACb}}{b{ACb}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AFf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@b}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Jd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{ADl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AHn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AH`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{ACb}}{b{CdLb}}}{{Af{fLd}}}}`{cc{}}000{AFhAFn}11111111111{AJ`AIj}222`{{{b{AIj}}}Cn}{{{b{AJb}}{Dn{Bh}}{b{AFf}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}{{{b{AFf}}{b{Cdc}}}fNf}{{{b{A@b}}{b{Cdc}}}fNf}{{{b{Jd}}{b{Cdc}}}fNf}{{{b{AFn}}{b{Cdc}}}fNf}{{{b{AFh}}{b{Cdc}}}fNf}{{{b{AHn}}{b{Cdc}}}fNf}{{{b{AH`}}{b{Cdc}}}fNf}{{{b{AHb}}{b{Cdc}}}fNf}{{{b{AHd}}{b{Cdc}}}fNf}{{{b{AIh}}{b{Cdc}}}fNf}{{{b{A@`}}{b{Cdc}}}fNf}{{{b{AHf}}{b{Cdc}}}fNf}{{{b{AIj}}{b{Cdc}}}fNf}{{{b{AIl}}{b{Cdc}}}fNf}{{{b{ACb}}{b{Cdc}}}fNf}``````{{}In}00000000000000000{{}c{}}00000000000000000{{{b{Kb}}}}{{{b{AFh}}}B`}{{{b{Jd}}{Bl{{b{E`}}}}}B`}1{{{b{Jd}}}B`}2{{{b{AIj}}}B`}{{{b{AHn}}{b{AFh}}}{{Af{fAd}}}}2``{Obj}{Jdj}{AJfj}{AIjj}````{AIjAIj}`{{{b{Jd}}}Cl}8{{JdCl}Jd}`1{{{b{AHn}}}B`}{Jd};{ClJd}{AFhAFn}{{{b{ADl}}AJh}{{Af{{Bl{ABj}}Ad}}}}````{{{b{E`}}}Jd}`{{{b{Jd}}{b{Jd}}}{{Bl{AIn}}}}```{Kb{{Af{{Dn{Ij}}Ad}}}}`{{{b{AJb}}{Dn{Bh}}{b{A@b}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}`{{{b{ADl}}AJh}{{Af{ABjAd}}}}{{{b{ADl}}{Bl{In}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{AFf}}c}AfAA`}{{{b{A@b}}c}AfAA`}{{{b{Jd}}c}AfAA`}{{{b{AFn}}c}AfAA`}{{{b{AFh}}c}AfAA`}{{{b{AHn}}c}AfAA`}{{{b{AH`}}c}AfAA`}{{{b{AHb}}c}AfAA`}{{{b{AHd}}c}AfAA`}{{{b{AIh}}c}AfAA`}{{{b{A@`}}c}AfAA`}{{{b{AHf}}c}AfAA`}{{{b{AIj}}c}AfAA`}{{{b{AIl}}c}AfAA`}{{{b{ACb}}c}AfAA`}{{{b{Kb}}c}AfAA`}`{{{b{AFn}}}B`}````{{{b{AFn}}}{{b{n}}}}`{Kb{{Af{AHhAd}}}}{{{b{AIj}}}{{Bl{AJ`}}}}{bc{}}000000000000000{bMn}00`{{{b{AHb}}c}{{AJj{c}}}AJl}{{{b{AHf}}c}{{AJn{c}}}AJl}{{{b{Jd}}Cl{Bl{{b{AIf}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AK`}}}}}{{Bn{AK`}{{Bj{Cl}}}}}}{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000000{{}{{Af{c}}}{}}00000000000000000{{{b{E`}}}{{Af{JdAd}}}}0{b{{Af{AAjAAl}}}}00{bAAn}00000000000000000`{{}c{}}00000000000000000{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{AFnAFd}AFn}`{{AFn{Bl{n}}}AFn}{{{b{AHb}}ABjc}{{Af{fAd}}}AJl}{{{b{AHf}}ABjc}{{Af{fAd}}}AJl}```````````````````````````````````````````````````````","D":"GLl","p":[[1,"reference"],[5,"Private",3720],[1,"unit"],[5,"MetaNameSpace",5,3721],[6,"Expr",5,3722],[5,"StructNameSpace",5,3723],[5,"PlSmallStr",3724],[1,"slice"],[5,"Arc",3725],[6,"PolarsError",3726],[6,"Result",3727],[6,"Selector",5,3728],[10,"Into",3729],[5,"ArrayNameSpace",5,3730],[5,"ListNameSpace",5,3731],[1,"bool"],[10,"AsRef",3729],[10,"FunctionOutputField",5,3732],[5,"SpecialEq",5,3732],[6,"Column",3733],[17,"Output"],[6,"Option",3734],[10,"Fn",3735],[10,"Send",3736],[10,"Sync",3736],[0,"mut"],[6,"VisitRecursion",3737],[10,"FnMut",3735],[6,"FunctionExpr",5,3738],[1,"i64"],[6,"DataType",3739],[5,"SortOptions",3740],[5,"SortMultipleOptions",3740],[5,"FieldsMapper",5,3741],[5,"Field",3742],[10,"ColumnsUdf",5,3732],[10,"Any",3743],[6,"AggExpr",5,3722],[5,"Vec",3744],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1839,3745],[6,"Operator",5,3722],[10,"Clone",3746],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3732],[5,"UserDefinedFunction",5,3747],[10,"ColumnBinaryUdf",5,3732],[6,"CastOptions",3748],[5,"CategoricalNameSpace",5,3749],[5,"When",5,3750],[5,"Then",5,3750],[5,"ChainedWhen",5,3750],[5,"ChainedThen",5,3750],[6,"LazySerde",5,3722],[6,"Excluded",5,3722],[6,"BitwiseFunction",5,3751],[6,"BitwiseAggFunction",5,3751],[6,"BooleanFunction",5,3752],[6,"CategoricalFunction",5,3753],[6,"TemporalFunction",5,3754],[6,"PowFunction",5,3755],[6,"StringFunction",5,3756],[6,"StructFunction",5,3757],[5,"DatetimeArgs",5,3758],[5,"DurationArgs",5,3758],[5,"RollingCovOptions",5,3759],[5,"StrptimeOptions",5,3759],[5,"JoinOptions",5,3759],[6,"WindowType",5,3759],[6,"WindowMapping",5,3759],[6,"NestedType",5,3759],[5,"UnpivotArgsDSL",5,3759],[17,"Item"],[10,"IntoIterator",3760],[1,"u8"],[10,"ExprEvalExtension",5,3761],[1,"usize"],[1,"f64"],[10,"IntoVec",3762],[5,"Duration",3038,3763],[6,"ClosedWindow",3764],[6,"TimeUnit",3765],[10,"BinaryUdfOutputField",5,3732],[10,"Deserializer",3766],[10,"Deserialize",3766],[5,"Series",3767],[6,"DslPlan",3038,3768],[6,"NullBehavior",3769],[5,"DateLikeNameSpace",1861,3770],[10,"PartialEq",3771],[10,"Sized",3736],[10,"ListNameSpaceExtension",5,3772],[5,"EWMOptions",3773],[6,"FillNullStrategy",3774],[5,"Formatter",3775],[5,"Error",3775],[10,"UdfSchema",5,3776],[1,"u16"],[1,"i16"],[1,"f32"],[1,"u32"],[1,"i8"],[6,"InequalityOperator",3777],[6,"RangeFunction",3778],[6,"ListFunction",3779],[6,"ArrayFunction",3780],[6,"BinaryFunction",3781],[6,"BusinessFunction",3782],[5,"String",3783],[5,"FunctionOptions",3784],[5,"Schema",3785],[6,"Context",3768],[10,"Hasher",3786],[6,"InterpolationMethod",3787],[10,"IntoListNameSpace",5,3772],[10,"Display",3775],[6,"ClosedInterval",3788],[5,"ExprNameNameSpace",5,3789],[10,"Literal",3038,3790],[10,"FnOnce",3735],[5,"SuperTypeOptions",3791],[5,"PythonUdfExpression",2414,3792],[5,"UnitVec",3793],[1,"tuple"],[6,"QuantileMethod",3794],[5,"RankOptions",3038,3795],[5,"RollingGroupOptions",3038,3796],[5,"RollingOptionsFixedWindow",3797],[5,"Float64Type",3798],[5,"ChunkedArray",3799],[10,"Copy",3736],[5,"RollingOptionsDynamicWindow",3800],[6,"SearchSortedSide",3801],[10,"Serializer",3802],[10,"Serialize",3802],[6,"IsSorted",3803],[5,"StringNameSpace",2479,3804],[6,"ListToStructArgs",3805],[5,"CompactString",3806],[6,"ToCompactStringError",3806],[5,"TypeId",3743],[6,"Roll",3807],[6,"NonExistent",3808],[6,"RollingFunction",2224,3809],[6,"RollingFunctionBy",2262,3810],[6,"TrigonometricFunction",2295,3811],[5,"DataFrame",3812],[8,"PolarsResult",3726],[5,"LazyFrame",2547],[10,"IntoParallelIterator",3813],[5,"UnionArgs",3038,3784],[5,"PythonFunction",2414,3814],[5,"PyAny",3815],[5,"Py",3816],[5,"PythonGetOutput",2414,3792],[1,"char"],[5,"Node",3817],[6,"IR",3818],[5,"Arena",3817],[6,"AExpr",3819],[5,"LazyGroupBy",2547],[5,"OptFlags",2547,3820],[5,"JoinBuilder",2547],[10,"AnonymousScan",3038,3821],[5,"ScanArgsAnonymous",2547,3822],[8,"SchemaRef",3823],[8,"IdxSize",3824],[5,"InProcessQuery",2547,3825],[8,"PlHashMap",3826],[5,"LazyCsvReader",2547,3827],[5,"ScanArgsIpc",2547,3828],[5,"LazyJsonLineReader",2547,3829],[5,"ScanArgsParquet",2547,3830],[10,"LazyFileListReader",2547,3831],[5,"CloudOptions",3832],[6,"JoinCoalesce",3833],[5,"DynamicGroupOptions",3038,3796],[6,"JoinType",3038,3833],[5,"Iter",3834],[5,"IterNames",3834],[5,"JoinArgs",3038,3833],[10,"IntoLazy",2547],[8,"AllowedOptimizations",2547,3820],[5,"Path",3835],[5,"PathBuf",3835],[6,"ScanSources",3836],[5,"RowIndex",3837],[8,"Schema",3823],[8,"PyObject",3816],[5,"CsvWriterOptions",3038,3838],[5,"IpcWriterOptions",3038,3839],[5,"JsonWriterOptions",3038,3840],[5,"ParquetWriteOptions",3038,3841],[5,"IRPlan",3818],[6,"SinkType",3784],[6,"UniqueKeepStrategy",3812],[6,"JoinValidation",3038,3833],[8,"NonZeroUsize",3842],[6,"CsvEncoding",3843],[6,"NullValues",3843],[6,"Tz",3844],[6,"RankMethod",3038,3795],[6,"LiteralValue",3038,3790],[5,"AnonymousScanOptions",3038,3784],[6,"Ordering",3771],[6,"AnyValue",3845],[10,"PolarsTemporalGroupby",3038,3796],[6,"GroupsProxy",3846],[5,"Null",3038,3790],[5,"AnonymousScanArgs",3038,3821],[5,"IpcWriter",3839],[10,"Write",3847],[5,"ParquetWriter",3848],[5,"NaiveDateTime",3849],[8,"OpaqueColumnUdf",5],[15,"Quantile",1727],[15,"Min",1727],[15,"Max",1727],[15,"IsBetween",2148],[15,"Any",2148],[15,"All",2148],[15,"SortBy",1737],[15,"Filter",1737],[15,"Cast",1737],[15,"Sort",1737],[15,"Gather",1737],[15,"RenameAlias",1737],[15,"Ternary",1737],[15,"Function",1737],[15,"Window",1737],[15,"AnonymousFunction",1737],[15,"Slice",1737],[15,"BinaryExpr",1737],[15,"QCut",2151],[15,"Entropy",2151],[15,"Log",2151],[15,"Hist",2151],[15,"Cut",2151],[15,"Correlation",2151],[15,"Round",2151],[15,"TopK",2151],[15,"TopKBy",2151],[15,"RoundSF",2151],[15,"EwmMeanBy",2151],[15,"Clip",2151],[15,"BackwardFill",2151],[15,"ForwardFill",2151],[15,"Random",2151],[15,"GatherEvery",2151],[15,"ValueCounts",2151],[15,"Rank",2151],[15,"EwmMean",2151],[15,"EwmStd",2151],[15,"EwmVar",2151],[15,"ReplaceStrict",2151],[15,"CumCount",2151],[15,"CumSum",2151],[15,"CumProd",2151],[15,"CumMin",2151],[15,"CumMax",2151],[15,"ConcatHorizontal",2196],[15,"ConcatVertical",2196],[15,"ExtractGroups",2196],[15,"JsonDecode",2196],[15,"PadStart",2196],[15,"PadEnd",2196],[15,"SplitExact",2196],[15,"Contains",2196],[15,"Find",2196],[15,"Replace",2196],[15,"DatetimeFunction",2216],[15,"CorrCov",2259],[15,"GroupBy",3665],[15,"Union",3665],[15,"Sort",3665],[15,"Scan",3665],[15,"ExtContext",3665],[15,"DataFrameScan",3665],[15,"IR",3665],[15,"Select",3665],[15,"HStack",3665],[15,"MapFunction",3665],[15,"Cache",3665],[15,"Filter",3665],[15,"Distinct",3665],[15,"Slice",3665],[15,"Sink",3665],[15,"Join",3665],[15,"HConcat",3665],[15,"PythonScan",3665],[15,"Range",3717]],"r":[[8,3722],[23,3730],[32,3732],[35,3751],[36,3751],[38,3752],[45,3753],[46,3749],[50,3750],[51,3750],[55,3732],[57,3732],[78,3758],[90,3758],[101,3722],[106,3722],[107,3761],[108,3789],[116,3741],[117,3789],[127,3738],[128,3732],[134,3732],[149,3772],[165,3759],[172,3722],[179,3731],[180,3772],[195,3721],[214,3759],[221,3722],[222,3722],[234,3755],[246,3732],[258,3759],[267,3728],[279,3732],[287,3756],[294,3759],[296,3757],[297,3723],[305,3754],[307,3750],[329,3776],[332,3759],[335,3747],[340,3750],[343,3759],[344,3759],[392,3850],[396,3851],[403,3851],[406,3852],[410,3853],[412,3854],[427,3855],[429,3855],[435,3856],[436,3857],[438,3853],[440,3750],[528,3858],[535,3857],[538,3853],[635,3851],[636,3850],[637,3850],[638,3859],[639,3859],[640,3859],[649,3860],[651,3851],[655,3851],[660,3854],[661,3758],[662,3854],[663,3854],[825,3853],[827,3850],[828,3850],[829,3758],[934,3853],[980,3851],[983,3859],[1059,3853],[1106,3850],[1145,3854],[1146,3854],[1203,3857],[1205,3857],[1215,3853],[1218,3853],[1222,3790],[1232,3852],[1243,3853],[1246,3853],[1254,3857],[1258,3851],[1259,3857],[1262,3851],[1263,3857],[1271,3857],[1275,3851],[1302,3857],[1304,3853],[1317,3860],[1324,3853],[1327,3857],[1331,3851],[1335,3861],[1348,3860],[1349,3860],[1429,3860],[1437,3853],[1443,3857],[1447,3851],[1454,3750],[1457,3854],[1641,3853],[1696,3750],[1839,3745],[1860,3749],[1861,3770],[1935,3751],[1936,3751],[1938,3752],[1942,3753],[1992,3738],[2057,3755],[2097,3756],[2105,3757],[2110,3754],[2143,3738],[2144,3738],[2145,3738],[2146,3738],[2147,3738],[2218,3753],[2222,3755],[2229,3809],[2266,3810],[2310,3811],[2339,3758],[2340,3758],[2341,3850],[2342,3851],[2344,3851],[2345,3852],[2346,3854],[2347,3855],[2348,3855],[2349,3856],[2350,3857],[2351,3857],[2352,3851],[2353,3850],[2355,3850],[2357,3859],[2360,3859],[2361,3859],[2362,3860],[2363,3851],[2364,3851],[2365,3854],[2366,3854],[2367,3758],[2368,3854],[2369,3854],[2372,3850],[2373,3850],[2374,3758],[2375,3851],[2376,3859],[2379,3850],[2380,3854],[2381,3854],[2382,3857],[2383,3857],[2384,3852],[2385,3857],[2386,3857],[2387,3857],[2391,3857],[2396,3857],[2397,3860],[2398,3857],[2399,3851],[2400,3861],[2401,3860],[2402,3860],[2405,3860],[2406,3857],[2407,3854],[2408,3854],[2414,3792],[2415,3792],[2416,3862],[2418,3814],[2419,3792],[2420,3792],[2479,3804],[2541,3747],[2547,3820],[2555,3825],[2558,3827],[2559,3831],[2562,3829],[2564,3820],[2571,3822],[2572,3828],[2573,3830],[3038,3821],[3039,3821],[3040,3784],[3048,3838],[3055,3768],[3056,3763],[3058,3796],[3076,3839],[3078,3833],[3079,3833],[3080,3833],[3081,3840],[3083,3790],[3084,3790],[3090,3790],[3091,3790],[3097,3841],[3098,3796],[3101,3795],[3102,3795],[3104,3796],[3120,3784],[3521,3863]],"b":[[668,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[669,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[670,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[759,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[760,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[761,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[762,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[763,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[832,"impl-Expr"],[833,"impl-PartialEq-for-Expr"],[837,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[838,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[945,"impl-Debug-for-Expr"],[946,"impl-Display-for-Expr"],[949,"impl-Display-for-Operator"],[950,"impl-Debug-for-Operator"],[952,"impl-Display-for-BitwiseFunction"],[953,"impl-Debug-for-BitwiseFunction"],[955,"impl-Display-for-BooleanFunction"],[956,"impl-Debug-for-BooleanFunction"],[957,"impl-Debug-for-CategoricalFunction"],[958,"impl-Display-for-CategoricalFunction"],[959,"impl-Debug-for-TemporalFunction"],[960,"impl-Display-for-TemporalFunction"],[961,"impl-Debug-for-PowFunction"],[962,"impl-Display-for-PowFunction"],[963,"impl-Display-for-StringFunction"],[964,"impl-Debug-for-StringFunction"],[965,"impl-Display-for-StructFunction"],[966,"impl-Debug-for-StructFunction"],[967,"impl-Display-for-FunctionExpr"],[968,"impl-Debug-for-FunctionExpr"],[997,"impl-From%3Cu16%3E-for-Expr"],[999,"impl-From%3Ci16%3E-for-Expr"],[1000,"impl-From%3Ci32%3E-for-Expr"],[1001,"impl-From%3Ci64%3E-for-Expr"],[1002,"impl-From%3Cu8%3E-for-Expr"],[1003,"impl-From%3Cf32%3E-for-Expr"],[1004,"impl-From%3Cu32%3E-for-Expr"],[1005,"impl-From%3Cu64%3E-for-Expr"],[1006,"impl-From%3Cf64%3E-for-Expr"],[1007,"impl-From%3Cbool%3E-for-Expr"],[1008,"impl-From%3Ci8%3E-for-Expr"],[1009,"impl-From%3CAggExpr%3E-for-Expr"],[1010,"impl-From%3C%26str%3E-for-Expr"],[1015,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1016,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1017,"impl-From%3CBitwiseFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1018,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1020,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1021,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1022,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1023,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1024,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1025,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1026,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1027,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1036,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[1038,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[1039,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[1040,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[1051,"impl-From%3C%26str%3E-for-Selector"],[1053,"impl-From%3CPlSmallStr%3E-for-Selector"],[1054,"impl-From%3CExpr%3E-for-Selector"],[1055,"impl-From%3CString%3E-for-Selector"],[1078,"impl-Expr"],[1079,"impl-Hash-for-Expr"],[1387,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1388,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1389,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1390,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1391,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[2245,"impl-Debug-for-RollingFunction"],[2246,"impl-Display-for-RollingFunction"],[2281,"impl-Debug-for-RollingFunctionBy"],[2282,"impl-Display-for-RollingFunctionBy"],[2325,"impl-Debug-for-TrigonometricFunction"],[2326,"impl-Display-for-TrigonometricFunction"],[2597,"impl-OptFlags"],[2598,"impl-Flags-for-OptFlags"],[2735,"impl-UpperHex-for-OptFlags"],[2736,"impl-Debug-for-OptFlags"],[2737,"impl-Binary-for-OptFlags"],[2738,"impl-LowerHex-for-OptFlags"],[2739,"impl-Octal-for-OptFlags"],[2744,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2745,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2754,"impl-OptFlags"],[2755,"impl-Flags-for-OptFlags"],[2996,"impl-LazyFileListReader-for-LazyCsvReader"],[2997,"impl-LazyCsvReader"],[2998,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2999,"impl-LazyJsonLineReader"],[3015,"impl-LazyCsvReader"],[3016,"impl-LazyFileListReader-for-LazyCsvReader"],[3017,"impl-LazyJsonLineReader"],[3018,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3381,"impl-Debug-for-Duration"],[3382,"impl-Display-for-Duration"],[3385,"impl-Debug-for-JoinType"],[3386,"impl-Display-for-JoinType"],[3387,"impl-Display-for-JoinValidation"],[3388,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKIKEAEEABMAGQAVADAAAgA1AAIAOQAAADsAEwBQAAoAXAAIAGYAAwBsAAAAbgAZAIkAGwCmAAMAqwAIALUADgDFABUA3AAGAOQAKAAOAQkAGQEQACsBBwA1ARoAUQEDAFYBAABYASsAhQEBAIsBAACOAQEAkgEAAJgBAACaAQAApQEAAKgBAACvAQEAsgEBALcBAAC6AQAAxAFKABECAAATAgAAFQIBABsCAAAiAlkAfwIAAJkCDQCoAmUAEAMAABIDJAA4AwAAOgMAAEADAABCAxYAWgM4AJsDAACfAwEApQMAAKsDAACuAyYA1gMAAOYDAADoAwsA9wMEAP0DBwANBAAADwQCABcEAAAcBAAAHgQCACIEAAAkBAAAKQQBAC4EBAA2BAAAOAQTAE8EAQBSBAAAVAQkAKMEAgCnBAEAqwQAAL0EAADFBAAA0gQAANUEBQDeBAAA4QQAAOYEAADyBAAA9QQCAP0EAgABBQMACgUBAA4FAgATBQAAFQUBABsFAAAiBQAAJAUBACsFAAAtBQAANQUBADsFAAA9BQAAPwUAAEQFAgBeBQUAZQUcAIsFAACSBQAAmQUAAJ4FAACgBQEAowUAAKkFAQCvBQAAsQUAALMFAgC6BR4A2gUKAOkFSQA1BgAAOAYyAHYGAAB4BgAAegYmAKQGAQCpBgAAtgYAALoGAQC/BhMA1QYAANcGAADZBgEA3AYBAN8GBgDnBkgAMQcDADYHAgA7BwIAQQcDAEkHAQBSBwIAWAcAAFoHAABnBwAAdgcDAH4HSQHJCAEAzAgfAO0IAQDwCCcAGQkBABwJBwAoCQAANgkAAEMJAQBKCQEAVQkCAFkJAwBiCQMAagkGAHIJAQB1CRsAlAkEAJwJEwCxCQMAuAkCALwJAAC/CQAAxAkCAMkJAQDpCQMA/AkDAAMKAQAMCgIAEAoJAB0KAAAfCgAAJwoAACoKFABACgEARQoaAGQKAQBoCgAAbQoAAHEKGACPCgIAkwoHAKsKAACtCgEAsAoEALkKAQDECgAAygoCANIKAQDVCgwA8AoAAPgKAAD6CgEA/woBAAILAAAECwAACAsAAA0LAwASCwUAGwsBACELAwAtCwMAMgsBADcLAwA8CwAAPwsAAEgLAABNCwEAVwsBAFoLCABkCx8AhgsAAIgLAACLCwEAjgsJAJkLAACbCwEApQsBAK4LAQC1CwAAtwsAALkLAADJCwAAywsAANYLAQDdCwcA6AsAAOsLAQDuCwAA8AsDAPYLAAD5CwAA/QsDAAUMAAAHDAYAEQwCABUMAAAYDAoAJAwCACkMAAArDAAAMQwTAEgMWgCnDIsANA0TAEwNAABYDQAAXA0AAF4NEQBxDQAAdA0RAJgNAwCdDQIAoQ0AAKQNAwCrDQUAsg0BALYNAAC5DQIAvQ0BAMENAADDDQEAyA0VAN8NdgBXDgQAXQ4rAA=="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHHHNNNNNNNNNNNNNNHNNHHHHHHHHHNHHNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_cross","is_ie","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","count_ones","count_zeros","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","leading_ones","leading_zeros","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","trailing_ones","trailing_zeros","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[236,"polars_ops::prelude"],[238,"polars_ops::series"],[295,"polars_ops::chunked_array::binary"],[296,"polars_core::datatypes"],[297,"polars_ops::chunked_array::binary::namespace"],[298,"polars_ops::chunked_array::scatter"],[299,"polars_utils::index"],[300,"polars_core::series"],[301,"polars_error"],[302,"core::marker"],[303,"core::option"],[304,"core::iter::traits::collect"],[305,"polars_ops::chunked_array::list::namespace"],[306,"polars_core::datatypes::aliases"],[307,"polars_core::frame::column"],[308,"polars_core::chunked_array::ops::sort::options"],[309,"polars_core::frame"],[310,"dyn_clone::sealed"],[311,"polars_utils::pl_str"],[312,"polars_ops::frame::join::hash_join"],[313,"polars_ops::frame::join::args"],[314,"polars_ops::frame::join::cross_join"],[315,"core::fmt"],[316,"core::convert"],[317,"core::hash"],[318,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[319,"polars_arrow::array::primitive"],[320,"alloc::string"],[321,"core::result"],[322,"compact_str"],[323,"core::any"],[324,"polars_ops::series::ops::arg_min_max"],[325,"polars_ops::series::ops"],[326,"polars_core::chunked_array::ops::search_sorted"],[327,"polars_ops::series::ops::various"],[328,"polars_ops::frame::join::general"],[329,"polars_ops::series::ops::clip"],[330,"polars_ops::series::ops::horizontal"],[331,"polars_ops::series::ops::index"],[332,"polars_ops::series::ops::bitwise"],[333,"polars_ops::series::ops::negate"],[334,"polars_ops::series::ops::not"],[335,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`25432543254325432255443325443322543Ej3654F`0004476514765666514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222````2222Gh033333333`00`````````3``33300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}0000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{DlDf}{cc{}}000{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}00{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}>{{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{{d{Ad}}}{{Af{Ad}}}}0{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}0{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0>>{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00??{{CbDb}{{Af{Ad}}}}1{dc{}}{{{d{Ad}}}{{Af{Ad}}}}0{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"El","p":[[10,"AsBinary",4,295],[1,"reference"],[8,"BinaryChunked",296],[10,"BinaryNameSpaceImpl",4,297],[1,"u8"],[1,"slice"],[8,"BooleanChunked",296],[10,"ChunkedSet",4,298],[8,"IdxSize",299],[5,"Series",300],[8,"PolarsResult",301],[10,"Copy",302],[17,"Item"],[6,"Option",303],[10,"IntoIterator",304],[8,"UInt32Chunked",296],[10,"AsList",25],[8,"ListChunked",296],[10,"ListNameSpaceImpl",25,305],[1,"str"],[1,"bool"],[8,"StringChunked",296],[8,"IdxCa",306],[6,"Column",307],[1,"i64"],[1,"usize"],[5,"SortOptions",308],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",309],[5,"Private",310],[1,"unit"],[5,"PlSmallStr",311],[10,"JoinDispatch",80,312],[5,"JoinArgs",80,313],[0,"mut"],[6,"JoinCoalesce",80,313],[6,"JoinType",80,313],[6,"JoinValidation",80,313],[10,"CrossJoin",80,314],[1,"tuple"],[8,"ChunkJoinOptIds",80,313],[5,"Formatter",315],[8,"Result",315],[10,"DataFrameJoinOps",80],[10,"Into",316],[10,"Hasher",317],[10,"SeriesJoin",80,318],[8,"InnerJoinIds",80,313],[5,"PrimitiveArray",319],[8,"LeftJoinIds",80,313],[5,"String",320],[6,"Result",321],[5,"CompactString",322],[6,"ToCompactStringError",322],[5,"TypeId",323],[10,"ArgAgg",238,324],[10,"SeriesSealed",238,325],[6,"SearchSortedSide",238,326],[10,"SeriesMethods",238,327],[5,"Error",315]],"r":[[4,295],[5,297],[6,298],[26,305],[80,313],[81,313],[84,314],[88,313],[89,313],[90,313],[91,312],[93,313],[94,313],[97,313],[103,318],[108,328],[111,328],[114,328],[144,312],[236,80],[237,76],[239,324],[242,326],[243,327],[244,325],[251,329],[252,329],[253,329],[257,330],[258,331],[259,332],[260,332],[275,331],[278,332],[279,332],[280,330],[281,330],[282,330],[283,333],[284,334],[285,335],[286,330],[288,332],[289,332]],"b":[[171,"impl-Debug-for-JoinType"],[172,"impl-Display-for-JoinType"],[173,"impl-Debug-for-JoinValidation"],[174,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAEQAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAkALYADADIAAMAzQAAAM8AIADxAAUA+QACAP8AEAARAQEAFwEOAA=="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj12312312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{{}Bj}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgATAFIABABaAAAAXQAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_parse","try_parse_interval","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[56,"polars_time::chunkedarray::string::infer"],[82,"polars_time::prelude"],[285,"polars_time::series"],[306,"polars_utils::pl_str"],[307,"chrono::naive::datetime"],[308,"polars_time::windows::duration"],[309,"polars_time::windows::group_by"],[310,"polars_core::datatypes::time_unit"],[311,"polars_arrow::legacy::time_zone"],[312,"core::option"],[313,"polars_core::chunked_array::logical::datetime"],[314,"polars_error"],[315,"polars_time::round"],[316,"polars_core::datatypes"],[317,"chrono::naive::time"],[318,"polars_core::chunked_array::logical::time"],[319,"polars_time::truncate"],[320,"polars_time::upsample"],[321,"polars_core::frame"],[322,"polars_core::utils"],[323,"dyn_clone::sealed"],[324,"polars_time::chunkedarray::string::patterns"],[325,"core::fmt"],[326,"core::hash"],[327,"core::result"],[328,"core::any"],[329,"core::clone"],[330,"polars_time::windows::bounds"],[331,"polars_time::windows::window"],[332,"core::cmp"],[333,"polars_core::datatypes::dtype"],[334,"polars_core::frame::group_by::proxy"],[335,"alloc::vec"],[336,"alloc::string"],[337,"core::ops::function"],[338,"compact_str"],[339,"polars_core::series"],[340,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn11111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<>>33221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<<<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}0{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}0000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{{{n{Bd}}}{{Ad{f}}}}0{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",306],[5,"NaiveDateTime",307],[5,"Duration",82,308],[6,"ClosedWindow",82,309],[6,"TimeUnit",310],[6,"Tz",311],[1,"reference"],[6,"Option",312],[8,"DatetimeChunked",313],[8,"PolarsResult",314],[1,"bool"],[10,"PolarsRound",0,315],[8,"StringChunked",316],[5,"NaiveTime",317],[8,"TimeChunked",318],[10,"PolarsTruncate",0,319],[10,"PolarsUpsample",0,320],[1,"str"],[5,"DataFrame",321],[10,"IntoVec",322],[5,"Private",323],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,324],[1,"usize"],[5,"Formatter",325],[8,"Result",325],[10,"Hasher",326],[6,"Result",327],[5,"TypeId",328],[5,"DatetimeInfer",56],[10,"Clone",329],[10,"PolarsNumericType",316],[10,"StrpTimeParser",56],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",56],[1,"i64"],[5,"Bounds",82,330],[6,"Label",82,309],[6,"StartBy",82,309],[5,"Window",82,331],[6,"Ordering",332],[6,"DataType",333],[5,"BoundsIter",82,331],[8,"GroupsSlice",334],[8,"TimeZone",333],[5,"Vec",335],[1,"tuple"],[5,"String",336],[17,"Output"],[10,"Fn",337],[5,"CompactString",338],[6,"ToCompactStringError",338],[1,"u32"],[10,"AsSeries",285],[5,"Series",339],[10,"TemporalMethods",285],[8,"Int32Chunked",316],[8,"Int8Chunked",316],[8,"BooleanChunked",316],[8,"Int16Chunked",316]],"r":[[1,309],[2,308],[5,315],[6,319],[7,320],[9,331],[11,340],[12,340],[18,340],[22,24],[30,324],[83,330],[84,331],[85,309],[88,308],[90,309],[98,309],[100,285],[104,331],[173,308],[174,308],[204,309],[205,309]],"b":[[188,"impl-Debug-for-Duration"],[189,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPgAFwAAAAkADQAFABQAAAAXABcAMAACADQAEQBHAAEASgATAF8ACQBqAFcAyQAAAMsAAQDPAAoA4QABAOUAAgDpAAAA7AACAPAAAQD1AAgA/wAAAAEBAAADAR0AJQEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCCQCRKMMHHHRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNNKMHHHFKFNNNNNNNNNNNNNNMNNNNNNNHNNNHNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRIKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNJSFFKNNNNNNNNNNNNNHNNNNNNNNNNNNNNNHNMNNNNNMNNNKKKKMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","algebraic_ops","aliases","arena","binary_search","cache","cardinality_sketch","cell","chunks","clmul","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","python_function","slice","sort","sync","sys","total_ord","unitvec","vec","Abs","AbsDiff","abs_diff","max_abs_diff","alg_add_f64","alg_mul_f64","alg_sum_f64","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","last_node","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","CardinalitySketch","borrow","borrow_mut","clone","clone_into","clone_to_uninit","combine","default","deref","deref_mut","drop","estimate","from","init","insert","into","new","to_owned","try_from","try_into","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","Chunks","as_slice","borrow","borrow_mut","chunk_size","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","init","into","into_iter","new","next","next_back","size_hint","skip_in_place","to_owned","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","portable_prefix_xorsum_inclusive","prefix_xorsum","prefix_xorsum_inclusive","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","nan_value","FloorDivMod","wrapping_floor_div_mod","arc_map","range_portion","try_arc_map","BytesHash","DirtyHash","HashPartitioner","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","dirty_hash","","drop","","eq","equivalent","","fmt","folded_multiply","from","","hash","hash_to_partition","","init","","into","","is_null","new","","num_partitions","peel_total_ord","to_owned","","to_total_ord","tot_eq","tot_hash","try_from","","try_into","","type_id","","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NonZeroIdxSize","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","into_py_dict_bound","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PySerializeWrap","PythonFunction","TrySerializeToBytes","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","deserialize","","deserialize_pyobject_bytes_maybe_cloudpickle","drop","","eq","equivalent","","fmt","from","","","init","","into","","serialize","","serialize_pyobject_with_cloudpickle_fallback","to_owned","try_deserialize_bytes","","try_from","","try_into","","try_serialize_to_bytes","","type_id","","Extrema","Slice2Uninit","SliceAble","SortedSlice","as_uninit","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::algebraic_ops"],[53,"polars_utils::aliases"],[71,"polars_utils::arena"],[138,"polars_utils::binary_search"],[143,"polars_utils::cache"],[180,"polars_utils::cardinality_sketch"],[201,"polars_utils::cell"],[221,"polars_utils::chunks"],[246,"polars_utils::clmul"],[252,"polars_utils::cpuid"],[254,"polars_utils::fixedringbuffer"],[277,"polars_utils::float"],[284,"polars_utils::floor_divmod"],[286,"polars_utils::functions"],[289,"polars_utils::hashing"],[341,"polars_utils::idx_vec"],[385,"polars_utils::index"],[449,"polars_utils::io"],[452,"polars_utils::itertools"],[462,"polars_utils::itertools::enumerate_idx"],[489,"polars_utils::mem"],[494,"polars_utils::min_max"],[501,"polars_utils::mmap"],[601,"polars_utils::nulls"],[606,"polars_utils::ord"],[608,"polars_utils::partitioned"],[627,"polars_utils::pl_str"],[685,"polars_utils::priority"],[708,"polars_utils::python_function"],[754,"polars_utils::slice"],[765,"polars_utils::sort"],[767,"polars_utils::sync"],[794,"polars_utils::sys"],[808,"polars_utils::total_ord"],[858,"polars_utils::vec"],[872,"num_traits"],[873,"core::cmp"],[874,"core::marker"],[875,"core::fmt"],[876,"core::iter::traits::collect"],[877,"core::clone"],[878,"core::result"],[879,"serde::de"],[880,"core::option"],[881,"core::hash"],[882,"core::default"],[883,"core::ops::function"],[884,"serde::ser"],[885,"core::any"],[886,"core::borrow"],[887,"alloc::sync"],[888,"core::ops::range"],[889,"alloc::vec"],[890,"core::slice::iter"],[891,"polars_error"],[892,"std::path"],[893,"std::io::error"],[894,"std::fs"],[895,"core::iter::traits::iterator"],[896,"core::ops::arith"],[897,"num_traits::cast"],[898,"num_traits::identities"],[899,"pyo3::marker"],[900,"pyo3::types::dict"],[901,"pyo3::instance"],[902,"core::iter::traits::exact_size"],[903,"core::iter::traits::double_ended"],[904,"memmap2"],[905,"memmap2::advice"],[906,"polars_utils::mmap::private"],[907,"bytes::bytes"],[908,"std::io"],[909,"hashbrown::map"],[910,"hashbrown::raw_entry"],[911,"std::ffi::os_str"],[912,"core::convert"],[913,"alloc::string"],[914,"compact_str"],[915,"alloc::borrow"],[916,"alloc::boxed"],[917,"polars_utils::python_function::serde_wrap"],[918,"core::mem::maybe_uninit"],[919,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00```ACb```````0AjAlACdACf43210``B`Bd101101010100010101010110000101111110010111110111011101010110111`Dn``0``EjEd100000101010110000100101001001010`F`0000000000000000000`Fd000000000000000000`Fh00000000000000000000000`````````Fl000000000000000000000`Fn00000`G```````GfGh101010101010Gj2212222`212`1212122112212222121212``Gn00000000000000000000000000000000000000000````I``````HlHn10`101010101010111010110221101010Id122021If2Ih443434343````Jb0`000000`Jd0000000000000000000000000``````Kl00000Ld````Kn0Lb12012Lf123013030303223301230123011`2301233001303300330230123012220110300020330302301230123012Ib0`00```Ml00000000000000000Nd0`0000000000000000000000000000000000000000000000000000000`Oj000000000000000000000`````OnOl10000101010`100000100101010`0A@`121210121````A@fA@j`A@l0A@n0```AAd0000000000000000000000000``AAf00000000000ABd````0`AAj0``00000000000000000000000101AA`AAl11AAn02213333```ABh``00ABj`ABlABn1AC`","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}{{AbAb}Ab}0{cAb{{Af{}{{Ad{Ab}}}}}}````````22222{Ahc{}}{Ah{{Aj{ce}}}{}{}}{Ah{{Al{c}}}{}}22``{{{Bb{An{B`{c}}}}c}Bd{}}{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{An{B`{c}}}}}Bf{}}{{{Bb{Bd}}}Bd}{{{Bb{{B`{c}}}}}{{B`{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{{Bb{Bd}}{Bb{Bd}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Bd}{{}{{B`{c}}}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{Bd}}}Bn}{c{{Bl{{B`{e}}}}}BnC`}{AhBf}0{{{Bb{An{B`{c}}}}Bd}BdBh}{{{Bb{Bd}}{Bb{Bd}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Bd}}{Bb{AnCd}}}Cf}{{{Bb{{B`{c}}}}{Bb{AnCd}}}Cfl}{cc{}}0{{{Bb{{B`{c}}}}Bd}{{Bb{c}}}{}}{{{Bb{An{B`{c}}}}{Ch{Bd}}}{{Ch{{Bb{Anc}}}}}{}}{{{Bb{An{B`{c}}}}Bd}{{Bb{Anc}}}{}}{{{Bb{{B`{c}}}}{Bb{c}}}{{Cj{Bd}}}{}}3{{{Bb{Bd}}{Bb{Anc}}}BfCl}{{}Ah}0{{}c{}}0{{{Bb{{B`{c}}}}}Cb{}}{{{Bb{An{B`{c}}}}}{{Cj{Bd}}}{}}{{{Bb{{B`{c}}}}}Ah{}}{{}{{B`{c}}}{}}{{{Bb{Bd}}{Bb{Bd}}}{{Cj{Bj}}}}{{{Bb{An{B`{c}}}}}{{Cj{c}}}{}}{{{Bb{An{B`{c}}}}Bdc}c{}}{{{Bb{An{B`{c}}}}Bde}BfCn{{Db{c}{{D`{c}}}}}}{{{Bb{Bd}}c}BlDd}{{{Bb{{B`{c}}}}e}BlDfDd}{{{Bb{An{B`{c}}}}BdBd}Bf{}}{{{Bb{An{B`{c}}}}Bd}cCn}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{An{B`{c}}}}Bde}{{Bl{Bf`}}}Cn{{Dh{c}{{D`{{Bl{c`}}}}}}}}{BbDj}0{{{Bb{{B`{c}}}}}Dl{}}{Ah{{B`{c}}}{}}`{{{Bb{Dn}}e}{{Bl{AhAh}}}{}{{Dh{{Bb{c}}}{{D`{Bj}}}}}}{{{Bb{{E`{c}}}}c}AhEb}0{{{Bb{Dn}}e}Ah{}{{Dh{{Bb{c}}}{{D`{Cb}}}}}}``{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{Ed{ce}}}}}{{Ed{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Ed{ce}}}{EfEh}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{An{Ej{ceg}}}}cCb}e{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{cc{}}0{{{Bb{{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{g}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{Ang}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}i}{{Bb{Ang}}}{}{{En{c}}EfEh}{}{{Db{{Bb{e}}}{{D`{g}}}}}}{{}Ah}0{{{Bb{An{Ed{ce}}}}ce}{{Bb{Ane}}}{EfEh}{}}{{}c{}}0{{gAh}{{Ej{ceg}}}{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{Ah{{Ed{ce}}}{EfEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}0{{{Bb{An{Ed{eg}}}}{Bb{c}}k}{{Bl{{Bb{Ang}}i}}}{}{{En{c}}EfEh}{}{}{{Db{{Bb{e}}}{{D`{{Bl{gi}}}}}}}}{{}{{Bl{c}}}{}}0{BbDj}0`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{F`}}}F`}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{AnF`}}{Bb{F`}}}Bf}{{}F`}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{F`}}}Ah}{cc{}}{{}Ah}{{{Bb{AnF`}}Fb}Bf}{{}c{}}8{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{}{{Fd{c}}}Cn}>=<{c{{Fd{c}}}{}};{Ffc{}}{{{Bb{{Fd{c}}}}}{}El}{{{Bb{An{Fd{c}}}}}{{Bb{Anc}}}El}=;{{{Fd{c}}}c{}}4{{}};:9`{{{Bb{{Fh{c}}}}}{{Bb{{E`{c}}}}}{}}98{{{Bb{{Fh{c}}}}}Ah{}}{{{Bb{{Fh{c}}}}}{{Fh{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Fh{c}}}}{Bb{AnCd}}}Cfl}{cc{}}{{}Ah}{{}c{}}0{{{Bb{{E`{c}}}}Ah}{{Fh{c}}}{}}{{{Bb{An{Fh{c}}}}}{{Cj{e}}}{}{}}0{{{Bb{{Fh{c}}}}}{{Fj{Ah{Cj{Ah}}}}}{}}{{{Bb{An{Fh{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{FbFb}Fb}0{FbFb}000{{}Cb}0`{{{Bb{{Fl{c}}}}}{{Fj{{Bb{{E`{c}}}}{Bb{{E`{c}}}}}}}{}}{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Fl{c}}}}}Ah{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{An{Fl{c}}}}}Bf{}}{AhBf}{{{Bb{An{Fl{c}}}}cAh}Ahj}{cc{}}{{}Ah}{{}c{}}{{{Bb{{Fl{c}}}}}Cb{}}09{Ah{{Fl{c}}}{}}{{{Bb{An{Fl{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Fl{c}}}}c}{{Cj{Bf}}}{}}<{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`{{}Cb}0{{{Bb{Fn}}}Cb}10{{}Fn}`{{G`G`}{{Fj{G`G`}}}}{{{Gb{c}}e}{{Gb{c}}}Bh{{Dh{c}{{D`{c}}}}}}{{AhAh{Gd{Ah}}}{{Gd{Ah}}}}{{{Gb{c}}g}{{Bl{{Gb{c}}e}}}Bh{}{{Dh{c}{{D`{{Bl{ce}}}}}}}}```{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{Gf}}}Gf}{{{Bb{Gh}}}Gh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{{{Bb{Gj}}}Fb}{{{Bb{Gf}}}Fb}{AhBf}0{{{Bb{Gf}}{Bb{Gf}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Gf}}{Bb{AnCd}}}Cf}{{FbFb}Fb}{cc{}}0{{{Bb{Gf}}{Bb{Anc}}}BfCl}{{FbAh}Ah}{{{Bb{Gh}}Fb}Ah}{{}Ah}0{{}c{}}0{{{Bb{Gf}}}Cb}{{{Cj{{Bb{{E`{Gl}}}}}}Fb}Gf}{{AhFb}Gh}{{{Bb{Gh}}}Ah}{ce{}{}}{Bbc{}}0{{{Bb{Gf}}}c{}}{{{Bb{Gf}}{Bb{Gf}}}Cb}<{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0{Gfc{}}``{{{Bb{An{Gn{c}}}}}{{Bb{An{E`{c}}}}}{}}0{{{Bb{{Gn{c}}}}}{{Bb{{E`{c}}}}}{}}0{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Gn{c}}}}}Ah{}}{{{Bb{An{Gn{c}}}}}Bf{}}{{{Bb{{Gn{c}}}}}{{Gn{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Gn{c}}}{}}{Ah{{Bb{c}}}{}}{{{Bb{{Gn{c}}}}}{{Bb{e}}}{}{}}{Ah{{Bb{Anc}}}{}}7{AhBf}{{{Bb{{Gn{c}}}}{Bb{{Gn{c}}}}}CbH`}{{Bb{Bb{c}}}Cb{}}0{{{Bb{An{Gn{c}}}}e}Bf{}{{Af{}{{Ad{c}}}}}}{{{Bb{{Gn{c}}}}{Bb{AnCd}}}Cfl}{cc{}}{{{Hb{c}}}{{Gn{c}}}{}}{{{Bb{{E`{c}}}}}{{Gn{c}}}Bh}{e{{Gn{c}}}{}{{Af{}{{Ad{c}}}}}}{{}Ah}{{}c{}}{{{Bb{{Gn{c}}}}}Cb{}}{{{Bb{{Gn{c}}}}}{{Hd{c}}}{}}{{{Bb{An{Gn{c}}}}}{{Hf{c}}}{}}{{{Bb{{Gn{c}}}}}Ah{}}{{}{{Gn{c}}}{}}{{{Bb{An{Gn{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Gn{c}}}}c}Bf{}}0{{{Bb{An{Gn{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{Ah{{Gn{c}}}{}}``````````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{E`{Hh}}}}Hh}{{Hj{Bf}}}}{{{Bb{Hl}}}Hl}{{{Bb{Hn}}}Hn}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{Hl}}{Bb{Hl}}}Cb}{{Bb{Bb{c}}}Cb{}}0{Hn{{Fj{HhHh}}}}{{{Bb{Hl}}{Bb{AnCd}}}Cf}{{{Bb{Hn}}{Bb{AnCd}}}Cf}{HhHl}{cc{}}0{{{Bb{{I`{}{{Ad{c}}}}}}Ah}cIb}0{{{Bb{Hl}}}Hh}{{}Ah}0`{{{Bb{AnHn}}}{{Bb{AnFb}}}}{{}c{}}0{{{Bb{Id}}}Cb}{{{Bb{Hn}}}Cb}{{{Bb{Hl}}}Cb}{{{Bb{c}}}Cb{}}{{{Bb{Id}}}Ah}{{}Hl}{{}Hn}{{{Bb{If}}}Ah}{{HhHh}Hn}{{IhFb}Hh}{{{Bb{Hl}}}{{Cj{Hh}}}}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0{{{Bb{Ij}}Il}In}{{{Bb{Ij}}}{{Hj{J`}}}}0`{JbCb}{Jb{{Hb{c}}}{}}`{Jb{{Jd{JbHh}}}}{Jb{{Jd{JbDl}}}}{{Jbcg}CbAf{}{{Dh{e}{{D`{Cb}}}}}}{{Jbcg}{{Cj{Bj}}}Af{}{{Dh{e}{{D`{{Cj{Bj}}}}}}}}{Jb{{Bl{ce}}}{}{}}{Jb{{Bl{{Hb{c}}e}}}{}{}}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Jd{ce}}}}}{{Jd{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Jd{ce}}}AhJf{{Jh{}{{D`{}}}}JjJlJnj}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Jd{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}0{K`{{Kd{Kb}}}}{{{Bb{{Jd{ce}}}}}AhKf{{Jh{}{{D`{}}}}JjJlJnj}}{c{{Jd{ce}}}{}Kh}{{{Bb{An{Jd{ce}}}}}{{Cj{g}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}{}}{{{Bb{An{Jd{ce}}}}}{{Cj{{Fj{e}}}}}{KfKj}{{Jh{}{{D`{}}}}JjJlJnj}}{{{Bb{An{Jd{ce}}}}Ah}{{Cj{g}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}{}}{{{Bb{An{Jd{ce}}}}Ah}{{Cj{{Fj{e}}}}}{KfKj}{{Jh{}{{D`{}}}}JjJlJnj}}{{{Bb{{Jd{ce}}}}}{{Fj{Ah{Cj{Ah}}}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{{Bb{{E`{Gl}}}}}Bf}000{{{Bb{{E`{c}}}}}{{Bb{An{E`{c}}}}}j}`{{KlKl}Kl}000{{{Bb{Kl}}{Bb{Kl}}}Cb}0`````{{{Bb{Kn}}L`}{{Bl{BfIl}}}}{{{Bb{Kn}}L`AhAh}{{Bl{BfIl}}}}{{{Bb{Lb}}}Gl}{{{Bb{Kn}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Ld}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Lb}}}{{Bb{{E`{Gl}}}}}}{Bb{{Bb{c}}}{}}000{{{Bb{An}}}{{Bb{Anc}}}{}}000{{{Bb{Ld}}}Ld}{{{Bb{Lf}}}Lf}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{}Ld}{Ah{{Bb{c}}}{}}:{{{Bb{Ld}}}{{Bb{c}}}{}}111{Ah{{Bb{Anc}}}{}}000{AhBf}000{{{Bb{AnLb}}}Bf}{{{Bb{J`}}}{{Hj{Bf}}}}{{{Bb{Kn}}{Bb{AnCd}}}{{Bl{BfLh}}}}{{{Bb{Ld}}{Bb{AnCd}}}Cf}{{{Bb{Lf}}{Bb{AnCd}}}Cf}{{{Bb{Lb}}{Bb{AnCd}}}Cf}{cc{}}0{{{Hb{Gl}}}Ld}{LdLf}22{LjLd}{LjLf}{{{Bb{J`}}}{{Hj{Ld}}}}{{{Gb{Lb}}}Ld}{c{{Ll{Lf}}}Ln}{{{Bb{{E`{Gl}}}}}Lf}{{{Bb{{E`{Gl}}}}}Ld}8{{{Hb{Gl}}}Lf}{{}Ah}000{{}c{}}000{{{Bb{Kn}}}{{Bl{BfIl}}}}{Kn{{Bl{M`Il}}}}{c{{Bl{KnIl}}}Mb}={{{Bb{J`}}}{{Hj{Lb}}}}{{{Bb{J`}}Md}{{Hj{Lb}}}}{{{Bb{Lf}}}Ah}{{{Bb{Ld}}}Bf}{{{Bb{AnLf}}{Bb{An{E`{Gl}}}}}{{Ll{Ah}}}}{{{Bb{AnLf}}Ah}Ld}3{{{Bb{AnKn}}AhMf}{{Bl{BfIl}}}}{{{Bb{AnLf}}Mh}{{Ll{Fb}}}}{{{Bb{Ld}}{Gd{Ah}}}Ld}{Bbc{}}0{Ld{{Hb{Gl}}}}8{c{{Bl{e}}}{}{}}000{{}{{Bl{c}}}{}}000{BbDj}000{{{Bb{Kn}}}{{Bl{BfIl}}}}```{{{Bb{{Ib{}{{Mj{c}}}}}}}Cb{}}{{{Ib{}{{Mj{c}}}}}c{}}{{{Bb{c}}{Bb{c}}}Bj{hFn}}0`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{cc{}}{{}Ah}{{{Bb{{Ml{ceg}}}}}{{Bb{{E`{{Mn{ceg}}}}}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}}{{Bb{An{Hb{{Mn{ceg}}}}}}}{}{}{}}{{}c{}}{{{Hb{{Mn{ceg}}}}}{{Ml{ceg}}}{}{}{}}{{{Bb{{Ml{ceg}}}}Fb}{{N`{ceg}}}{}{}{}}{{{Bb{{Ml{ceg}}}}Fb}{{Fj{{N`{ceg}}Ah}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}Fb}{{Fj{{Nb{ceg}}Ah}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}Fb}{{Nb{ceg}}}{}{}{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}```{{{Bb{Nd}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Nd}}}{{Bb{Ij}}}}{{{Bb{Nd}}}{{Bb{Nf}}}}{{{Bb{Nd}}}{{Bb{Nh}}}}1{Bb{{Bb{c}}}{}}2{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{Nd}}}Nd}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{Nd}}{Bb{Nd}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Nd}{Ah{{Bb{c}}}{}}{{{Bb{Nd}}}{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{c{{Bl{Nd}}}Bn}{AhBf}{{{Bb{Nd}}{Bb{c}}}Cb{{Nj{Nf}}El}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Nd}}{Bb{AnCd}}}Cf}0{{{Bb{Nl}}}Nd}{{{Bb{Nf}}}Nd}{NnNd}{cc{}}{NlNd}{cNd{{Af{}{{Ad{{O`{Nf}}}}}}}}{cNd{{Af{}{{Ad{{Ob{Nf}}}}}}}}{cNd{{Af{}{{Ad{Nl}}}}}}{cNd{{Af{}{{Ad{{Bb{Nf}}}}}}}}{cNd{{Af{}{{Ad{{Bb{Od}}}}}}}}{cNd{{Af{}{{Ad{Od}}}}}}{cNd{{Af{}{{Ad{{Bb{Nd}}}}}}}}{cNd{{Af{}{{Ad{Nd}}}}}};;8{{{Bb{Nd}}{Bb{Anc}}}BfCl}{{}Ah}{{}c{}}{NdNl}{{{Bb{Nd}}{Bb{Nd}}}{{Cj{Bj}}}}{{{Bb{Nd}}c}BlDd}{Bbc{}}{BbNl}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{Bb{{Bl{NnOf}}}}{BbDj}{{{Bb{AnNd}}Od}Cf}{{{Bb{AnNd}}Oh}Cf}{{{Bb{AnNd}}{Bb{Nf}}}Cf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Oj{ce}}}}}{{Oj{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}Bj{EbEh}{}}{{Bb{Bb{c}}}Bj{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}CbEh{}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{Oj{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}{{Cj{Bj}}}{EbEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{Ol}}}Ol}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{{On{e}}}}}BnA@`}{c{{Bl{Ol}}}Bn}{{{Bb{{E`{Gl}}}}}{{Hj{c}}}{{A@d{A@b}}}}{AhBf}0{{{Bb{Ol}}{Bb{Ol}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Ol}}{Bb{AnCd}}}Cf}{cc{}}0{A@bOl}{{}Ah}0{{}c{}}0{{{Bb{{On{{Bb{c}}}}}}e}BlA@`Dd}{{{Bb{Ol}}c}BlDd}{{{Bb{A@b}}}{{Hj{{Hb{Gl}}}}}}{Bbc{}}{{{Bb{{E`{Gl}}}}}{{Hj{A@`}}}}{{{Bb{{E`{Gl}}}}}{{Hj{Ol}}}}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{A@`}}}{{Hj{{Hb{Gl}}}}}}{{{Bb{Ol}}}{{Hj{{Hb{Gl}}}}}}{BbDj}0````{{{Bb{A@f}}}{{Bb{{E`{{A@h{c}}}}}}}{}}{{{Bb{A@j}}}Cb}{{{Bb{{E`{Gl}}}}}Fb}{{{Bb{A@l}}}{{Cj{{Bb{c}}}}}{}}0{{{Bb{A@n}}{Gd{Ah}}}A@n}0{{e{Bb{An{Hb{Gl}}}}Ah}{{Bb{An{E`{g}}}}}{AA`j}{{Af{}{{Ad{c}}}}}{Jjj}}{{{Bb{AAb}}{Bb{{E`{{Fj{HhHh}}}}}}{Bb{An{Hb{Hh}}}}}Bf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{AAd{c}}}}}{{AAd{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{{AAd{c}}}}}{{Bb{c}}}{}}{AhBf}{{{Bb{{AAd{c}}}}{Bb{{AAd{c}}}}}CbH`}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{AAd{c}}}}{Bb{AnCd}}}Cfl}{{}{{AAd{c}}}{}}{cc{}}1{{{Bb{{AAd{c}}}}}{}{}}{{}Ah}{{}c{}}{{{Bb{{AAd{c}}}}}Cb{}}55{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}``{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{AAf}}}Fb}><;876```````54{AAhAAh}{AbAb}{{{Bb{{AAj{c}}}}}{{AAj{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}BjAA`}{{Bb{Bb{c}}}Bj{}}:9{{{Bb{{AAj{c}}}}}FbGj}9{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}CbAAl}{{Bb{Bb{c}}}Cb{}}0{cc{}}{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}CbAA`}0{{{Bb{{AAj{c}}}}{Bb{Ane}}}BfAAnCl}{{}Ah}{{}c{}}{{{Bb{{AAj{c}}}}}CbIb}447{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}{{Cj{Bj}}}AA`}{ce{}{}}{Bbc{}}{{{Bb{{ABd{}{{AB`{c}}{ABb{e}}}}}}}c{EfEh}{}}{{{Bb{AA`}}{Bb{AA`}}}Bj}{{{Bb{AAl}}{Bb{AAl}}}Cb}{{{Bb{AA`}}{Bb{AA`}}}Cb}0{{{Bb{AAn}}{Bb{Anc}}}BfCl}{{{Bb{{E`{AAn}}}}{Bb{Anc}}}BfCl}223{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{{AAj{c}}}eIb{}}``````{{{Bb{{ABh{}{{ABf{c}}}}}}g}{{Hb{e}}}{}{}{{Dh{{Bb{c}}}{{D`{e}}}}}}{{{ABh{}{{ABf{c}}}}g}{{Hb{e}}}{}{}{{Dh{c}{{D`{e}}}}}}{{{Bb{AnABj}}Ahc}Bfj}{{{Bb{An{Hb{c}}}}{Bb{An{Hb{e}}}}g}Bf{}{}{{Dh{ce}{{D`{{Cj{{Fj{ce}}}}}}}}}}{ABl{{Fj{AhAh}}}}{{{Bb{AnABn}}c}Bf{}}{{{Bb{ABl}}}{{Fj{AhAh}}}}{{AhAb}AC`}","D":"A@l","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",872],[10,"PartialOrd",873],[10,"Copy",874],[10,"Debug",875],[10,"Send",874],[10,"Sync",874],[1,"f64"],[17,"Item"],[10,"IntoIterator",876],[1,"usize"],[8,"PlHashMap",53],[8,"PlHashSet",53],[0,"mut"],[5,"Arena",71],[1,"reference"],[5,"Node",71],[1,"unit"],[10,"Clone",877],[6,"Ordering",873],[6,"Result",878],[10,"Deserializer",879],[10,"Deserialize",879],[1,"bool"],[5,"Formatter",875],[8,"Result",875],[1,"array"],[6,"Option",880],[10,"Hasher",881],[10,"Default",882],[17,"Output"],[10,"FnOnce",883],[10,"Serializer",884],[10,"Serialize",884],[10,"FnMut",883],[5,"TypeId",885],[1,"u32"],[10,"ExponentialSearch",138],[1,"slice"],[10,"Ord",873],[5,"FastFixedCache",143],[10,"Hash",881],[10,"Eq",873],[5,"FastCachedFunc",143],[10,"Sized",874],[10,"Borrow",886],[5,"CardinalitySketch",180],[1,"u64"],[5,"SyncUnsafeCell",201],[1,"never"],[5,"Chunks",221],[1,"tuple"],[5,"FixedRingBuffer",254],[10,"IsFloat",277],[10,"FloorDivMod",284],[5,"Arc",887],[5,"Range",888],[5,"BytesHash",289],[5,"HashPartitioner",289],[10,"DirtyHash",289],[1,"u8"],[5,"UnitVec",341],[10,"PartialEq",873],[5,"Vec",889],[5,"Iter",890],[5,"IterMut",890],[8,"IdxSize",385],[8,"PolarsResult",891],[5,"NullableIdxSize",385],[5,"ChunkId",385],[10,"Indexable",385],[10,"IsNull",601],[10,"Bounded",385],[10,"NullCount",385],[10,"ToIdx",385],[5,"Path",892],[5,"Error",893],[6,"PolarsError",891],[5,"File",894],[10,"Itertools",452],[5,"EnumerateIdx",462],[10,"Iterator",895],[10,"Add",896],[10,"FromPrimitive",897],[10,"AddAssign",896],[10,"One",898],[5,"Python",899],[5,"PyDict",900],[5,"Bound",901],[10,"ExactSizeIterator",902],[10,"Zero",898],[10,"DoubleEndedIterator",903],[10,"MinMax",494],[5,"Mmap",501,904],[6,"Advice",905],[5,"MMapSemaphore",501],[5,"MemSlice",501,906],[5,"MemReader",501],[5,"Error",875],[5,"Bytes",907],[8,"Result",893],[10,"Read",908],[5,"MmapMut",904],[10,"MmapAsRawDesc",904],[5,"MmapOptions",904],[5,"RemapOptions",904],[6,"SeekFrom",908],[17,"Inner"],[5,"PartitionedHashMap",608],[5,"HashMap",909],[5,"RawEntryBuilder",910],[5,"RawEntryBuilderMut",910],[5,"PlSmallStr",627],[1,"str"],[5,"OsStr",911],[10,"AsRef",912],[5,"String",913],[5,"CompactString",914],[6,"Cow",915],[5,"Box",916],[1,"char"],[6,"ToCompactStringError",914],[5,"Arguments",875],[5,"Priority",685],[5,"PythonFunction",708],[5,"PySerializeWrap",708,917],[10,"TrySerializeToBytes",708,917],[8,"PyObject",901],[10,"From",912],[10,"Slice2Uninit",754],[20,"MaybeUninit",918],[10,"SortedSlice",754],[10,"Extrema",754],[10,"SliceAble",754],[10,"TotalOrd",808],[5,"ThreadPool",919],[5,"SyncPtr",767],[5,"MemInfo",794],[1,"f32"],[5,"TotalOrdWrap",808],[10,"TotalEq",808],[10,"TotalHash",808],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",808],[17,"ItemIn"],[10,"ConvertVec",858],[10,"ResizeFaster",858],[10,"IntoRawParts",858],[10,"PushUnchecked",858],[10,"CapacityByFactor",858],[10,"InitHashMaps",53],[8,"PlIndexMap",53],[8,"PlIndexSet",53]],"r":[[0,385],[1,385],[504,906],[505,904],[708,917],[710,917],[712,917]],"b":[[366,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[367,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[630,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[631,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[632,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[633,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[652,"impl-Display-for-PlSmallStr"],[653,"impl-Debug-for-PlSmallStr"],[654,"impl-From%3C%26String%3E-for-PlSmallStr"],[655,"impl-From%3C%26str%3E-for-PlSmallStr"],[656,"impl-From%3CCompactString%3E-for-PlSmallStr"],[658,"impl-From%3CString%3E-for-PlSmallStr"],[659,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[660,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[661,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[662,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[663,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[664,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[665,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[666,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOICVQAAAAkACwBcAGoAAABsAAEAbwACAHQAGACPAAAAkQAPAKMABQCrAAkAtgAKAMIAAADFAAQAywABAM4AAgDTAAAA1gAAANsAAgDfAAoA6wAAAO0AEQABAQYACgEAAAwBAwASAQMAFwEKACMBGAA+AQEAQQEBAEUBAQBIAQ4AWAEVAG8BAwB0AQYAfAEnAKYBAACoAQQArwEVAMYBAADIAQQA0AEJANsBAADdAQMA4gEHAO8BCAD9ASYAJgIBACwCAgAzAgMAPgIDAEMCAgBHAgAASQIBAEwCDABaAgQAYQIFAGgCAgBsAgkAdwIaAJMCDQCiAgsArwINAL4CAADAAgQAxgIAAMgCAADKAhMA4AICAOUCFwD+AgAAAQMGAAkDBQAQAwIAFAMAABYDBQAdAwQAJAMAACYDAwAuAwMANAMLAEEDAwBGAxkAYQMCAGUDAABnAwEA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[400596,200229,54205,84226,9496,3387,8597,28362]}